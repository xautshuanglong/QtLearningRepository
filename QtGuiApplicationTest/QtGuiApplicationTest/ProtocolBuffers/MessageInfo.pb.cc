// Generated by the protocol buffer compiler.  DO NOT EDIT!
// source: MessageInfo.proto

#include "MessageInfo.pb.h"

#include <algorithm>
#include "google/protobuf/io/coded_stream.h"
#include "google/protobuf/extension_set.h"
#include "google/protobuf/wire_format_lite.h"
#include "google/protobuf/descriptor.h"
#include "google/protobuf/generated_message_reflection.h"
#include "google/protobuf/reflection_ops.h"
#include "google/protobuf/wire_format.h"
// @@protoc_insertion_point(includes)

// Must be included last.
#include "google/protobuf/port_def.inc"
PROTOBUF_PRAGMA_INIT_SEG
namespace _pb = ::PROTOBUF_NAMESPACE_ID;
namespace _pbi = ::PROTOBUF_NAMESPACE_ID::internal;
namespace com {
namespace genomics {
namespace protobuf {
template <typename>
PROTOBUF_CONSTEXPR MessageRequest::MessageRequest(
    ::_pbi::ConstantInitialized): _impl_{
    /*decltype(_impl_.description_)*/ {
    &::_pbi::fixed_address_empty_string, ::_pbi::ConstantInitialized {}
  }

  , /*decltype(_impl_.requestid_)*/ 0u

  , /*decltype(_impl_.requesttype_)*/ 0

  , /*decltype(_impl_._cached_size_)*/{}} {}
struct MessageRequestDefaultTypeInternal {
  PROTOBUF_CONSTEXPR MessageRequestDefaultTypeInternal() : _instance(::_pbi::ConstantInitialized{}) {}
  ~MessageRequestDefaultTypeInternal() {}
  union {
    MessageRequest _instance;
  };
};

PROTOBUF_ATTRIBUTE_NO_DESTROY PROTOBUF_CONSTINIT
    PROTOBUF_ATTRIBUTE_INIT_PRIORITY1 MessageRequestDefaultTypeInternal _MessageRequest_default_instance_;
template <typename>
PROTOBUF_CONSTEXPR MessageResponse::MessageResponse(
    ::_pbi::ConstantInitialized): _impl_{
    /*decltype(_impl_.description_)*/ {
    &::_pbi::fixed_address_empty_string, ::_pbi::ConstantInitialized {}
  }

  , /*decltype(_impl_.responseid_)*/ 0u

  , /*decltype(_impl_.responsetype_)*/ 0

  , /*decltype(_impl_._cached_size_)*/{}} {}
struct MessageResponseDefaultTypeInternal {
  PROTOBUF_CONSTEXPR MessageResponseDefaultTypeInternal() : _instance(::_pbi::ConstantInitialized{}) {}
  ~MessageResponseDefaultTypeInternal() {}
  union {
    MessageResponse _instance;
  };
};

PROTOBUF_ATTRIBUTE_NO_DESTROY PROTOBUF_CONSTINIT
    PROTOBUF_ATTRIBUTE_INIT_PRIORITY1 MessageResponseDefaultTypeInternal _MessageResponse_default_instance_;
template <typename>
PROTOBUF_CONSTEXPR MessagePush::MessagePush(
    ::_pbi::ConstantInitialized) {}
struct MessagePushDefaultTypeInternal {
  PROTOBUF_CONSTEXPR MessagePushDefaultTypeInternal() : _instance(::_pbi::ConstantInitialized{}) {}
  ~MessagePushDefaultTypeInternal() {}
  union {
    MessagePush _instance;
  };
};

PROTOBUF_ATTRIBUTE_NO_DESTROY PROTOBUF_CONSTINIT
    PROTOBUF_ATTRIBUTE_INIT_PRIORITY1 MessagePushDefaultTypeInternal _MessagePush_default_instance_;
template <typename>
PROTOBUF_CONSTEXPR MessagePull::MessagePull(
    ::_pbi::ConstantInitialized) {}
struct MessagePullDefaultTypeInternal {
  PROTOBUF_CONSTEXPR MessagePullDefaultTypeInternal() : _instance(::_pbi::ConstantInitialized{}) {}
  ~MessagePullDefaultTypeInternal() {}
  union {
    MessagePull _instance;
  };
};

PROTOBUF_ATTRIBUTE_NO_DESTROY PROTOBUF_CONSTINIT
    PROTOBUF_ATTRIBUTE_INIT_PRIORITY1 MessagePullDefaultTypeInternal _MessagePull_default_instance_;
template <typename>
PROTOBUF_CONSTEXPR MessageCommand::MessageCommand(
    ::_pbi::ConstantInitialized): _impl_{
    /*decltype(_impl_.cmd_)*/ {
    &::_pbi::fixed_address_empty_string, ::_pbi::ConstantInitialized {}
  }

  , /*decltype(_impl_.xmlfilename_)*/ {
    &::_pbi::fixed_address_empty_string, ::_pbi::ConstantInitialized {}
  }

  , /*decltype(_impl_.xslfilename_)*/ {
    &::_pbi::fixed_address_empty_string, ::_pbi::ConstantInitialized {}
  }

  , /*decltype(_impl_.outfilename_)*/ {
    &::_pbi::fixed_address_empty_string, ::_pbi::ConstantInitialized {}
  }

  , /*decltype(_impl_._cached_size_)*/{}} {}
struct MessageCommandDefaultTypeInternal {
  PROTOBUF_CONSTEXPR MessageCommandDefaultTypeInternal() : _instance(::_pbi::ConstantInitialized{}) {}
  ~MessageCommandDefaultTypeInternal() {}
  union {
    MessageCommand _instance;
  };
};

PROTOBUF_ATTRIBUTE_NO_DESTROY PROTOBUF_CONSTINIT
    PROTOBUF_ATTRIBUTE_INIT_PRIORITY1 MessageCommandDefaultTypeInternal _MessageCommand_default_instance_;
template <typename>
PROTOBUF_CONSTEXPR MessageHeader::MessageHeader(
    ::_pbi::ConstantInitialized): _impl_{
    /*decltype(_impl_.version_)*/ 0u

  , /*decltype(_impl_.msgid_)*/ 0u

  , /*decltype(_impl_.msgtype_)*/ 0

  , /*decltype(_impl_._cached_size_)*/{}} {}
struct MessageHeaderDefaultTypeInternal {
  PROTOBUF_CONSTEXPR MessageHeaderDefaultTypeInternal() : _instance(::_pbi::ConstantInitialized{}) {}
  ~MessageHeaderDefaultTypeInternal() {}
  union {
    MessageHeader _instance;
  };
};

PROTOBUF_ATTRIBUTE_NO_DESTROY PROTOBUF_CONSTINIT
    PROTOBUF_ATTRIBUTE_INIT_PRIORITY1 MessageHeaderDefaultTypeInternal _MessageHeader_default_instance_;
template <typename>
PROTOBUF_CONSTEXPR MessageBody::MessageBody(
    ::_pbi::ConstantInitialized): _impl_{
    /*decltype(_impl_._has_bits_)*/{}
  , /*decltype(_impl_._cached_size_)*/{}
  , /*decltype(_impl_.msgrequest_)*/nullptr
  , /*decltype(_impl_.msgresponse_)*/nullptr
  , /*decltype(_impl_.msgpush_)*/nullptr
  , /*decltype(_impl_.msgpull_)*/nullptr
  , /*decltype(_impl_.msgcommand_)*/nullptr} {}
struct MessageBodyDefaultTypeInternal {
  PROTOBUF_CONSTEXPR MessageBodyDefaultTypeInternal() : _instance(::_pbi::ConstantInitialized{}) {}
  ~MessageBodyDefaultTypeInternal() {}
  union {
    MessageBody _instance;
  };
};

PROTOBUF_ATTRIBUTE_NO_DESTROY PROTOBUF_CONSTINIT
    PROTOBUF_ATTRIBUTE_INIT_PRIORITY1 MessageBodyDefaultTypeInternal _MessageBody_default_instance_;
template <typename>
PROTOBUF_CONSTEXPR MessageInfo::MessageInfo(
    ::_pbi::ConstantInitialized): _impl_{
    /*decltype(_impl_._has_bits_)*/{}
  , /*decltype(_impl_._cached_size_)*/{}
  , /*decltype(_impl_.msgheader_)*/nullptr
  , /*decltype(_impl_.msgbody_)*/nullptr} {}
struct MessageInfoDefaultTypeInternal {
  PROTOBUF_CONSTEXPR MessageInfoDefaultTypeInternal() : _instance(::_pbi::ConstantInitialized{}) {}
  ~MessageInfoDefaultTypeInternal() {}
  union {
    MessageInfo _instance;
  };
};

PROTOBUF_ATTRIBUTE_NO_DESTROY PROTOBUF_CONSTINIT
    PROTOBUF_ATTRIBUTE_INIT_PRIORITY1 MessageInfoDefaultTypeInternal _MessageInfo_default_instance_;
}  // namespace protobuf
}  // namespace genomics
}  // namespace com
static ::_pb::Metadata file_level_metadata_MessageInfo_2eproto[8];
static const ::_pb::EnumDescriptor* file_level_enum_descriptors_MessageInfo_2eproto[3];
static constexpr const ::_pb::ServiceDescriptor**
    file_level_service_descriptors_MessageInfo_2eproto = nullptr;
const ::uint32_t TableStruct_MessageInfo_2eproto::offsets[] PROTOBUF_SECTION_VARIABLE(
    protodesc_cold) = {
    ~0u,  // no _has_bits_
    PROTOBUF_FIELD_OFFSET(::com::genomics::protobuf::MessageRequest, _internal_metadata_),
    ~0u,  // no _extensions_
    ~0u,  // no _oneof_case_
    ~0u,  // no _weak_field_map_
    ~0u,  // no _inlined_string_donated_
    ~0u,  // no _split_
    ~0u,  // no sizeof(Split)
    PROTOBUF_FIELD_OFFSET(::com::genomics::protobuf::MessageRequest, _impl_.requestid_),
    PROTOBUF_FIELD_OFFSET(::com::genomics::protobuf::MessageRequest, _impl_.requesttype_),
    PROTOBUF_FIELD_OFFSET(::com::genomics::protobuf::MessageRequest, _impl_.description_),
    ~0u,  // no _has_bits_
    PROTOBUF_FIELD_OFFSET(::com::genomics::protobuf::MessageResponse, _internal_metadata_),
    ~0u,  // no _extensions_
    ~0u,  // no _oneof_case_
    ~0u,  // no _weak_field_map_
    ~0u,  // no _inlined_string_donated_
    ~0u,  // no _split_
    ~0u,  // no sizeof(Split)
    PROTOBUF_FIELD_OFFSET(::com::genomics::protobuf::MessageResponse, _impl_.responseid_),
    PROTOBUF_FIELD_OFFSET(::com::genomics::protobuf::MessageResponse, _impl_.responsetype_),
    PROTOBUF_FIELD_OFFSET(::com::genomics::protobuf::MessageResponse, _impl_.description_),
    ~0u,  // no _has_bits_
    PROTOBUF_FIELD_OFFSET(::com::genomics::protobuf::MessagePush, _internal_metadata_),
    ~0u,  // no _extensions_
    ~0u,  // no _oneof_case_
    ~0u,  // no _weak_field_map_
    ~0u,  // no _inlined_string_donated_
    ~0u,  // no _split_
    ~0u,  // no sizeof(Split)
    ~0u,  // no _has_bits_
    PROTOBUF_FIELD_OFFSET(::com::genomics::protobuf::MessagePull, _internal_metadata_),
    ~0u,  // no _extensions_
    ~0u,  // no _oneof_case_
    ~0u,  // no _weak_field_map_
    ~0u,  // no _inlined_string_donated_
    ~0u,  // no _split_
    ~0u,  // no sizeof(Split)
    ~0u,  // no _has_bits_
    PROTOBUF_FIELD_OFFSET(::com::genomics::protobuf::MessageCommand, _internal_metadata_),
    ~0u,  // no _extensions_
    ~0u,  // no _oneof_case_
    ~0u,  // no _weak_field_map_
    ~0u,  // no _inlined_string_donated_
    ~0u,  // no _split_
    ~0u,  // no sizeof(Split)
    PROTOBUF_FIELD_OFFSET(::com::genomics::protobuf::MessageCommand, _impl_.cmd_),
    PROTOBUF_FIELD_OFFSET(::com::genomics::protobuf::MessageCommand, _impl_.xmlfilename_),
    PROTOBUF_FIELD_OFFSET(::com::genomics::protobuf::MessageCommand, _impl_.xslfilename_),
    PROTOBUF_FIELD_OFFSET(::com::genomics::protobuf::MessageCommand, _impl_.outfilename_),
    ~0u,  // no _has_bits_
    PROTOBUF_FIELD_OFFSET(::com::genomics::protobuf::MessageHeader, _internal_metadata_),
    ~0u,  // no _extensions_
    ~0u,  // no _oneof_case_
    ~0u,  // no _weak_field_map_
    ~0u,  // no _inlined_string_donated_
    ~0u,  // no _split_
    ~0u,  // no sizeof(Split)
    PROTOBUF_FIELD_OFFSET(::com::genomics::protobuf::MessageHeader, _impl_.version_),
    PROTOBUF_FIELD_OFFSET(::com::genomics::protobuf::MessageHeader, _impl_.msgid_),
    PROTOBUF_FIELD_OFFSET(::com::genomics::protobuf::MessageHeader, _impl_.msgtype_),
    PROTOBUF_FIELD_OFFSET(::com::genomics::protobuf::MessageBody, _impl_._has_bits_),
    PROTOBUF_FIELD_OFFSET(::com::genomics::protobuf::MessageBody, _internal_metadata_),
    ~0u,  // no _extensions_
    ~0u,  // no _oneof_case_
    ~0u,  // no _weak_field_map_
    ~0u,  // no _inlined_string_donated_
    ~0u,  // no _split_
    ~0u,  // no sizeof(Split)
    PROTOBUF_FIELD_OFFSET(::com::genomics::protobuf::MessageBody, _impl_.msgrequest_),
    PROTOBUF_FIELD_OFFSET(::com::genomics::protobuf::MessageBody, _impl_.msgresponse_),
    PROTOBUF_FIELD_OFFSET(::com::genomics::protobuf::MessageBody, _impl_.msgpush_),
    PROTOBUF_FIELD_OFFSET(::com::genomics::protobuf::MessageBody, _impl_.msgpull_),
    PROTOBUF_FIELD_OFFSET(::com::genomics::protobuf::MessageBody, _impl_.msgcommand_),
    0,
    1,
    2,
    3,
    4,
    PROTOBUF_FIELD_OFFSET(::com::genomics::protobuf::MessageInfo, _impl_._has_bits_),
    PROTOBUF_FIELD_OFFSET(::com::genomics::protobuf::MessageInfo, _internal_metadata_),
    ~0u,  // no _extensions_
    ~0u,  // no _oneof_case_
    ~0u,  // no _weak_field_map_
    ~0u,  // no _inlined_string_donated_
    ~0u,  // no _split_
    ~0u,  // no sizeof(Split)
    PROTOBUF_FIELD_OFFSET(::com::genomics::protobuf::MessageInfo, _impl_.msgheader_),
    PROTOBUF_FIELD_OFFSET(::com::genomics::protobuf::MessageInfo, _impl_.msgbody_),
    0,
    1,
};

static const ::_pbi::MigrationSchema
    schemas[] PROTOBUF_SECTION_VARIABLE(protodesc_cold) = {
        { 0, -1, -1, sizeof(::com::genomics::protobuf::MessageRequest)},
        { 11, -1, -1, sizeof(::com::genomics::protobuf::MessageResponse)},
        { 22, -1, -1, sizeof(::com::genomics::protobuf::MessagePush)},
        { 30, -1, -1, sizeof(::com::genomics::protobuf::MessagePull)},
        { 38, -1, -1, sizeof(::com::genomics::protobuf::MessageCommand)},
        { 50, -1, -1, sizeof(::com::genomics::protobuf::MessageHeader)},
        { 61, 74, -1, sizeof(::com::genomics::protobuf::MessageBody)},
        { 79, 89, -1, sizeof(::com::genomics::protobuf::MessageInfo)},
};

static const ::_pb::Message* const file_default_instances[] = {
    &::com::genomics::protobuf::_MessageRequest_default_instance_._instance,
    &::com::genomics::protobuf::_MessageResponse_default_instance_._instance,
    &::com::genomics::protobuf::_MessagePush_default_instance_._instance,
    &::com::genomics::protobuf::_MessagePull_default_instance_._instance,
    &::com::genomics::protobuf::_MessageCommand_default_instance_._instance,
    &::com::genomics::protobuf::_MessageHeader_default_instance_._instance,
    &::com::genomics::protobuf::_MessageBody_default_instance_._instance,
    &::com::genomics::protobuf::_MessageInfo_default_instance_._instance,
};
const char descriptor_table_protodef_MessageInfo_2eproto[] PROTOBUF_SECTION_VARIABLE(protodesc_cold) = {
    "\n\021MessageInfo.proto\022\025com.genomics.protob"
    "uf\"q\n\016MessageRequest\022\021\n\trequestID\030\001 \001(\r\022"
    "7\n\013requestType\030\002 \001(\0162\".com.genomics.prot"
    "obuf.RequestType\022\023\n\013description\030\003 \001(\t\"u\n"
    "\017MessageResponse\022\022\n\nresponseID\030\001 \001(\r\0229\n\014"
    "responseType\030\002 \001(\0162#.com.genomics.protob"
    "uf.ResponseType\022\023\n\013description\030\003 \001(\t\"\r\n\013"
    "MessagePush\"\r\n\013MessagePull\"\\\n\016MessageCom"
    "mand\022\013\n\003cmd\030\001 \001(\t\022\023\n\013xmlFilename\030\002 \001(\t\022\023"
    "\n\013xslFilename\030\003 \001(\t\022\023\n\013outFilename\030\004 \001(\t"
    "\"`\n\rMessageHeader\022\017\n\007version\030\001 \001(\r\022\r\n\005ms"
    "gID\030\002 \001(\r\022/\n\007msgType\030\003 \001(\0162\036.com.genomic"
    "s.protobuf.MsgType\"\252\002\n\013MessageBody\0229\n\nms"
    "gRequest\030\001 \001(\0132%.com.genomics.protobuf.M"
    "essageRequest\022;\n\013msgResponse\030\002 \001(\0132&.com"
    ".genomics.protobuf.MessageResponse\0223\n\007ms"
    "gPush\030\003 \001(\0132\".com.genomics.protobuf.Mess"
    "agePush\0223\n\007msgPull\030\004 \001(\0132\".com.genomics."
    "protobuf.MessagePull\0229\n\nmsgCommand\030\005 \001(\013"
    "2%.com.genomics.protobuf.MessageCommand\""
    "{\n\013MessageInfo\0227\n\tmsgHeader\030\001 \001(\0132$.com."
    "genomics.protobuf.MessageHeader\0223\n\007msgBo"
    "dy\030\002 \001(\0132\".com.genomics.protobuf.Message"
    "Body*{\n\007MsgType\022\021\n\rMsgTypeUnknow\020\000\022\022\n\016Ms"
    "gTypeRequest\020d\022\023\n\017MsgTypeResponse\020e\022\017\n\013M"
    "sgTypePush\020f\022\017\n\013MsgTypePull\020g\022\022\n\016MsgType"
    "Command\020h*J\n\013RequestType\022\021\n\rReqTypeUnkno"
    "w\020\000\022\023\n\016ReqTypePdfFile\020\310\001\022\023\n\016ReqTypePdfPa"
    "ge\020\311\001*\?\n\014ResponseType\022\026\n\022ResTypeSaveSucc"
    "ess\020\000\022\027\n\023ResTypeFileNotFound\020\001B)\n\025com.ge"
    "nomics.protobufB\020MessageInfoProtob\006proto"
    "3"
};
static ::absl::once_flag descriptor_table_MessageInfo_2eproto_once;
const ::_pbi::DescriptorTable descriptor_table_MessageInfo_2eproto = {
    false,
    false,
    1241,
    descriptor_table_protodef_MessageInfo_2eproto,
    "MessageInfo.proto",
    &descriptor_table_MessageInfo_2eproto_once,
    nullptr,
    0,
    8,
    schemas,
    file_default_instances,
    TableStruct_MessageInfo_2eproto::offsets,
    file_level_metadata_MessageInfo_2eproto,
    file_level_enum_descriptors_MessageInfo_2eproto,
    file_level_service_descriptors_MessageInfo_2eproto,
};

// This function exists to be marked as weak.
// It can significantly speed up compilation by breaking up LLVM's SCC
// in the .pb.cc translation units. Large translation units see a
// reduction of more than 35% of walltime for optimized builds. Without
// the weak attribute all the messages in the file, including all the
// vtables and everything they use become part of the same SCC through
// a cycle like:
// GetMetadata -> descriptor table -> default instances ->
//   vtables -> GetMetadata
// By adding a weak function here we break the connection from the
// individual vtables back into the descriptor table.
PROTOBUF_ATTRIBUTE_WEAK const ::_pbi::DescriptorTable* descriptor_table_MessageInfo_2eproto_getter() {
  return &descriptor_table_MessageInfo_2eproto;
}
// Force running AddDescriptors() at dynamic initialization time.
PROTOBUF_ATTRIBUTE_INIT_PRIORITY2
static ::_pbi::AddDescriptorsRunner dynamic_init_dummy_MessageInfo_2eproto(&descriptor_table_MessageInfo_2eproto);
namespace com {
namespace genomics {
namespace protobuf {
const ::PROTOBUF_NAMESPACE_ID::EnumDescriptor* MsgType_descriptor() {
  ::PROTOBUF_NAMESPACE_ID::internal::AssignDescriptors(&descriptor_table_MessageInfo_2eproto);
  return file_level_enum_descriptors_MessageInfo_2eproto[0];
}
bool MsgType_IsValid(int value) {
  switch (value) {
    case 0:
    case 100:
    case 101:
    case 102:
    case 103:
    case 104:
      return true;
    default:
      return false;
  }
}
const ::PROTOBUF_NAMESPACE_ID::EnumDescriptor* RequestType_descriptor() {
  ::PROTOBUF_NAMESPACE_ID::internal::AssignDescriptors(&descriptor_table_MessageInfo_2eproto);
  return file_level_enum_descriptors_MessageInfo_2eproto[1];
}
bool RequestType_IsValid(int value) {
  switch (value) {
    case 0:
    case 200:
    case 201:
      return true;
    default:
      return false;
  }
}
const ::PROTOBUF_NAMESPACE_ID::EnumDescriptor* ResponseType_descriptor() {
  ::PROTOBUF_NAMESPACE_ID::internal::AssignDescriptors(&descriptor_table_MessageInfo_2eproto);
  return file_level_enum_descriptors_MessageInfo_2eproto[2];
}
bool ResponseType_IsValid(int value) {
  switch (value) {
    case 0:
    case 1:
      return true;
    default:
      return false;
  }
}
// ===================================================================

class MessageRequest::_Internal {
 public:
};

MessageRequest::MessageRequest(::PROTOBUF_NAMESPACE_ID::Arena* arena)
  : ::PROTOBUF_NAMESPACE_ID::Message(arena) {
  SharedCtor(arena);
  // @@protoc_insertion_point(arena_constructor:com.genomics.protobuf.MessageRequest)
}
MessageRequest::MessageRequest(const MessageRequest& from)
  : ::PROTOBUF_NAMESPACE_ID::Message() {
  MessageRequest* const _this = this; (void)_this;
  new (&_impl_) Impl_{
      decltype(_impl_.description_) {}

    , decltype(_impl_.requestid_) {}

    , decltype(_impl_.requesttype_) {}

    , /*decltype(_impl_._cached_size_)*/{}};

  _internal_metadata_.MergeFrom<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(from._internal_metadata_);
  _impl_.description_.InitDefault();
  #ifdef PROTOBUF_FORCE_COPY_DEFAULT_STRING
        _impl_.description_.Set("", GetArenaForAllocation());
  #endif  // PROTOBUF_FORCE_COPY_DEFAULT_STRING
  if (!from._internal_description().empty()) {
    _this->_impl_.description_.Set(from._internal_description(), _this->GetArenaForAllocation());
  }
  ::memcpy(&_impl_.requestid_, &from._impl_.requestid_,
    static_cast<::size_t>(reinterpret_cast<char*>(&_impl_.requesttype_) -
    reinterpret_cast<char*>(&_impl_.requestid_)) + sizeof(_impl_.requesttype_));
  // @@protoc_insertion_point(copy_constructor:com.genomics.protobuf.MessageRequest)
}

inline void MessageRequest::SharedCtor(::_pb::Arena* arena) {
  (void)arena;
  new (&_impl_) Impl_{
      decltype(_impl_.description_) {}

    , decltype(_impl_.requestid_) { 0u }

    , decltype(_impl_.requesttype_) { 0 }

    , /*decltype(_impl_._cached_size_)*/{}
  };
  _impl_.description_.InitDefault();
  #ifdef PROTOBUF_FORCE_COPY_DEFAULT_STRING
        _impl_.description_.Set("", GetArenaForAllocation());
  #endif  // PROTOBUF_FORCE_COPY_DEFAULT_STRING
}

MessageRequest::~MessageRequest() {
  // @@protoc_insertion_point(destructor:com.genomics.protobuf.MessageRequest)
  if (auto *arena = _internal_metadata_.DeleteReturnArena<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>()) {
  (void)arena;
    return;
  }
  SharedDtor();
}

inline void MessageRequest::SharedDtor() {
  ABSL_DCHECK(GetArenaForAllocation() == nullptr);
  _impl_.description_.Destroy();
}

void MessageRequest::SetCachedSize(int size) const {
  _impl_._cached_size_.Set(size);
}

void MessageRequest::Clear() {
// @@protoc_insertion_point(message_clear_start:com.genomics.protobuf.MessageRequest)
  ::uint32_t cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  _impl_.description_.ClearToEmpty();
  ::memset(&_impl_.requestid_, 0, static_cast<::size_t>(
      reinterpret_cast<char*>(&_impl_.requesttype_) -
      reinterpret_cast<char*>(&_impl_.requestid_)) + sizeof(_impl_.requesttype_));
  _internal_metadata_.Clear<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>();
}

const char* MessageRequest::_InternalParse(const char* ptr, ::_pbi::ParseContext* ctx) {
#define CHK_(x) if (PROTOBUF_PREDICT_FALSE(!(x))) goto failure
  while (!ctx->Done(&ptr)) {
    ::uint32_t tag;
    ptr = ::_pbi::ReadTag(ptr, &tag);
    switch (tag >> 3) {
      // uint32 requestID = 1;
      case 1:
        if (PROTOBUF_PREDICT_TRUE(static_cast<::uint8_t>(tag) == 8)) {
          _impl_.requestid_ = ::PROTOBUF_NAMESPACE_ID::internal::ReadVarint32(&ptr);
          CHK_(ptr);
        } else {
          goto handle_unusual;
        }
        continue;
      // .com.genomics.protobuf.RequestType requestType = 2;
      case 2:
        if (PROTOBUF_PREDICT_TRUE(static_cast<::uint8_t>(tag) == 16)) {
          ::int32_t val = ::PROTOBUF_NAMESPACE_ID::internal::ReadVarint32(&ptr);
          CHK_(ptr);
          _internal_set_requesttype(static_cast<::com::genomics::protobuf::RequestType>(val));
        } else {
          goto handle_unusual;
        }
        continue;
      // string description = 3;
      case 3:
        if (PROTOBUF_PREDICT_TRUE(static_cast<::uint8_t>(tag) == 26)) {
          auto str = _internal_mutable_description();
          ptr = ::_pbi::InlineGreedyStringParser(str, ptr, ctx);
          CHK_(ptr);
          CHK_(::_pbi::VerifyUTF8(str, "com.genomics.protobuf.MessageRequest.description"));
        } else {
          goto handle_unusual;
        }
        continue;
      default:
        goto handle_unusual;
    }  // switch
  handle_unusual:
    if ((tag == 0) || ((tag & 7) == 4)) {
      CHK_(ptr);
      ctx->SetLastTag(tag);
      goto message_done;
    }
    ptr = UnknownFieldParse(
        tag,
        _internal_metadata_.mutable_unknown_fields<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(),
        ptr, ctx);
    CHK_(ptr != nullptr);
  }  // while
message_done:
  return ptr;
failure:
  ptr = nullptr;
  goto message_done;
#undef CHK_
}

::uint8_t* MessageRequest::_InternalSerialize(
    ::uint8_t* target, ::PROTOBUF_NAMESPACE_ID::io::EpsCopyOutputStream* stream) const {
  // @@protoc_insertion_point(serialize_to_array_start:com.genomics.protobuf.MessageRequest)
  ::uint32_t cached_has_bits = 0;
  (void) cached_has_bits;

  // uint32 requestID = 1;
  if (this->_internal_requestid() != 0) {
    target = stream->EnsureSpace(target);
    target = ::_pbi::WireFormatLite::WriteUInt32ToArray(
        1, this->_internal_requestid(), target);
  }

  // .com.genomics.protobuf.RequestType requestType = 2;
  if (this->_internal_requesttype() != 0) {
    target = stream->EnsureSpace(target);
    target = ::_pbi::WireFormatLite::WriteEnumToArray(
        2, this->_internal_requesttype(), target);
  }

  // string description = 3;
  if (!this->_internal_description().empty()) {
    const std::string& _s = this->_internal_description();
    ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::VerifyUtf8String(
        _s.data(), static_cast<int>(_s.length()), ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::SERIALIZE, "com.genomics.protobuf.MessageRequest.description");
    target = stream->WriteStringMaybeAliased(3, _s, target);
  }

  if (PROTOBUF_PREDICT_FALSE(_internal_metadata_.have_unknown_fields())) {
    target = ::_pbi::WireFormat::InternalSerializeUnknownFieldsToArray(
        _internal_metadata_.unknown_fields<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(::PROTOBUF_NAMESPACE_ID::UnknownFieldSet::default_instance), target, stream);
  }
  // @@protoc_insertion_point(serialize_to_array_end:com.genomics.protobuf.MessageRequest)
  return target;
}

::size_t MessageRequest::ByteSizeLong() const {
// @@protoc_insertion_point(message_byte_size_start:com.genomics.protobuf.MessageRequest)
  ::size_t total_size = 0;

  ::uint32_t cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  // string description = 3;
  if (!this->_internal_description().empty()) {
    total_size += 1 + ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::StringSize(
                                    this->_internal_description());
  }

  // uint32 requestID = 1;
  if (this->_internal_requestid() != 0) {
    total_size += ::_pbi::WireFormatLite::UInt32SizePlusOne(
        this->_internal_requestid());
  }

  // .com.genomics.protobuf.RequestType requestType = 2;
  if (this->_internal_requesttype() != 0) {
    total_size += 1 +
                  ::_pbi::WireFormatLite::EnumSize(this->_internal_requesttype());
  }

  return MaybeComputeUnknownFieldsSize(total_size, &_impl_._cached_size_);
}

const ::PROTOBUF_NAMESPACE_ID::Message::ClassData MessageRequest::_class_data_ = {
    ::PROTOBUF_NAMESPACE_ID::Message::CopyWithSourceCheck,
    MessageRequest::MergeImpl
};
const ::PROTOBUF_NAMESPACE_ID::Message::ClassData*MessageRequest::GetClassData() const { return &_class_data_; }


void MessageRequest::MergeImpl(::PROTOBUF_NAMESPACE_ID::Message& to_msg, const ::PROTOBUF_NAMESPACE_ID::Message& from_msg) {
  auto* const _this = static_cast<MessageRequest*>(&to_msg);
  auto& from = static_cast<const MessageRequest&>(from_msg);
  // @@protoc_insertion_point(class_specific_merge_from_start:com.genomics.protobuf.MessageRequest)
  ABSL_DCHECK_NE(&from, _this);
  ::uint32_t cached_has_bits = 0;
  (void) cached_has_bits;

  if (!from._internal_description().empty()) {
    _this->_internal_set_description(from._internal_description());
  }
  if (from._internal_requestid() != 0) {
    _this->_internal_set_requestid(from._internal_requestid());
  }
  if (from._internal_requesttype() != 0) {
    _this->_internal_set_requesttype(from._internal_requesttype());
  }
  _this->_internal_metadata_.MergeFrom<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(from._internal_metadata_);
}

void MessageRequest::CopyFrom(const MessageRequest& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:com.genomics.protobuf.MessageRequest)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool MessageRequest::IsInitialized() const {
  return true;
}

void MessageRequest::InternalSwap(MessageRequest* other) {
  using std::swap;
  auto* lhs_arena = GetArenaForAllocation();
  auto* rhs_arena = other->GetArenaForAllocation();
  _internal_metadata_.InternalSwap(&other->_internal_metadata_);
  ::_pbi::ArenaStringPtr::InternalSwap(&_impl_.description_, lhs_arena,
                                       &other->_impl_.description_, rhs_arena);
  ::PROTOBUF_NAMESPACE_ID::internal::memswap<
      PROTOBUF_FIELD_OFFSET(MessageRequest, _impl_.requesttype_)
      + sizeof(MessageRequest::_impl_.requesttype_)
      - PROTOBUF_FIELD_OFFSET(MessageRequest, _impl_.requestid_)>(
          reinterpret_cast<char*>(&_impl_.requestid_),
          reinterpret_cast<char*>(&other->_impl_.requestid_));
}

::PROTOBUF_NAMESPACE_ID::Metadata MessageRequest::GetMetadata() const {
  return ::_pbi::AssignDescriptors(
      &descriptor_table_MessageInfo_2eproto_getter, &descriptor_table_MessageInfo_2eproto_once,
      file_level_metadata_MessageInfo_2eproto[0]);
}
// ===================================================================

class MessageResponse::_Internal {
 public:
};

MessageResponse::MessageResponse(::PROTOBUF_NAMESPACE_ID::Arena* arena)
  : ::PROTOBUF_NAMESPACE_ID::Message(arena) {
  SharedCtor(arena);
  // @@protoc_insertion_point(arena_constructor:com.genomics.protobuf.MessageResponse)
}
MessageResponse::MessageResponse(const MessageResponse& from)
  : ::PROTOBUF_NAMESPACE_ID::Message() {
  MessageResponse* const _this = this; (void)_this;
  new (&_impl_) Impl_{
      decltype(_impl_.description_) {}

    , decltype(_impl_.responseid_) {}

    , decltype(_impl_.responsetype_) {}

    , /*decltype(_impl_._cached_size_)*/{}};

  _internal_metadata_.MergeFrom<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(from._internal_metadata_);
  _impl_.description_.InitDefault();
  #ifdef PROTOBUF_FORCE_COPY_DEFAULT_STRING
        _impl_.description_.Set("", GetArenaForAllocation());
  #endif  // PROTOBUF_FORCE_COPY_DEFAULT_STRING
  if (!from._internal_description().empty()) {
    _this->_impl_.description_.Set(from._internal_description(), _this->GetArenaForAllocation());
  }
  ::memcpy(&_impl_.responseid_, &from._impl_.responseid_,
    static_cast<::size_t>(reinterpret_cast<char*>(&_impl_.responsetype_) -
    reinterpret_cast<char*>(&_impl_.responseid_)) + sizeof(_impl_.responsetype_));
  // @@protoc_insertion_point(copy_constructor:com.genomics.protobuf.MessageResponse)
}

inline void MessageResponse::SharedCtor(::_pb::Arena* arena) {
  (void)arena;
  new (&_impl_) Impl_{
      decltype(_impl_.description_) {}

    , decltype(_impl_.responseid_) { 0u }

    , decltype(_impl_.responsetype_) { 0 }

    , /*decltype(_impl_._cached_size_)*/{}
  };
  _impl_.description_.InitDefault();
  #ifdef PROTOBUF_FORCE_COPY_DEFAULT_STRING
        _impl_.description_.Set("", GetArenaForAllocation());
  #endif  // PROTOBUF_FORCE_COPY_DEFAULT_STRING
}

MessageResponse::~MessageResponse() {
  // @@protoc_insertion_point(destructor:com.genomics.protobuf.MessageResponse)
  if (auto *arena = _internal_metadata_.DeleteReturnArena<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>()) {
  (void)arena;
    return;
  }
  SharedDtor();
}

inline void MessageResponse::SharedDtor() {
  ABSL_DCHECK(GetArenaForAllocation() == nullptr);
  _impl_.description_.Destroy();
}

void MessageResponse::SetCachedSize(int size) const {
  _impl_._cached_size_.Set(size);
}

void MessageResponse::Clear() {
// @@protoc_insertion_point(message_clear_start:com.genomics.protobuf.MessageResponse)
  ::uint32_t cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  _impl_.description_.ClearToEmpty();
  ::memset(&_impl_.responseid_, 0, static_cast<::size_t>(
      reinterpret_cast<char*>(&_impl_.responsetype_) -
      reinterpret_cast<char*>(&_impl_.responseid_)) + sizeof(_impl_.responsetype_));
  _internal_metadata_.Clear<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>();
}

const char* MessageResponse::_InternalParse(const char* ptr, ::_pbi::ParseContext* ctx) {
#define CHK_(x) if (PROTOBUF_PREDICT_FALSE(!(x))) goto failure
  while (!ctx->Done(&ptr)) {
    ::uint32_t tag;
    ptr = ::_pbi::ReadTag(ptr, &tag);
    switch (tag >> 3) {
      // uint32 responseID = 1;
      case 1:
        if (PROTOBUF_PREDICT_TRUE(static_cast<::uint8_t>(tag) == 8)) {
          _impl_.responseid_ = ::PROTOBUF_NAMESPACE_ID::internal::ReadVarint32(&ptr);
          CHK_(ptr);
        } else {
          goto handle_unusual;
        }
        continue;
      // .com.genomics.protobuf.ResponseType responseType = 2;
      case 2:
        if (PROTOBUF_PREDICT_TRUE(static_cast<::uint8_t>(tag) == 16)) {
          ::int32_t val = ::PROTOBUF_NAMESPACE_ID::internal::ReadVarint32(&ptr);
          CHK_(ptr);
          _internal_set_responsetype(static_cast<::com::genomics::protobuf::ResponseType>(val));
        } else {
          goto handle_unusual;
        }
        continue;
      // string description = 3;
      case 3:
        if (PROTOBUF_PREDICT_TRUE(static_cast<::uint8_t>(tag) == 26)) {
          auto str = _internal_mutable_description();
          ptr = ::_pbi::InlineGreedyStringParser(str, ptr, ctx);
          CHK_(ptr);
          CHK_(::_pbi::VerifyUTF8(str, "com.genomics.protobuf.MessageResponse.description"));
        } else {
          goto handle_unusual;
        }
        continue;
      default:
        goto handle_unusual;
    }  // switch
  handle_unusual:
    if ((tag == 0) || ((tag & 7) == 4)) {
      CHK_(ptr);
      ctx->SetLastTag(tag);
      goto message_done;
    }
    ptr = UnknownFieldParse(
        tag,
        _internal_metadata_.mutable_unknown_fields<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(),
        ptr, ctx);
    CHK_(ptr != nullptr);
  }  // while
message_done:
  return ptr;
failure:
  ptr = nullptr;
  goto message_done;
#undef CHK_
}

::uint8_t* MessageResponse::_InternalSerialize(
    ::uint8_t* target, ::PROTOBUF_NAMESPACE_ID::io::EpsCopyOutputStream* stream) const {
  // @@protoc_insertion_point(serialize_to_array_start:com.genomics.protobuf.MessageResponse)
  ::uint32_t cached_has_bits = 0;
  (void) cached_has_bits;

  // uint32 responseID = 1;
  if (this->_internal_responseid() != 0) {
    target = stream->EnsureSpace(target);
    target = ::_pbi::WireFormatLite::WriteUInt32ToArray(
        1, this->_internal_responseid(), target);
  }

  // .com.genomics.protobuf.ResponseType responseType = 2;
  if (this->_internal_responsetype() != 0) {
    target = stream->EnsureSpace(target);
    target = ::_pbi::WireFormatLite::WriteEnumToArray(
        2, this->_internal_responsetype(), target);
  }

  // string description = 3;
  if (!this->_internal_description().empty()) {
    const std::string& _s = this->_internal_description();
    ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::VerifyUtf8String(
        _s.data(), static_cast<int>(_s.length()), ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::SERIALIZE, "com.genomics.protobuf.MessageResponse.description");
    target = stream->WriteStringMaybeAliased(3, _s, target);
  }

  if (PROTOBUF_PREDICT_FALSE(_internal_metadata_.have_unknown_fields())) {
    target = ::_pbi::WireFormat::InternalSerializeUnknownFieldsToArray(
        _internal_metadata_.unknown_fields<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(::PROTOBUF_NAMESPACE_ID::UnknownFieldSet::default_instance), target, stream);
  }
  // @@protoc_insertion_point(serialize_to_array_end:com.genomics.protobuf.MessageResponse)
  return target;
}

::size_t MessageResponse::ByteSizeLong() const {
// @@protoc_insertion_point(message_byte_size_start:com.genomics.protobuf.MessageResponse)
  ::size_t total_size = 0;

  ::uint32_t cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  // string description = 3;
  if (!this->_internal_description().empty()) {
    total_size += 1 + ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::StringSize(
                                    this->_internal_description());
  }

  // uint32 responseID = 1;
  if (this->_internal_responseid() != 0) {
    total_size += ::_pbi::WireFormatLite::UInt32SizePlusOne(
        this->_internal_responseid());
  }

  // .com.genomics.protobuf.ResponseType responseType = 2;
  if (this->_internal_responsetype() != 0) {
    total_size += 1 +
                  ::_pbi::WireFormatLite::EnumSize(this->_internal_responsetype());
  }

  return MaybeComputeUnknownFieldsSize(total_size, &_impl_._cached_size_);
}

const ::PROTOBUF_NAMESPACE_ID::Message::ClassData MessageResponse::_class_data_ = {
    ::PROTOBUF_NAMESPACE_ID::Message::CopyWithSourceCheck,
    MessageResponse::MergeImpl
};
const ::PROTOBUF_NAMESPACE_ID::Message::ClassData*MessageResponse::GetClassData() const { return &_class_data_; }


void MessageResponse::MergeImpl(::PROTOBUF_NAMESPACE_ID::Message& to_msg, const ::PROTOBUF_NAMESPACE_ID::Message& from_msg) {
  auto* const _this = static_cast<MessageResponse*>(&to_msg);
  auto& from = static_cast<const MessageResponse&>(from_msg);
  // @@protoc_insertion_point(class_specific_merge_from_start:com.genomics.protobuf.MessageResponse)
  ABSL_DCHECK_NE(&from, _this);
  ::uint32_t cached_has_bits = 0;
  (void) cached_has_bits;

  if (!from._internal_description().empty()) {
    _this->_internal_set_description(from._internal_description());
  }
  if (from._internal_responseid() != 0) {
    _this->_internal_set_responseid(from._internal_responseid());
  }
  if (from._internal_responsetype() != 0) {
    _this->_internal_set_responsetype(from._internal_responsetype());
  }
  _this->_internal_metadata_.MergeFrom<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(from._internal_metadata_);
}

void MessageResponse::CopyFrom(const MessageResponse& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:com.genomics.protobuf.MessageResponse)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool MessageResponse::IsInitialized() const {
  return true;
}

void MessageResponse::InternalSwap(MessageResponse* other) {
  using std::swap;
  auto* lhs_arena = GetArenaForAllocation();
  auto* rhs_arena = other->GetArenaForAllocation();
  _internal_metadata_.InternalSwap(&other->_internal_metadata_);
  ::_pbi::ArenaStringPtr::InternalSwap(&_impl_.description_, lhs_arena,
                                       &other->_impl_.description_, rhs_arena);
  ::PROTOBUF_NAMESPACE_ID::internal::memswap<
      PROTOBUF_FIELD_OFFSET(MessageResponse, _impl_.responsetype_)
      + sizeof(MessageResponse::_impl_.responsetype_)
      - PROTOBUF_FIELD_OFFSET(MessageResponse, _impl_.responseid_)>(
          reinterpret_cast<char*>(&_impl_.responseid_),
          reinterpret_cast<char*>(&other->_impl_.responseid_));
}

::PROTOBUF_NAMESPACE_ID::Metadata MessageResponse::GetMetadata() const {
  return ::_pbi::AssignDescriptors(
      &descriptor_table_MessageInfo_2eproto_getter, &descriptor_table_MessageInfo_2eproto_once,
      file_level_metadata_MessageInfo_2eproto[1]);
}
// ===================================================================

class MessagePush::_Internal {
 public:
};

MessagePush::MessagePush(::PROTOBUF_NAMESPACE_ID::Arena* arena)
  : ::PROTOBUF_NAMESPACE_ID::internal::ZeroFieldsBase(arena) {
  // @@protoc_insertion_point(arena_constructor:com.genomics.protobuf.MessagePush)
}
MessagePush::MessagePush(const MessagePush& from)
  : ::PROTOBUF_NAMESPACE_ID::internal::ZeroFieldsBase() {
  MessagePush* const _this = this; (void)_this;
  _internal_metadata_.MergeFrom<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(from._internal_metadata_);
  // @@protoc_insertion_point(copy_constructor:com.genomics.protobuf.MessagePush)
}





const ::PROTOBUF_NAMESPACE_ID::Message::ClassData MessagePush::_class_data_ = {
    ::PROTOBUF_NAMESPACE_ID::internal::ZeroFieldsBase::CopyImpl,
    ::PROTOBUF_NAMESPACE_ID::internal::ZeroFieldsBase::MergeImpl,
};
const ::PROTOBUF_NAMESPACE_ID::Message::ClassData*MessagePush::GetClassData() const { return &_class_data_; }







::PROTOBUF_NAMESPACE_ID::Metadata MessagePush::GetMetadata() const {
  return ::_pbi::AssignDescriptors(
      &descriptor_table_MessageInfo_2eproto_getter, &descriptor_table_MessageInfo_2eproto_once,
      file_level_metadata_MessageInfo_2eproto[2]);
}
// ===================================================================

class MessagePull::_Internal {
 public:
};

MessagePull::MessagePull(::PROTOBUF_NAMESPACE_ID::Arena* arena)
  : ::PROTOBUF_NAMESPACE_ID::internal::ZeroFieldsBase(arena) {
  // @@protoc_insertion_point(arena_constructor:com.genomics.protobuf.MessagePull)
}
MessagePull::MessagePull(const MessagePull& from)
  : ::PROTOBUF_NAMESPACE_ID::internal::ZeroFieldsBase() {
  MessagePull* const _this = this; (void)_this;
  _internal_metadata_.MergeFrom<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(from._internal_metadata_);
  // @@protoc_insertion_point(copy_constructor:com.genomics.protobuf.MessagePull)
}





const ::PROTOBUF_NAMESPACE_ID::Message::ClassData MessagePull::_class_data_ = {
    ::PROTOBUF_NAMESPACE_ID::internal::ZeroFieldsBase::CopyImpl,
    ::PROTOBUF_NAMESPACE_ID::internal::ZeroFieldsBase::MergeImpl,
};
const ::PROTOBUF_NAMESPACE_ID::Message::ClassData*MessagePull::GetClassData() const { return &_class_data_; }







::PROTOBUF_NAMESPACE_ID::Metadata MessagePull::GetMetadata() const {
  return ::_pbi::AssignDescriptors(
      &descriptor_table_MessageInfo_2eproto_getter, &descriptor_table_MessageInfo_2eproto_once,
      file_level_metadata_MessageInfo_2eproto[3]);
}
// ===================================================================

class MessageCommand::_Internal {
 public:
};

MessageCommand::MessageCommand(::PROTOBUF_NAMESPACE_ID::Arena* arena)
  : ::PROTOBUF_NAMESPACE_ID::Message(arena) {
  SharedCtor(arena);
  // @@protoc_insertion_point(arena_constructor:com.genomics.protobuf.MessageCommand)
}
MessageCommand::MessageCommand(const MessageCommand& from)
  : ::PROTOBUF_NAMESPACE_ID::Message() {
  MessageCommand* const _this = this; (void)_this;
  new (&_impl_) Impl_{
      decltype(_impl_.cmd_) {}

    , decltype(_impl_.xmlfilename_) {}

    , decltype(_impl_.xslfilename_) {}

    , decltype(_impl_.outfilename_) {}

    , /*decltype(_impl_._cached_size_)*/{}};

  _internal_metadata_.MergeFrom<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(from._internal_metadata_);
  _impl_.cmd_.InitDefault();
  #ifdef PROTOBUF_FORCE_COPY_DEFAULT_STRING
        _impl_.cmd_.Set("", GetArenaForAllocation());
  #endif  // PROTOBUF_FORCE_COPY_DEFAULT_STRING
  if (!from._internal_cmd().empty()) {
    _this->_impl_.cmd_.Set(from._internal_cmd(), _this->GetArenaForAllocation());
  }
  _impl_.xmlfilename_.InitDefault();
  #ifdef PROTOBUF_FORCE_COPY_DEFAULT_STRING
        _impl_.xmlfilename_.Set("", GetArenaForAllocation());
  #endif  // PROTOBUF_FORCE_COPY_DEFAULT_STRING
  if (!from._internal_xmlfilename().empty()) {
    _this->_impl_.xmlfilename_.Set(from._internal_xmlfilename(), _this->GetArenaForAllocation());
  }
  _impl_.xslfilename_.InitDefault();
  #ifdef PROTOBUF_FORCE_COPY_DEFAULT_STRING
        _impl_.xslfilename_.Set("", GetArenaForAllocation());
  #endif  // PROTOBUF_FORCE_COPY_DEFAULT_STRING
  if (!from._internal_xslfilename().empty()) {
    _this->_impl_.xslfilename_.Set(from._internal_xslfilename(), _this->GetArenaForAllocation());
  }
  _impl_.outfilename_.InitDefault();
  #ifdef PROTOBUF_FORCE_COPY_DEFAULT_STRING
        _impl_.outfilename_.Set("", GetArenaForAllocation());
  #endif  // PROTOBUF_FORCE_COPY_DEFAULT_STRING
  if (!from._internal_outfilename().empty()) {
    _this->_impl_.outfilename_.Set(from._internal_outfilename(), _this->GetArenaForAllocation());
  }
  // @@protoc_insertion_point(copy_constructor:com.genomics.protobuf.MessageCommand)
}

inline void MessageCommand::SharedCtor(::_pb::Arena* arena) {
  (void)arena;
  new (&_impl_) Impl_{
      decltype(_impl_.cmd_) {}

    , decltype(_impl_.xmlfilename_) {}

    , decltype(_impl_.xslfilename_) {}

    , decltype(_impl_.outfilename_) {}

    , /*decltype(_impl_._cached_size_)*/{}
  };
  _impl_.cmd_.InitDefault();
  #ifdef PROTOBUF_FORCE_COPY_DEFAULT_STRING
        _impl_.cmd_.Set("", GetArenaForAllocation());
  #endif  // PROTOBUF_FORCE_COPY_DEFAULT_STRING
  _impl_.xmlfilename_.InitDefault();
  #ifdef PROTOBUF_FORCE_COPY_DEFAULT_STRING
        _impl_.xmlfilename_.Set("", GetArenaForAllocation());
  #endif  // PROTOBUF_FORCE_COPY_DEFAULT_STRING
  _impl_.xslfilename_.InitDefault();
  #ifdef PROTOBUF_FORCE_COPY_DEFAULT_STRING
        _impl_.xslfilename_.Set("", GetArenaForAllocation());
  #endif  // PROTOBUF_FORCE_COPY_DEFAULT_STRING
  _impl_.outfilename_.InitDefault();
  #ifdef PROTOBUF_FORCE_COPY_DEFAULT_STRING
        _impl_.outfilename_.Set("", GetArenaForAllocation());
  #endif  // PROTOBUF_FORCE_COPY_DEFAULT_STRING
}

MessageCommand::~MessageCommand() {
  // @@protoc_insertion_point(destructor:com.genomics.protobuf.MessageCommand)
  if (auto *arena = _internal_metadata_.DeleteReturnArena<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>()) {
  (void)arena;
    return;
  }
  SharedDtor();
}

inline void MessageCommand::SharedDtor() {
  ABSL_DCHECK(GetArenaForAllocation() == nullptr);
  _impl_.cmd_.Destroy();
  _impl_.xmlfilename_.Destroy();
  _impl_.xslfilename_.Destroy();
  _impl_.outfilename_.Destroy();
}

void MessageCommand::SetCachedSize(int size) const {
  _impl_._cached_size_.Set(size);
}

void MessageCommand::Clear() {
// @@protoc_insertion_point(message_clear_start:com.genomics.protobuf.MessageCommand)
  ::uint32_t cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  _impl_.cmd_.ClearToEmpty();
  _impl_.xmlfilename_.ClearToEmpty();
  _impl_.xslfilename_.ClearToEmpty();
  _impl_.outfilename_.ClearToEmpty();
  _internal_metadata_.Clear<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>();
}

const char* MessageCommand::_InternalParse(const char* ptr, ::_pbi::ParseContext* ctx) {
#define CHK_(x) if (PROTOBUF_PREDICT_FALSE(!(x))) goto failure
  while (!ctx->Done(&ptr)) {
    ::uint32_t tag;
    ptr = ::_pbi::ReadTag(ptr, &tag);
    switch (tag >> 3) {
      // string cmd = 1;
      case 1:
        if (PROTOBUF_PREDICT_TRUE(static_cast<::uint8_t>(tag) == 10)) {
          auto str = _internal_mutable_cmd();
          ptr = ::_pbi::InlineGreedyStringParser(str, ptr, ctx);
          CHK_(ptr);
          CHK_(::_pbi::VerifyUTF8(str, "com.genomics.protobuf.MessageCommand.cmd"));
        } else {
          goto handle_unusual;
        }
        continue;
      // string xmlFilename = 2;
      case 2:
        if (PROTOBUF_PREDICT_TRUE(static_cast<::uint8_t>(tag) == 18)) {
          auto str = _internal_mutable_xmlfilename();
          ptr = ::_pbi::InlineGreedyStringParser(str, ptr, ctx);
          CHK_(ptr);
          CHK_(::_pbi::VerifyUTF8(str, "com.genomics.protobuf.MessageCommand.xmlFilename"));
        } else {
          goto handle_unusual;
        }
        continue;
      // string xslFilename = 3;
      case 3:
        if (PROTOBUF_PREDICT_TRUE(static_cast<::uint8_t>(tag) == 26)) {
          auto str = _internal_mutable_xslfilename();
          ptr = ::_pbi::InlineGreedyStringParser(str, ptr, ctx);
          CHK_(ptr);
          CHK_(::_pbi::VerifyUTF8(str, "com.genomics.protobuf.MessageCommand.xslFilename"));
        } else {
          goto handle_unusual;
        }
        continue;
      // string outFilename = 4;
      case 4:
        if (PROTOBUF_PREDICT_TRUE(static_cast<::uint8_t>(tag) == 34)) {
          auto str = _internal_mutable_outfilename();
          ptr = ::_pbi::InlineGreedyStringParser(str, ptr, ctx);
          CHK_(ptr);
          CHK_(::_pbi::VerifyUTF8(str, "com.genomics.protobuf.MessageCommand.outFilename"));
        } else {
          goto handle_unusual;
        }
        continue;
      default:
        goto handle_unusual;
    }  // switch
  handle_unusual:
    if ((tag == 0) || ((tag & 7) == 4)) {
      CHK_(ptr);
      ctx->SetLastTag(tag);
      goto message_done;
    }
    ptr = UnknownFieldParse(
        tag,
        _internal_metadata_.mutable_unknown_fields<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(),
        ptr, ctx);
    CHK_(ptr != nullptr);
  }  // while
message_done:
  return ptr;
failure:
  ptr = nullptr;
  goto message_done;
#undef CHK_
}

::uint8_t* MessageCommand::_InternalSerialize(
    ::uint8_t* target, ::PROTOBUF_NAMESPACE_ID::io::EpsCopyOutputStream* stream) const {
  // @@protoc_insertion_point(serialize_to_array_start:com.genomics.protobuf.MessageCommand)
  ::uint32_t cached_has_bits = 0;
  (void) cached_has_bits;

  // string cmd = 1;
  if (!this->_internal_cmd().empty()) {
    const std::string& _s = this->_internal_cmd();
    ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::VerifyUtf8String(
        _s.data(), static_cast<int>(_s.length()), ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::SERIALIZE, "com.genomics.protobuf.MessageCommand.cmd");
    target = stream->WriteStringMaybeAliased(1, _s, target);
  }

  // string xmlFilename = 2;
  if (!this->_internal_xmlfilename().empty()) {
    const std::string& _s = this->_internal_xmlfilename();
    ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::VerifyUtf8String(
        _s.data(), static_cast<int>(_s.length()), ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::SERIALIZE, "com.genomics.protobuf.MessageCommand.xmlFilename");
    target = stream->WriteStringMaybeAliased(2, _s, target);
  }

  // string xslFilename = 3;
  if (!this->_internal_xslfilename().empty()) {
    const std::string& _s = this->_internal_xslfilename();
    ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::VerifyUtf8String(
        _s.data(), static_cast<int>(_s.length()), ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::SERIALIZE, "com.genomics.protobuf.MessageCommand.xslFilename");
    target = stream->WriteStringMaybeAliased(3, _s, target);
  }

  // string outFilename = 4;
  if (!this->_internal_outfilename().empty()) {
    const std::string& _s = this->_internal_outfilename();
    ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::VerifyUtf8String(
        _s.data(), static_cast<int>(_s.length()), ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::SERIALIZE, "com.genomics.protobuf.MessageCommand.outFilename");
    target = stream->WriteStringMaybeAliased(4, _s, target);
  }

  if (PROTOBUF_PREDICT_FALSE(_internal_metadata_.have_unknown_fields())) {
    target = ::_pbi::WireFormat::InternalSerializeUnknownFieldsToArray(
        _internal_metadata_.unknown_fields<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(::PROTOBUF_NAMESPACE_ID::UnknownFieldSet::default_instance), target, stream);
  }
  // @@protoc_insertion_point(serialize_to_array_end:com.genomics.protobuf.MessageCommand)
  return target;
}

::size_t MessageCommand::ByteSizeLong() const {
// @@protoc_insertion_point(message_byte_size_start:com.genomics.protobuf.MessageCommand)
  ::size_t total_size = 0;

  ::uint32_t cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  // string cmd = 1;
  if (!this->_internal_cmd().empty()) {
    total_size += 1 + ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::StringSize(
                                    this->_internal_cmd());
  }

  // string xmlFilename = 2;
  if (!this->_internal_xmlfilename().empty()) {
    total_size += 1 + ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::StringSize(
                                    this->_internal_xmlfilename());
  }

  // string xslFilename = 3;
  if (!this->_internal_xslfilename().empty()) {
    total_size += 1 + ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::StringSize(
                                    this->_internal_xslfilename());
  }

  // string outFilename = 4;
  if (!this->_internal_outfilename().empty()) {
    total_size += 1 + ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::StringSize(
                                    this->_internal_outfilename());
  }

  return MaybeComputeUnknownFieldsSize(total_size, &_impl_._cached_size_);
}

const ::PROTOBUF_NAMESPACE_ID::Message::ClassData MessageCommand::_class_data_ = {
    ::PROTOBUF_NAMESPACE_ID::Message::CopyWithSourceCheck,
    MessageCommand::MergeImpl
};
const ::PROTOBUF_NAMESPACE_ID::Message::ClassData*MessageCommand::GetClassData() const { return &_class_data_; }


void MessageCommand::MergeImpl(::PROTOBUF_NAMESPACE_ID::Message& to_msg, const ::PROTOBUF_NAMESPACE_ID::Message& from_msg) {
  auto* const _this = static_cast<MessageCommand*>(&to_msg);
  auto& from = static_cast<const MessageCommand&>(from_msg);
  // @@protoc_insertion_point(class_specific_merge_from_start:com.genomics.protobuf.MessageCommand)
  ABSL_DCHECK_NE(&from, _this);
  ::uint32_t cached_has_bits = 0;
  (void) cached_has_bits;

  if (!from._internal_cmd().empty()) {
    _this->_internal_set_cmd(from._internal_cmd());
  }
  if (!from._internal_xmlfilename().empty()) {
    _this->_internal_set_xmlfilename(from._internal_xmlfilename());
  }
  if (!from._internal_xslfilename().empty()) {
    _this->_internal_set_xslfilename(from._internal_xslfilename());
  }
  if (!from._internal_outfilename().empty()) {
    _this->_internal_set_outfilename(from._internal_outfilename());
  }
  _this->_internal_metadata_.MergeFrom<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(from._internal_metadata_);
}

void MessageCommand::CopyFrom(const MessageCommand& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:com.genomics.protobuf.MessageCommand)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool MessageCommand::IsInitialized() const {
  return true;
}

void MessageCommand::InternalSwap(MessageCommand* other) {
  using std::swap;
  auto* lhs_arena = GetArenaForAllocation();
  auto* rhs_arena = other->GetArenaForAllocation();
  _internal_metadata_.InternalSwap(&other->_internal_metadata_);
  ::_pbi::ArenaStringPtr::InternalSwap(&_impl_.cmd_, lhs_arena,
                                       &other->_impl_.cmd_, rhs_arena);
  ::_pbi::ArenaStringPtr::InternalSwap(&_impl_.xmlfilename_, lhs_arena,
                                       &other->_impl_.xmlfilename_, rhs_arena);
  ::_pbi::ArenaStringPtr::InternalSwap(&_impl_.xslfilename_, lhs_arena,
                                       &other->_impl_.xslfilename_, rhs_arena);
  ::_pbi::ArenaStringPtr::InternalSwap(&_impl_.outfilename_, lhs_arena,
                                       &other->_impl_.outfilename_, rhs_arena);
}

::PROTOBUF_NAMESPACE_ID::Metadata MessageCommand::GetMetadata() const {
  return ::_pbi::AssignDescriptors(
      &descriptor_table_MessageInfo_2eproto_getter, &descriptor_table_MessageInfo_2eproto_once,
      file_level_metadata_MessageInfo_2eproto[4]);
}
// ===================================================================

class MessageHeader::_Internal {
 public:
};

MessageHeader::MessageHeader(::PROTOBUF_NAMESPACE_ID::Arena* arena)
  : ::PROTOBUF_NAMESPACE_ID::Message(arena) {
  SharedCtor(arena);
  // @@protoc_insertion_point(arena_constructor:com.genomics.protobuf.MessageHeader)
}
MessageHeader::MessageHeader(const MessageHeader& from)
  : ::PROTOBUF_NAMESPACE_ID::Message(), _impl_(from._impl_) {
  _internal_metadata_.MergeFrom<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(
      from._internal_metadata_);
  // @@protoc_insertion_point(copy_constructor:com.genomics.protobuf.MessageHeader)
}

inline void MessageHeader::SharedCtor(::_pb::Arena* arena) {
  (void)arena;
  new (&_impl_) Impl_{
      decltype(_impl_.version_) { 0u }

    , decltype(_impl_.msgid_) { 0u }

    , decltype(_impl_.msgtype_) { 0 }

    , /*decltype(_impl_._cached_size_)*/{}
  };
}

MessageHeader::~MessageHeader() {
  // @@protoc_insertion_point(destructor:com.genomics.protobuf.MessageHeader)
  if (auto *arena = _internal_metadata_.DeleteReturnArena<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>()) {
  (void)arena;
    return;
  }
  SharedDtor();
}

inline void MessageHeader::SharedDtor() {
  ABSL_DCHECK(GetArenaForAllocation() == nullptr);
}

void MessageHeader::SetCachedSize(int size) const {
  _impl_._cached_size_.Set(size);
}

void MessageHeader::Clear() {
// @@protoc_insertion_point(message_clear_start:com.genomics.protobuf.MessageHeader)
  ::uint32_t cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  ::memset(&_impl_.version_, 0, static_cast<::size_t>(
      reinterpret_cast<char*>(&_impl_.msgtype_) -
      reinterpret_cast<char*>(&_impl_.version_)) + sizeof(_impl_.msgtype_));
  _internal_metadata_.Clear<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>();
}

const char* MessageHeader::_InternalParse(const char* ptr, ::_pbi::ParseContext* ctx) {
#define CHK_(x) if (PROTOBUF_PREDICT_FALSE(!(x))) goto failure
  while (!ctx->Done(&ptr)) {
    ::uint32_t tag;
    ptr = ::_pbi::ReadTag(ptr, &tag);
    switch (tag >> 3) {
      // uint32 version = 1;
      case 1:
        if (PROTOBUF_PREDICT_TRUE(static_cast<::uint8_t>(tag) == 8)) {
          _impl_.version_ = ::PROTOBUF_NAMESPACE_ID::internal::ReadVarint32(&ptr);
          CHK_(ptr);
        } else {
          goto handle_unusual;
        }
        continue;
      // uint32 msgID = 2;
      case 2:
        if (PROTOBUF_PREDICT_TRUE(static_cast<::uint8_t>(tag) == 16)) {
          _impl_.msgid_ = ::PROTOBUF_NAMESPACE_ID::internal::ReadVarint32(&ptr);
          CHK_(ptr);
        } else {
          goto handle_unusual;
        }
        continue;
      // .com.genomics.protobuf.MsgType msgType = 3;
      case 3:
        if (PROTOBUF_PREDICT_TRUE(static_cast<::uint8_t>(tag) == 24)) {
          ::int32_t val = ::PROTOBUF_NAMESPACE_ID::internal::ReadVarint32(&ptr);
          CHK_(ptr);
          _internal_set_msgtype(static_cast<::com::genomics::protobuf::MsgType>(val));
        } else {
          goto handle_unusual;
        }
        continue;
      default:
        goto handle_unusual;
    }  // switch
  handle_unusual:
    if ((tag == 0) || ((tag & 7) == 4)) {
      CHK_(ptr);
      ctx->SetLastTag(tag);
      goto message_done;
    }
    ptr = UnknownFieldParse(
        tag,
        _internal_metadata_.mutable_unknown_fields<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(),
        ptr, ctx);
    CHK_(ptr != nullptr);
  }  // while
message_done:
  return ptr;
failure:
  ptr = nullptr;
  goto message_done;
#undef CHK_
}

::uint8_t* MessageHeader::_InternalSerialize(
    ::uint8_t* target, ::PROTOBUF_NAMESPACE_ID::io::EpsCopyOutputStream* stream) const {
  // @@protoc_insertion_point(serialize_to_array_start:com.genomics.protobuf.MessageHeader)
  ::uint32_t cached_has_bits = 0;
  (void) cached_has_bits;

  // uint32 version = 1;
  if (this->_internal_version() != 0) {
    target = stream->EnsureSpace(target);
    target = ::_pbi::WireFormatLite::WriteUInt32ToArray(
        1, this->_internal_version(), target);
  }

  // uint32 msgID = 2;
  if (this->_internal_msgid() != 0) {
    target = stream->EnsureSpace(target);
    target = ::_pbi::WireFormatLite::WriteUInt32ToArray(
        2, this->_internal_msgid(), target);
  }

  // .com.genomics.protobuf.MsgType msgType = 3;
  if (this->_internal_msgtype() != 0) {
    target = stream->EnsureSpace(target);
    target = ::_pbi::WireFormatLite::WriteEnumToArray(
        3, this->_internal_msgtype(), target);
  }

  if (PROTOBUF_PREDICT_FALSE(_internal_metadata_.have_unknown_fields())) {
    target = ::_pbi::WireFormat::InternalSerializeUnknownFieldsToArray(
        _internal_metadata_.unknown_fields<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(::PROTOBUF_NAMESPACE_ID::UnknownFieldSet::default_instance), target, stream);
  }
  // @@protoc_insertion_point(serialize_to_array_end:com.genomics.protobuf.MessageHeader)
  return target;
}

::size_t MessageHeader::ByteSizeLong() const {
// @@protoc_insertion_point(message_byte_size_start:com.genomics.protobuf.MessageHeader)
  ::size_t total_size = 0;

  ::uint32_t cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  // uint32 version = 1;
  if (this->_internal_version() != 0) {
    total_size += ::_pbi::WireFormatLite::UInt32SizePlusOne(
        this->_internal_version());
  }

  // uint32 msgID = 2;
  if (this->_internal_msgid() != 0) {
    total_size += ::_pbi::WireFormatLite::UInt32SizePlusOne(
        this->_internal_msgid());
  }

  // .com.genomics.protobuf.MsgType msgType = 3;
  if (this->_internal_msgtype() != 0) {
    total_size += 1 +
                  ::_pbi::WireFormatLite::EnumSize(this->_internal_msgtype());
  }

  return MaybeComputeUnknownFieldsSize(total_size, &_impl_._cached_size_);
}

const ::PROTOBUF_NAMESPACE_ID::Message::ClassData MessageHeader::_class_data_ = {
    ::PROTOBUF_NAMESPACE_ID::Message::CopyWithSourceCheck,
    MessageHeader::MergeImpl
};
const ::PROTOBUF_NAMESPACE_ID::Message::ClassData*MessageHeader::GetClassData() const { return &_class_data_; }


void MessageHeader::MergeImpl(::PROTOBUF_NAMESPACE_ID::Message& to_msg, const ::PROTOBUF_NAMESPACE_ID::Message& from_msg) {
  auto* const _this = static_cast<MessageHeader*>(&to_msg);
  auto& from = static_cast<const MessageHeader&>(from_msg);
  // @@protoc_insertion_point(class_specific_merge_from_start:com.genomics.protobuf.MessageHeader)
  ABSL_DCHECK_NE(&from, _this);
  ::uint32_t cached_has_bits = 0;
  (void) cached_has_bits;

  if (from._internal_version() != 0) {
    _this->_internal_set_version(from._internal_version());
  }
  if (from._internal_msgid() != 0) {
    _this->_internal_set_msgid(from._internal_msgid());
  }
  if (from._internal_msgtype() != 0) {
    _this->_internal_set_msgtype(from._internal_msgtype());
  }
  _this->_internal_metadata_.MergeFrom<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(from._internal_metadata_);
}

void MessageHeader::CopyFrom(const MessageHeader& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:com.genomics.protobuf.MessageHeader)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool MessageHeader::IsInitialized() const {
  return true;
}

void MessageHeader::InternalSwap(MessageHeader* other) {
  using std::swap;
  _internal_metadata_.InternalSwap(&other->_internal_metadata_);
  ::PROTOBUF_NAMESPACE_ID::internal::memswap<
      PROTOBUF_FIELD_OFFSET(MessageHeader, _impl_.msgtype_)
      + sizeof(MessageHeader::_impl_.msgtype_)
      - PROTOBUF_FIELD_OFFSET(MessageHeader, _impl_.version_)>(
          reinterpret_cast<char*>(&_impl_.version_),
          reinterpret_cast<char*>(&other->_impl_.version_));
}

::PROTOBUF_NAMESPACE_ID::Metadata MessageHeader::GetMetadata() const {
  return ::_pbi::AssignDescriptors(
      &descriptor_table_MessageInfo_2eproto_getter, &descriptor_table_MessageInfo_2eproto_once,
      file_level_metadata_MessageInfo_2eproto[5]);
}
// ===================================================================

class MessageBody::_Internal {
 public:
  using HasBits = decltype(std::declval<MessageBody>()._impl_._has_bits_);
  static constexpr ::int32_t kHasBitsOffset =
    8 * PROTOBUF_FIELD_OFFSET(MessageBody, _impl_._has_bits_);
  static const ::com::genomics::protobuf::MessageRequest& msgrequest(const MessageBody* msg);
  static void set_has_msgrequest(HasBits* has_bits) {
    (*has_bits)[0] |= 1u;
  }
  static const ::com::genomics::protobuf::MessageResponse& msgresponse(const MessageBody* msg);
  static void set_has_msgresponse(HasBits* has_bits) {
    (*has_bits)[0] |= 2u;
  }
  static const ::com::genomics::protobuf::MessagePush& msgpush(const MessageBody* msg);
  static void set_has_msgpush(HasBits* has_bits) {
    (*has_bits)[0] |= 4u;
  }
  static const ::com::genomics::protobuf::MessagePull& msgpull(const MessageBody* msg);
  static void set_has_msgpull(HasBits* has_bits) {
    (*has_bits)[0] |= 8u;
  }
  static const ::com::genomics::protobuf::MessageCommand& msgcommand(const MessageBody* msg);
  static void set_has_msgcommand(HasBits* has_bits) {
    (*has_bits)[0] |= 16u;
  }
};

const ::com::genomics::protobuf::MessageRequest&
MessageBody::_Internal::msgrequest(const MessageBody* msg) {
  return *msg->_impl_.msgrequest_;
}
const ::com::genomics::protobuf::MessageResponse&
MessageBody::_Internal::msgresponse(const MessageBody* msg) {
  return *msg->_impl_.msgresponse_;
}
const ::com::genomics::protobuf::MessagePush&
MessageBody::_Internal::msgpush(const MessageBody* msg) {
  return *msg->_impl_.msgpush_;
}
const ::com::genomics::protobuf::MessagePull&
MessageBody::_Internal::msgpull(const MessageBody* msg) {
  return *msg->_impl_.msgpull_;
}
const ::com::genomics::protobuf::MessageCommand&
MessageBody::_Internal::msgcommand(const MessageBody* msg) {
  return *msg->_impl_.msgcommand_;
}
MessageBody::MessageBody(::PROTOBUF_NAMESPACE_ID::Arena* arena)
  : ::PROTOBUF_NAMESPACE_ID::Message(arena) {
  SharedCtor(arena);
  // @@protoc_insertion_point(arena_constructor:com.genomics.protobuf.MessageBody)
}
MessageBody::MessageBody(const MessageBody& from)
  : ::PROTOBUF_NAMESPACE_ID::Message() {
  MessageBody* const _this = this; (void)_this;
  new (&_impl_) Impl_{
      decltype(_impl_._has_bits_){from._impl_._has_bits_}
    , /*decltype(_impl_._cached_size_)*/{}
    , decltype(_impl_.msgrequest_){nullptr}
    , decltype(_impl_.msgresponse_){nullptr}
    , decltype(_impl_.msgpush_){nullptr}
    , decltype(_impl_.msgpull_){nullptr}
    , decltype(_impl_.msgcommand_){nullptr}};

  _internal_metadata_.MergeFrom<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(from._internal_metadata_);
  if ((from._impl_._has_bits_[0] & 0x00000001u) != 0) {
    _this->_impl_.msgrequest_ = new ::com::genomics::protobuf::MessageRequest(*from._impl_.msgrequest_);
  }
  if ((from._impl_._has_bits_[0] & 0x00000002u) != 0) {
    _this->_impl_.msgresponse_ = new ::com::genomics::protobuf::MessageResponse(*from._impl_.msgresponse_);
  }
  if ((from._impl_._has_bits_[0] & 0x00000004u) != 0) {
    _this->_impl_.msgpush_ = new ::com::genomics::protobuf::MessagePush(*from._impl_.msgpush_);
  }
  if ((from._impl_._has_bits_[0] & 0x00000008u) != 0) {
    _this->_impl_.msgpull_ = new ::com::genomics::protobuf::MessagePull(*from._impl_.msgpull_);
  }
  if ((from._impl_._has_bits_[0] & 0x00000010u) != 0) {
    _this->_impl_.msgcommand_ = new ::com::genomics::protobuf::MessageCommand(*from._impl_.msgcommand_);
  }
  // @@protoc_insertion_point(copy_constructor:com.genomics.protobuf.MessageBody)
}

inline void MessageBody::SharedCtor(::_pb::Arena* arena) {
  (void)arena;
  new (&_impl_) Impl_{
      decltype(_impl_._has_bits_){}
    , /*decltype(_impl_._cached_size_)*/{}
    , decltype(_impl_.msgrequest_){nullptr}
    , decltype(_impl_.msgresponse_){nullptr}
    , decltype(_impl_.msgpush_){nullptr}
    , decltype(_impl_.msgpull_){nullptr}
    , decltype(_impl_.msgcommand_){nullptr}
  };
}

MessageBody::~MessageBody() {
  // @@protoc_insertion_point(destructor:com.genomics.protobuf.MessageBody)
  if (auto *arena = _internal_metadata_.DeleteReturnArena<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>()) {
  (void)arena;
    return;
  }
  SharedDtor();
}

inline void MessageBody::SharedDtor() {
  ABSL_DCHECK(GetArenaForAllocation() == nullptr);
  if (this != internal_default_instance()) delete _impl_.msgrequest_;
  if (this != internal_default_instance()) delete _impl_.msgresponse_;
  if (this != internal_default_instance()) delete _impl_.msgpush_;
  if (this != internal_default_instance()) delete _impl_.msgpull_;
  if (this != internal_default_instance()) delete _impl_.msgcommand_;
}

void MessageBody::SetCachedSize(int size) const {
  _impl_._cached_size_.Set(size);
}

void MessageBody::Clear() {
// @@protoc_insertion_point(message_clear_start:com.genomics.protobuf.MessageBody)
  ::uint32_t cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  cached_has_bits = _impl_._has_bits_[0];
  if (cached_has_bits & 0x0000001fu) {
    if (cached_has_bits & 0x00000001u) {
      ABSL_DCHECK(_impl_.msgrequest_ != nullptr);
      _impl_.msgrequest_->Clear();
    }
    if (cached_has_bits & 0x00000002u) {
      ABSL_DCHECK(_impl_.msgresponse_ != nullptr);
      _impl_.msgresponse_->Clear();
    }
    if (cached_has_bits & 0x00000004u) {
      ABSL_DCHECK(_impl_.msgpush_ != nullptr);
      _impl_.msgpush_->Clear();
    }
    if (cached_has_bits & 0x00000008u) {
      ABSL_DCHECK(_impl_.msgpull_ != nullptr);
      _impl_.msgpull_->Clear();
    }
    if (cached_has_bits & 0x00000010u) {
      ABSL_DCHECK(_impl_.msgcommand_ != nullptr);
      _impl_.msgcommand_->Clear();
    }
  }
  _impl_._has_bits_.Clear();
  _internal_metadata_.Clear<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>();
}

const char* MessageBody::_InternalParse(const char* ptr, ::_pbi::ParseContext* ctx) {
#define CHK_(x) if (PROTOBUF_PREDICT_FALSE(!(x))) goto failure
  _Internal::HasBits has_bits{};
  while (!ctx->Done(&ptr)) {
    ::uint32_t tag;
    ptr = ::_pbi::ReadTag(ptr, &tag);
    switch (tag >> 3) {
      // .com.genomics.protobuf.MessageRequest msgRequest = 1;
      case 1:
        if (PROTOBUF_PREDICT_TRUE(static_cast<::uint8_t>(tag) == 10)) {
          ptr = ctx->ParseMessage(_internal_mutable_msgrequest(), ptr);
          CHK_(ptr);
        } else {
          goto handle_unusual;
        }
        continue;
      // .com.genomics.protobuf.MessageResponse msgResponse = 2;
      case 2:
        if (PROTOBUF_PREDICT_TRUE(static_cast<::uint8_t>(tag) == 18)) {
          ptr = ctx->ParseMessage(_internal_mutable_msgresponse(), ptr);
          CHK_(ptr);
        } else {
          goto handle_unusual;
        }
        continue;
      // .com.genomics.protobuf.MessagePush msgPush = 3;
      case 3:
        if (PROTOBUF_PREDICT_TRUE(static_cast<::uint8_t>(tag) == 26)) {
          ptr = ctx->ParseMessage(_internal_mutable_msgpush(), ptr);
          CHK_(ptr);
        } else {
          goto handle_unusual;
        }
        continue;
      // .com.genomics.protobuf.MessagePull msgPull = 4;
      case 4:
        if (PROTOBUF_PREDICT_TRUE(static_cast<::uint8_t>(tag) == 34)) {
          ptr = ctx->ParseMessage(_internal_mutable_msgpull(), ptr);
          CHK_(ptr);
        } else {
          goto handle_unusual;
        }
        continue;
      // .com.genomics.protobuf.MessageCommand msgCommand = 5;
      case 5:
        if (PROTOBUF_PREDICT_TRUE(static_cast<::uint8_t>(tag) == 42)) {
          ptr = ctx->ParseMessage(_internal_mutable_msgcommand(), ptr);
          CHK_(ptr);
        } else {
          goto handle_unusual;
        }
        continue;
      default:
        goto handle_unusual;
    }  // switch
  handle_unusual:
    if ((tag == 0) || ((tag & 7) == 4)) {
      CHK_(ptr);
      ctx->SetLastTag(tag);
      goto message_done;
    }
    ptr = UnknownFieldParse(
        tag,
        _internal_metadata_.mutable_unknown_fields<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(),
        ptr, ctx);
    CHK_(ptr != nullptr);
  }  // while
message_done:
  _impl_._has_bits_.Or(has_bits);
  return ptr;
failure:
  ptr = nullptr;
  goto message_done;
#undef CHK_
}

::uint8_t* MessageBody::_InternalSerialize(
    ::uint8_t* target, ::PROTOBUF_NAMESPACE_ID::io::EpsCopyOutputStream* stream) const {
  // @@protoc_insertion_point(serialize_to_array_start:com.genomics.protobuf.MessageBody)
  ::uint32_t cached_has_bits = 0;
  (void) cached_has_bits;

  cached_has_bits = _impl_._has_bits_[0];
  // .com.genomics.protobuf.MessageRequest msgRequest = 1;
  if (cached_has_bits & 0x00000001u) {
    target = ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::
      InternalWriteMessage(1, _Internal::msgrequest(this),
        _Internal::msgrequest(this).GetCachedSize(), target, stream);
  }

  // .com.genomics.protobuf.MessageResponse msgResponse = 2;
  if (cached_has_bits & 0x00000002u) {
    target = ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::
      InternalWriteMessage(2, _Internal::msgresponse(this),
        _Internal::msgresponse(this).GetCachedSize(), target, stream);
  }

  // .com.genomics.protobuf.MessagePush msgPush = 3;
  if (cached_has_bits & 0x00000004u) {
    target = ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::
      InternalWriteMessage(3, _Internal::msgpush(this),
        _Internal::msgpush(this).GetCachedSize(), target, stream);
  }

  // .com.genomics.protobuf.MessagePull msgPull = 4;
  if (cached_has_bits & 0x00000008u) {
    target = ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::
      InternalWriteMessage(4, _Internal::msgpull(this),
        _Internal::msgpull(this).GetCachedSize(), target, stream);
  }

  // .com.genomics.protobuf.MessageCommand msgCommand = 5;
  if (cached_has_bits & 0x00000010u) {
    target = ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::
      InternalWriteMessage(5, _Internal::msgcommand(this),
        _Internal::msgcommand(this).GetCachedSize(), target, stream);
  }

  if (PROTOBUF_PREDICT_FALSE(_internal_metadata_.have_unknown_fields())) {
    target = ::_pbi::WireFormat::InternalSerializeUnknownFieldsToArray(
        _internal_metadata_.unknown_fields<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(::PROTOBUF_NAMESPACE_ID::UnknownFieldSet::default_instance), target, stream);
  }
  // @@protoc_insertion_point(serialize_to_array_end:com.genomics.protobuf.MessageBody)
  return target;
}

::size_t MessageBody::ByteSizeLong() const {
// @@protoc_insertion_point(message_byte_size_start:com.genomics.protobuf.MessageBody)
  ::size_t total_size = 0;

  ::uint32_t cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  cached_has_bits = _impl_._has_bits_[0];
  if (cached_has_bits & 0x0000001fu) {
    // .com.genomics.protobuf.MessageRequest msgRequest = 1;
    if (cached_has_bits & 0x00000001u) {
      total_size += 1 +
        ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::MessageSize(
          *_impl_.msgrequest_);
    }

    // .com.genomics.protobuf.MessageResponse msgResponse = 2;
    if (cached_has_bits & 0x00000002u) {
      total_size += 1 +
        ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::MessageSize(
          *_impl_.msgresponse_);
    }

    // .com.genomics.protobuf.MessagePush msgPush = 3;
    if (cached_has_bits & 0x00000004u) {
      total_size += 1 +
        ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::MessageSize(
          *_impl_.msgpush_);
    }

    // .com.genomics.protobuf.MessagePull msgPull = 4;
    if (cached_has_bits & 0x00000008u) {
      total_size += 1 +
        ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::MessageSize(
          *_impl_.msgpull_);
    }

    // .com.genomics.protobuf.MessageCommand msgCommand = 5;
    if (cached_has_bits & 0x00000010u) {
      total_size += 1 +
        ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::MessageSize(
          *_impl_.msgcommand_);
    }

  }
  return MaybeComputeUnknownFieldsSize(total_size, &_impl_._cached_size_);
}

const ::PROTOBUF_NAMESPACE_ID::Message::ClassData MessageBody::_class_data_ = {
    ::PROTOBUF_NAMESPACE_ID::Message::CopyWithSourceCheck,
    MessageBody::MergeImpl
};
const ::PROTOBUF_NAMESPACE_ID::Message::ClassData*MessageBody::GetClassData() const { return &_class_data_; }


void MessageBody::MergeImpl(::PROTOBUF_NAMESPACE_ID::Message& to_msg, const ::PROTOBUF_NAMESPACE_ID::Message& from_msg) {
  auto* const _this = static_cast<MessageBody*>(&to_msg);
  auto& from = static_cast<const MessageBody&>(from_msg);
  // @@protoc_insertion_point(class_specific_merge_from_start:com.genomics.protobuf.MessageBody)
  ABSL_DCHECK_NE(&from, _this);
  ::uint32_t cached_has_bits = 0;
  (void) cached_has_bits;

  cached_has_bits = from._impl_._has_bits_[0];
  if (cached_has_bits & 0x0000001fu) {
    if (cached_has_bits & 0x00000001u) {
      _this->_internal_mutable_msgrequest()->::com::genomics::protobuf::MessageRequest::MergeFrom(
          from._internal_msgrequest());
    }
    if (cached_has_bits & 0x00000002u) {
      _this->_internal_mutable_msgresponse()->::com::genomics::protobuf::MessageResponse::MergeFrom(
          from._internal_msgresponse());
    }
    if (cached_has_bits & 0x00000004u) {
      _this->_internal_mutable_msgpush()->::com::genomics::protobuf::MessagePush::MergeFrom(
          from._internal_msgpush());
    }
    if (cached_has_bits & 0x00000008u) {
      _this->_internal_mutable_msgpull()->::com::genomics::protobuf::MessagePull::MergeFrom(
          from._internal_msgpull());
    }
    if (cached_has_bits & 0x00000010u) {
      _this->_internal_mutable_msgcommand()->::com::genomics::protobuf::MessageCommand::MergeFrom(
          from._internal_msgcommand());
    }
  }
  _this->_internal_metadata_.MergeFrom<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(from._internal_metadata_);
}

void MessageBody::CopyFrom(const MessageBody& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:com.genomics.protobuf.MessageBody)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool MessageBody::IsInitialized() const {
  return true;
}

void MessageBody::InternalSwap(MessageBody* other) {
  using std::swap;
  _internal_metadata_.InternalSwap(&other->_internal_metadata_);
  swap(_impl_._has_bits_[0], other->_impl_._has_bits_[0]);
  ::PROTOBUF_NAMESPACE_ID::internal::memswap<
      PROTOBUF_FIELD_OFFSET(MessageBody, _impl_.msgcommand_)
      + sizeof(MessageBody::_impl_.msgcommand_)
      - PROTOBUF_FIELD_OFFSET(MessageBody, _impl_.msgrequest_)>(
          reinterpret_cast<char*>(&_impl_.msgrequest_),
          reinterpret_cast<char*>(&other->_impl_.msgrequest_));
}

::PROTOBUF_NAMESPACE_ID::Metadata MessageBody::GetMetadata() const {
  return ::_pbi::AssignDescriptors(
      &descriptor_table_MessageInfo_2eproto_getter, &descriptor_table_MessageInfo_2eproto_once,
      file_level_metadata_MessageInfo_2eproto[6]);
}
// ===================================================================

class MessageInfo::_Internal {
 public:
  using HasBits = decltype(std::declval<MessageInfo>()._impl_._has_bits_);
  static constexpr ::int32_t kHasBitsOffset =
    8 * PROTOBUF_FIELD_OFFSET(MessageInfo, _impl_._has_bits_);
  static const ::com::genomics::protobuf::MessageHeader& msgheader(const MessageInfo* msg);
  static void set_has_msgheader(HasBits* has_bits) {
    (*has_bits)[0] |= 1u;
  }
  static const ::com::genomics::protobuf::MessageBody& msgbody(const MessageInfo* msg);
  static void set_has_msgbody(HasBits* has_bits) {
    (*has_bits)[0] |= 2u;
  }
};

const ::com::genomics::protobuf::MessageHeader&
MessageInfo::_Internal::msgheader(const MessageInfo* msg) {
  return *msg->_impl_.msgheader_;
}
const ::com::genomics::protobuf::MessageBody&
MessageInfo::_Internal::msgbody(const MessageInfo* msg) {
  return *msg->_impl_.msgbody_;
}
MessageInfo::MessageInfo(::PROTOBUF_NAMESPACE_ID::Arena* arena)
  : ::PROTOBUF_NAMESPACE_ID::Message(arena) {
  SharedCtor(arena);
  // @@protoc_insertion_point(arena_constructor:com.genomics.protobuf.MessageInfo)
}
MessageInfo::MessageInfo(const MessageInfo& from)
  : ::PROTOBUF_NAMESPACE_ID::Message() {
  MessageInfo* const _this = this; (void)_this;
  new (&_impl_) Impl_{
      decltype(_impl_._has_bits_){from._impl_._has_bits_}
    , /*decltype(_impl_._cached_size_)*/{}
    , decltype(_impl_.msgheader_){nullptr}
    , decltype(_impl_.msgbody_){nullptr}};

  _internal_metadata_.MergeFrom<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(from._internal_metadata_);
  if ((from._impl_._has_bits_[0] & 0x00000001u) != 0) {
    _this->_impl_.msgheader_ = new ::com::genomics::protobuf::MessageHeader(*from._impl_.msgheader_);
  }
  if ((from._impl_._has_bits_[0] & 0x00000002u) != 0) {
    _this->_impl_.msgbody_ = new ::com::genomics::protobuf::MessageBody(*from._impl_.msgbody_);
  }
  // @@protoc_insertion_point(copy_constructor:com.genomics.protobuf.MessageInfo)
}

inline void MessageInfo::SharedCtor(::_pb::Arena* arena) {
  (void)arena;
  new (&_impl_) Impl_{
      decltype(_impl_._has_bits_){}
    , /*decltype(_impl_._cached_size_)*/{}
    , decltype(_impl_.msgheader_){nullptr}
    , decltype(_impl_.msgbody_){nullptr}
  };
}

MessageInfo::~MessageInfo() {
  // @@protoc_insertion_point(destructor:com.genomics.protobuf.MessageInfo)
  if (auto *arena = _internal_metadata_.DeleteReturnArena<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>()) {
  (void)arena;
    return;
  }
  SharedDtor();
}

inline void MessageInfo::SharedDtor() {
  ABSL_DCHECK(GetArenaForAllocation() == nullptr);
  if (this != internal_default_instance()) delete _impl_.msgheader_;
  if (this != internal_default_instance()) delete _impl_.msgbody_;
}

void MessageInfo::SetCachedSize(int size) const {
  _impl_._cached_size_.Set(size);
}

void MessageInfo::Clear() {
// @@protoc_insertion_point(message_clear_start:com.genomics.protobuf.MessageInfo)
  ::uint32_t cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  cached_has_bits = _impl_._has_bits_[0];
  if (cached_has_bits & 0x00000003u) {
    if (cached_has_bits & 0x00000001u) {
      ABSL_DCHECK(_impl_.msgheader_ != nullptr);
      _impl_.msgheader_->Clear();
    }
    if (cached_has_bits & 0x00000002u) {
      ABSL_DCHECK(_impl_.msgbody_ != nullptr);
      _impl_.msgbody_->Clear();
    }
  }
  _impl_._has_bits_.Clear();
  _internal_metadata_.Clear<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>();
}

const char* MessageInfo::_InternalParse(const char* ptr, ::_pbi::ParseContext* ctx) {
#define CHK_(x) if (PROTOBUF_PREDICT_FALSE(!(x))) goto failure
  _Internal::HasBits has_bits{};
  while (!ctx->Done(&ptr)) {
    ::uint32_t tag;
    ptr = ::_pbi::ReadTag(ptr, &tag);
    switch (tag >> 3) {
      // .com.genomics.protobuf.MessageHeader msgHeader = 1;
      case 1:
        if (PROTOBUF_PREDICT_TRUE(static_cast<::uint8_t>(tag) == 10)) {
          ptr = ctx->ParseMessage(_internal_mutable_msgheader(), ptr);
          CHK_(ptr);
        } else {
          goto handle_unusual;
        }
        continue;
      // .com.genomics.protobuf.MessageBody msgBody = 2;
      case 2:
        if (PROTOBUF_PREDICT_TRUE(static_cast<::uint8_t>(tag) == 18)) {
          ptr = ctx->ParseMessage(_internal_mutable_msgbody(), ptr);
          CHK_(ptr);
        } else {
          goto handle_unusual;
        }
        continue;
      default:
        goto handle_unusual;
    }  // switch
  handle_unusual:
    if ((tag == 0) || ((tag & 7) == 4)) {
      CHK_(ptr);
      ctx->SetLastTag(tag);
      goto message_done;
    }
    ptr = UnknownFieldParse(
        tag,
        _internal_metadata_.mutable_unknown_fields<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(),
        ptr, ctx);
    CHK_(ptr != nullptr);
  }  // while
message_done:
  _impl_._has_bits_.Or(has_bits);
  return ptr;
failure:
  ptr = nullptr;
  goto message_done;
#undef CHK_
}

::uint8_t* MessageInfo::_InternalSerialize(
    ::uint8_t* target, ::PROTOBUF_NAMESPACE_ID::io::EpsCopyOutputStream* stream) const {
  // @@protoc_insertion_point(serialize_to_array_start:com.genomics.protobuf.MessageInfo)
  ::uint32_t cached_has_bits = 0;
  (void) cached_has_bits;

  cached_has_bits = _impl_._has_bits_[0];
  // .com.genomics.protobuf.MessageHeader msgHeader = 1;
  if (cached_has_bits & 0x00000001u) {
    target = ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::
      InternalWriteMessage(1, _Internal::msgheader(this),
        _Internal::msgheader(this).GetCachedSize(), target, stream);
  }

  // .com.genomics.protobuf.MessageBody msgBody = 2;
  if (cached_has_bits & 0x00000002u) {
    target = ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::
      InternalWriteMessage(2, _Internal::msgbody(this),
        _Internal::msgbody(this).GetCachedSize(), target, stream);
  }

  if (PROTOBUF_PREDICT_FALSE(_internal_metadata_.have_unknown_fields())) {
    target = ::_pbi::WireFormat::InternalSerializeUnknownFieldsToArray(
        _internal_metadata_.unknown_fields<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(::PROTOBUF_NAMESPACE_ID::UnknownFieldSet::default_instance), target, stream);
  }
  // @@protoc_insertion_point(serialize_to_array_end:com.genomics.protobuf.MessageInfo)
  return target;
}

::size_t MessageInfo::ByteSizeLong() const {
// @@protoc_insertion_point(message_byte_size_start:com.genomics.protobuf.MessageInfo)
  ::size_t total_size = 0;

  ::uint32_t cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  cached_has_bits = _impl_._has_bits_[0];
  if (cached_has_bits & 0x00000003u) {
    // .com.genomics.protobuf.MessageHeader msgHeader = 1;
    if (cached_has_bits & 0x00000001u) {
      total_size += 1 +
        ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::MessageSize(
          *_impl_.msgheader_);
    }

    // .com.genomics.protobuf.MessageBody msgBody = 2;
    if (cached_has_bits & 0x00000002u) {
      total_size += 1 +
        ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::MessageSize(
          *_impl_.msgbody_);
    }

  }
  return MaybeComputeUnknownFieldsSize(total_size, &_impl_._cached_size_);
}

const ::PROTOBUF_NAMESPACE_ID::Message::ClassData MessageInfo::_class_data_ = {
    ::PROTOBUF_NAMESPACE_ID::Message::CopyWithSourceCheck,
    MessageInfo::MergeImpl
};
const ::PROTOBUF_NAMESPACE_ID::Message::ClassData*MessageInfo::GetClassData() const { return &_class_data_; }


void MessageInfo::MergeImpl(::PROTOBUF_NAMESPACE_ID::Message& to_msg, const ::PROTOBUF_NAMESPACE_ID::Message& from_msg) {
  auto* const _this = static_cast<MessageInfo*>(&to_msg);
  auto& from = static_cast<const MessageInfo&>(from_msg);
  // @@protoc_insertion_point(class_specific_merge_from_start:com.genomics.protobuf.MessageInfo)
  ABSL_DCHECK_NE(&from, _this);
  ::uint32_t cached_has_bits = 0;
  (void) cached_has_bits;

  cached_has_bits = from._impl_._has_bits_[0];
  if (cached_has_bits & 0x00000003u) {
    if (cached_has_bits & 0x00000001u) {
      _this->_internal_mutable_msgheader()->::com::genomics::protobuf::MessageHeader::MergeFrom(
          from._internal_msgheader());
    }
    if (cached_has_bits & 0x00000002u) {
      _this->_internal_mutable_msgbody()->::com::genomics::protobuf::MessageBody::MergeFrom(
          from._internal_msgbody());
    }
  }
  _this->_internal_metadata_.MergeFrom<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(from._internal_metadata_);
}

void MessageInfo::CopyFrom(const MessageInfo& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:com.genomics.protobuf.MessageInfo)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool MessageInfo::IsInitialized() const {
  return true;
}

void MessageInfo::InternalSwap(MessageInfo* other) {
  using std::swap;
  _internal_metadata_.InternalSwap(&other->_internal_metadata_);
  swap(_impl_._has_bits_[0], other->_impl_._has_bits_[0]);
  ::PROTOBUF_NAMESPACE_ID::internal::memswap<
      PROTOBUF_FIELD_OFFSET(MessageInfo, _impl_.msgbody_)
      + sizeof(MessageInfo::_impl_.msgbody_)
      - PROTOBUF_FIELD_OFFSET(MessageInfo, _impl_.msgheader_)>(
          reinterpret_cast<char*>(&_impl_.msgheader_),
          reinterpret_cast<char*>(&other->_impl_.msgheader_));
}

::PROTOBUF_NAMESPACE_ID::Metadata MessageInfo::GetMetadata() const {
  return ::_pbi::AssignDescriptors(
      &descriptor_table_MessageInfo_2eproto_getter, &descriptor_table_MessageInfo_2eproto_once,
      file_level_metadata_MessageInfo_2eproto[7]);
}
// @@protoc_insertion_point(namespace_scope)
}  // namespace protobuf
}  // namespace genomics
}  // namespace com
PROTOBUF_NAMESPACE_OPEN
template<> PROTOBUF_NOINLINE ::com::genomics::protobuf::MessageRequest*
Arena::CreateMaybeMessage< ::com::genomics::protobuf::MessageRequest >(Arena* arena) {
  return Arena::CreateMessageInternal< ::com::genomics::protobuf::MessageRequest >(arena);
}
template<> PROTOBUF_NOINLINE ::com::genomics::protobuf::MessageResponse*
Arena::CreateMaybeMessage< ::com::genomics::protobuf::MessageResponse >(Arena* arena) {
  return Arena::CreateMessageInternal< ::com::genomics::protobuf::MessageResponse >(arena);
}
template<> PROTOBUF_NOINLINE ::com::genomics::protobuf::MessagePush*
Arena::CreateMaybeMessage< ::com::genomics::protobuf::MessagePush >(Arena* arena) {
  return Arena::CreateMessageInternal< ::com::genomics::protobuf::MessagePush >(arena);
}
template<> PROTOBUF_NOINLINE ::com::genomics::protobuf::MessagePull*
Arena::CreateMaybeMessage< ::com::genomics::protobuf::MessagePull >(Arena* arena) {
  return Arena::CreateMessageInternal< ::com::genomics::protobuf::MessagePull >(arena);
}
template<> PROTOBUF_NOINLINE ::com::genomics::protobuf::MessageCommand*
Arena::CreateMaybeMessage< ::com::genomics::protobuf::MessageCommand >(Arena* arena) {
  return Arena::CreateMessageInternal< ::com::genomics::protobuf::MessageCommand >(arena);
}
template<> PROTOBUF_NOINLINE ::com::genomics::protobuf::MessageHeader*
Arena::CreateMaybeMessage< ::com::genomics::protobuf::MessageHeader >(Arena* arena) {
  return Arena::CreateMessageInternal< ::com::genomics::protobuf::MessageHeader >(arena);
}
template<> PROTOBUF_NOINLINE ::com::genomics::protobuf::MessageBody*
Arena::CreateMaybeMessage< ::com::genomics::protobuf::MessageBody >(Arena* arena) {
  return Arena::CreateMessageInternal< ::com::genomics::protobuf::MessageBody >(arena);
}
template<> PROTOBUF_NOINLINE ::com::genomics::protobuf::MessageInfo*
Arena::CreateMaybeMessage< ::com::genomics::protobuf::MessageInfo >(Arena* arena) {
  return Arena::CreateMessageInternal< ::com::genomics::protobuf::MessageInfo >(arena);
}
PROTOBUF_NAMESPACE_CLOSE
// @@protoc_insertion_point(global_scope)
#include "google/protobuf/port_undef.inc"
