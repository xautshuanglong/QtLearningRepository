// Generated by the protocol buffer compiler.  DO NOT EDIT!
// source: MessageTest.proto

#ifndef PROTOBUF_INCLUDED_MessageTest_2eproto
#define PROTOBUF_INCLUDED_MessageTest_2eproto

#include <string>

#include <google/protobuf/stubs/common.h>

#if GOOGLE_PROTOBUF_VERSION < 3006000
#error This file was generated by a newer version of protoc which is
#error incompatible with your Protocol Buffer headers.  Please update
#error your headers.
#endif
#if 3006000 < GOOGLE_PROTOBUF_MIN_PROTOC_VERSION
#error This file was generated by an older version of protoc which is
#error incompatible with your Protocol Buffer headers.  Please
#error regenerate this file with a newer version of protoc.
#endif

#include <google/protobuf/io/coded_stream.h>
#include <google/protobuf/arena.h>
#include <google/protobuf/arenastring.h>
#include <google/protobuf/generated_message_table_driven.h>
#include <google/protobuf/generated_message_util.h>
#include <google/protobuf/inlined_string_field.h>
#include <google/protobuf/metadata.h>
#include <google/protobuf/message.h>
#include <google/protobuf/repeated_field.h>  // IWYU pragma: export
#include <google/protobuf/extension_set.h>  // IWYU pragma: export
#include <google/protobuf/unknown_field_set.h>
// @@protoc_insertion_point(includes)
#define PROTOBUF_INTERNAL_EXPORT_protobuf_MessageTest_2eproto 

namespace protobuf_MessageTest_2eproto {
// Internal implementation detail -- do not use these members.
struct TableStruct {
  static const ::google::protobuf::internal::ParseTableField entries[];
  static const ::google::protobuf::internal::AuxillaryParseTableField aux[];
  static const ::google::protobuf::internal::ParseTable schema[1];
  static const ::google::protobuf::internal::FieldMetadata field_metadata[];
  static const ::google::protobuf::internal::SerializationTable serialization_table[];
  static const ::google::protobuf::uint32 offsets[];
};
void AddDescriptors();
}  // namespace protobuf_MessageTest_2eproto
class MsgTest;
class MsgTestDefaultTypeInternal;
extern MsgTestDefaultTypeInternal _MsgTest_default_instance_;
namespace google {
namespace protobuf {
template<> ::MsgTest* Arena::CreateMaybeMessage<::MsgTest>(Arena*);
}  // namespace protobuf
}  // namespace google

// ===================================================================

class MsgTest : public ::google::protobuf::Message /* @@protoc_insertion_point(class_definition:MsgTest) */ {
 public:
  MsgTest();
  virtual ~MsgTest();

  MsgTest(const MsgTest& from);

  inline MsgTest& operator=(const MsgTest& from) {
    CopyFrom(from);
    return *this;
  }
  #if LANG_CXX11
  MsgTest(MsgTest&& from) noexcept
    : MsgTest() {
    *this = ::std::move(from);
  }

  inline MsgTest& operator=(MsgTest&& from) noexcept {
    if (GetArenaNoVirtual() == from.GetArenaNoVirtual()) {
      if (this != &from) InternalSwap(&from);
    } else {
      CopyFrom(from);
    }
    return *this;
  }
  #endif
  static const ::google::protobuf::Descriptor* descriptor();
  static const MsgTest& default_instance();

  static void InitAsDefaultInstance();  // FOR INTERNAL USE ONLY
  static inline const MsgTest* internal_default_instance() {
    return reinterpret_cast<const MsgTest*>(
               &_MsgTest_default_instance_);
  }
  static constexpr int kIndexInFileMessages =
    0;

  void Swap(MsgTest* other);
  friend void swap(MsgTest& a, MsgTest& b) {
    a.Swap(&b);
  }

  // implements Message ----------------------------------------------

  inline MsgTest* New() const final {
    return CreateMaybeMessage<MsgTest>(NULL);
  }

  MsgTest* New(::google::protobuf::Arena* arena) const final {
    return CreateMaybeMessage<MsgTest>(arena);
  }
  void CopyFrom(const ::google::protobuf::Message& from) final;
  void MergeFrom(const ::google::protobuf::Message& from) final;
  void CopyFrom(const MsgTest& from);
  void MergeFrom(const MsgTest& from);
  void Clear() final;
  bool IsInitialized() const final;

  size_t ByteSizeLong() const final;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input) final;
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const final;
  ::google::protobuf::uint8* InternalSerializeWithCachedSizesToArray(
      bool deterministic, ::google::protobuf::uint8* target) const final;
  int GetCachedSize() const final { return _cached_size_.Get(); }

  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const final;
  void InternalSwap(MsgTest* other);
  private:
  inline ::google::protobuf::Arena* GetArenaNoVirtual() const {
    return NULL;
  }
  inline void* MaybeArenaPtr() const {
    return NULL;
  }
  public:

  ::google::protobuf::Metadata GetMetadata() const final;

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  // bytes bytesTest = 3;
  void clear_bytestest();
  static const int kBytesTestFieldNumber = 3;
  const ::std::string& bytestest() const;
  void set_bytestest(const ::std::string& value);
  #if LANG_CXX11
  void set_bytestest(::std::string&& value);
  #endif
  void set_bytestest(const char* value);
  void set_bytestest(const void* value, size_t size);
  ::std::string* mutable_bytestest();
  ::std::string* release_bytestest();
  void set_allocated_bytestest(::std::string* bytestest);

  // string stringTest = 4;
  void clear_stringtest();
  static const int kStringTestFieldNumber = 4;
  const ::std::string& stringtest() const;
  void set_stringtest(const ::std::string& value);
  #if LANG_CXX11
  void set_stringtest(::std::string&& value);
  #endif
  void set_stringtest(const char* value);
  void set_stringtest(const char* value, size_t size);
  ::std::string* mutable_stringtest();
  ::std::string* release_stringtest();
  void set_allocated_stringtest(::std::string* stringtest);

  // int32 intTest = 1;
  void clear_inttest();
  static const int kIntTestFieldNumber = 1;
  ::google::protobuf::int32 inttest() const;
  void set_inttest(::google::protobuf::int32 value);

  // uint32 uintTest = 2;
  void clear_uinttest();
  static const int kUintTestFieldNumber = 2;
  ::google::protobuf::uint32 uinttest() const;
  void set_uinttest(::google::protobuf::uint32 value);

  // @@protoc_insertion_point(class_scope:MsgTest)
 private:

  ::google::protobuf::internal::InternalMetadataWithArena _internal_metadata_;
  ::google::protobuf::internal::ArenaStringPtr bytestest_;
  ::google::protobuf::internal::ArenaStringPtr stringtest_;
  ::google::protobuf::int32 inttest_;
  ::google::protobuf::uint32 uinttest_;
  mutable ::google::protobuf::internal::CachedSize _cached_size_;
  friend struct ::protobuf_MessageTest_2eproto::TableStruct;
};
// ===================================================================


// ===================================================================

#ifdef __GNUC__
  #pragma GCC diagnostic push
  #pragma GCC diagnostic ignored "-Wstrict-aliasing"
#endif  // __GNUC__
// MsgTest

// int32 intTest = 1;
inline void MsgTest::clear_inttest() {
  inttest_ = 0;
}
inline ::google::protobuf::int32 MsgTest::inttest() const {
  // @@protoc_insertion_point(field_get:MsgTest.intTest)
  return inttest_;
}
inline void MsgTest::set_inttest(::google::protobuf::int32 value) {
  
  inttest_ = value;
  // @@protoc_insertion_point(field_set:MsgTest.intTest)
}

// uint32 uintTest = 2;
inline void MsgTest::clear_uinttest() {
  uinttest_ = 0u;
}
inline ::google::protobuf::uint32 MsgTest::uinttest() const {
  // @@protoc_insertion_point(field_get:MsgTest.uintTest)
  return uinttest_;
}
inline void MsgTest::set_uinttest(::google::protobuf::uint32 value) {
  
  uinttest_ = value;
  // @@protoc_insertion_point(field_set:MsgTest.uintTest)
}

// bytes bytesTest = 3;
inline void MsgTest::clear_bytestest() {
  bytestest_.ClearToEmptyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline const ::std::string& MsgTest::bytestest() const {
  // @@protoc_insertion_point(field_get:MsgTest.bytesTest)
  return bytestest_.GetNoArena();
}
inline void MsgTest::set_bytestest(const ::std::string& value) {
  
  bytestest_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), value);
  // @@protoc_insertion_point(field_set:MsgTest.bytesTest)
}
#if LANG_CXX11
inline void MsgTest::set_bytestest(::std::string&& value) {
  
  bytestest_.SetNoArena(
    &::google::protobuf::internal::GetEmptyStringAlreadyInited(), ::std::move(value));
  // @@protoc_insertion_point(field_set_rvalue:MsgTest.bytesTest)
}
#endif
inline void MsgTest::set_bytestest(const char* value) {
  GOOGLE_DCHECK(value != NULL);
  
  bytestest_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), ::std::string(value));
  // @@protoc_insertion_point(field_set_char:MsgTest.bytesTest)
}
inline void MsgTest::set_bytestest(const void* value, size_t size) {
  
  bytestest_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(),
      ::std::string(reinterpret_cast<const char*>(value), size));
  // @@protoc_insertion_point(field_set_pointer:MsgTest.bytesTest)
}
inline ::std::string* MsgTest::mutable_bytestest() {
  
  // @@protoc_insertion_point(field_mutable:MsgTest.bytesTest)
  return bytestest_.MutableNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline ::std::string* MsgTest::release_bytestest() {
  // @@protoc_insertion_point(field_release:MsgTest.bytesTest)
  
  return bytestest_.ReleaseNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline void MsgTest::set_allocated_bytestest(::std::string* bytestest) {
  if (bytestest != NULL) {
    
  } else {
    
  }
  bytestest_.SetAllocatedNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), bytestest);
  // @@protoc_insertion_point(field_set_allocated:MsgTest.bytesTest)
}

// string stringTest = 4;
inline void MsgTest::clear_stringtest() {
  stringtest_.ClearToEmptyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline const ::std::string& MsgTest::stringtest() const {
  // @@protoc_insertion_point(field_get:MsgTest.stringTest)
  return stringtest_.GetNoArena();
}
inline void MsgTest::set_stringtest(const ::std::string& value) {
  
  stringtest_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), value);
  // @@protoc_insertion_point(field_set:MsgTest.stringTest)
}
#if LANG_CXX11
inline void MsgTest::set_stringtest(::std::string&& value) {
  
  stringtest_.SetNoArena(
    &::google::protobuf::internal::GetEmptyStringAlreadyInited(), ::std::move(value));
  // @@protoc_insertion_point(field_set_rvalue:MsgTest.stringTest)
}
#endif
inline void MsgTest::set_stringtest(const char* value) {
  GOOGLE_DCHECK(value != NULL);
  
  stringtest_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), ::std::string(value));
  // @@protoc_insertion_point(field_set_char:MsgTest.stringTest)
}
inline void MsgTest::set_stringtest(const char* value, size_t size) {
  
  stringtest_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(),
      ::std::string(reinterpret_cast<const char*>(value), size));
  // @@protoc_insertion_point(field_set_pointer:MsgTest.stringTest)
}
inline ::std::string* MsgTest::mutable_stringtest() {
  
  // @@protoc_insertion_point(field_mutable:MsgTest.stringTest)
  return stringtest_.MutableNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline ::std::string* MsgTest::release_stringtest() {
  // @@protoc_insertion_point(field_release:MsgTest.stringTest)
  
  return stringtest_.ReleaseNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline void MsgTest::set_allocated_stringtest(::std::string* stringtest) {
  if (stringtest != NULL) {
    
  } else {
    
  }
  stringtest_.SetAllocatedNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), stringtest);
  // @@protoc_insertion_point(field_set_allocated:MsgTest.stringTest)
}

#ifdef __GNUC__
  #pragma GCC diagnostic pop
#endif  // __GNUC__

// @@protoc_insertion_point(namespace_scope)


// @@protoc_insertion_point(global_scope)

#endif  // PROTOBUF_INCLUDED_MessageTest_2eproto
