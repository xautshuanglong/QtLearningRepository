// Generated by the protocol buffer compiler.  DO NOT EDIT!
// source: MessageInfo.proto

#include "MessageInfo.pb.h"

#include <algorithm>

#include <google/protobuf/stubs/common.h>
#include <google/protobuf/stubs/port.h>
#include <google/protobuf/io/coded_stream.h>
#include <google/protobuf/wire_format_lite_inl.h>
#include <google/protobuf/descriptor.h>
#include <google/protobuf/generated_message_reflection.h>
#include <google/protobuf/reflection_ops.h>
#include <google/protobuf/wire_format.h>
// This is a temporary google only hack
#ifdef GOOGLE_PROTOBUF_ENFORCE_UNIQUENESS
#include "third_party/protobuf/version.h"
#endif
// @@protoc_insertion_point(includes)

namespace protobuf_MessageInfo_2eproto {
extern PROTOBUF_INTERNAL_EXPORT_protobuf_MessageInfo_2eproto ::google::protobuf::internal::SCCInfo<0> scc_info_MessageCommand;
extern PROTOBUF_INTERNAL_EXPORT_protobuf_MessageInfo_2eproto ::google::protobuf::internal::SCCInfo<0> scc_info_MessageHeader;
extern PROTOBUF_INTERNAL_EXPORT_protobuf_MessageInfo_2eproto ::google::protobuf::internal::SCCInfo<0> scc_info_MessagePull;
extern PROTOBUF_INTERNAL_EXPORT_protobuf_MessageInfo_2eproto ::google::protobuf::internal::SCCInfo<0> scc_info_MessagePush;
extern PROTOBUF_INTERNAL_EXPORT_protobuf_MessageInfo_2eproto ::google::protobuf::internal::SCCInfo<0> scc_info_MessageRequest;
extern PROTOBUF_INTERNAL_EXPORT_protobuf_MessageInfo_2eproto ::google::protobuf::internal::SCCInfo<0> scc_info_MessageResponse;
extern PROTOBUF_INTERNAL_EXPORT_protobuf_MessageInfo_2eproto ::google::protobuf::internal::SCCInfo<5> scc_info_MessageBody;
}  // namespace protobuf_MessageInfo_2eproto
namespace com {
namespace genomics {
namespace protobuf {
class MessageRequestDefaultTypeInternal {
 public:
  ::google::protobuf::internal::ExplicitlyConstructed<MessageRequest>
      _instance;
} _MessageRequest_default_instance_;
class MessageResponseDefaultTypeInternal {
 public:
  ::google::protobuf::internal::ExplicitlyConstructed<MessageResponse>
      _instance;
} _MessageResponse_default_instance_;
class MessagePushDefaultTypeInternal {
 public:
  ::google::protobuf::internal::ExplicitlyConstructed<MessagePush>
      _instance;
} _MessagePush_default_instance_;
class MessagePullDefaultTypeInternal {
 public:
  ::google::protobuf::internal::ExplicitlyConstructed<MessagePull>
      _instance;
} _MessagePull_default_instance_;
class MessageCommandDefaultTypeInternal {
 public:
  ::google::protobuf::internal::ExplicitlyConstructed<MessageCommand>
      _instance;
} _MessageCommand_default_instance_;
class MessageHeaderDefaultTypeInternal {
 public:
  ::google::protobuf::internal::ExplicitlyConstructed<MessageHeader>
      _instance;
} _MessageHeader_default_instance_;
class MessageBodyDefaultTypeInternal {
 public:
  ::google::protobuf::internal::ExplicitlyConstructed<MessageBody>
      _instance;
} _MessageBody_default_instance_;
class MessageInfoDefaultTypeInternal {
 public:
  ::google::protobuf::internal::ExplicitlyConstructed<MessageInfo>
      _instance;
} _MessageInfo_default_instance_;
}  // namespace protobuf
}  // namespace genomics
}  // namespace com
namespace protobuf_MessageInfo_2eproto {
static void InitDefaultsMessageRequest() {
  GOOGLE_PROTOBUF_VERIFY_VERSION;

  {
    void* ptr = &::com::genomics::protobuf::_MessageRequest_default_instance_;
    new (ptr) ::com::genomics::protobuf::MessageRequest();
    ::google::protobuf::internal::OnShutdownDestroyMessage(ptr);
  }
  ::com::genomics::protobuf::MessageRequest::InitAsDefaultInstance();
}

::google::protobuf::internal::SCCInfo<0> scc_info_MessageRequest =
    {{ATOMIC_VAR_INIT(::google::protobuf::internal::SCCInfoBase::kUninitialized), 0, InitDefaultsMessageRequest}, {}};

static void InitDefaultsMessageResponse() {
  GOOGLE_PROTOBUF_VERIFY_VERSION;

  {
    void* ptr = &::com::genomics::protobuf::_MessageResponse_default_instance_;
    new (ptr) ::com::genomics::protobuf::MessageResponse();
    ::google::protobuf::internal::OnShutdownDestroyMessage(ptr);
  }
  ::com::genomics::protobuf::MessageResponse::InitAsDefaultInstance();
}

::google::protobuf::internal::SCCInfo<0> scc_info_MessageResponse =
    {{ATOMIC_VAR_INIT(::google::protobuf::internal::SCCInfoBase::kUninitialized), 0, InitDefaultsMessageResponse}, {}};

static void InitDefaultsMessagePush() {
  GOOGLE_PROTOBUF_VERIFY_VERSION;

  {
    void* ptr = &::com::genomics::protobuf::_MessagePush_default_instance_;
    new (ptr) ::com::genomics::protobuf::MessagePush();
    ::google::protobuf::internal::OnShutdownDestroyMessage(ptr);
  }
  ::com::genomics::protobuf::MessagePush::InitAsDefaultInstance();
}

::google::protobuf::internal::SCCInfo<0> scc_info_MessagePush =
    {{ATOMIC_VAR_INIT(::google::protobuf::internal::SCCInfoBase::kUninitialized), 0, InitDefaultsMessagePush}, {}};

static void InitDefaultsMessagePull() {
  GOOGLE_PROTOBUF_VERIFY_VERSION;

  {
    void* ptr = &::com::genomics::protobuf::_MessagePull_default_instance_;
    new (ptr) ::com::genomics::protobuf::MessagePull();
    ::google::protobuf::internal::OnShutdownDestroyMessage(ptr);
  }
  ::com::genomics::protobuf::MessagePull::InitAsDefaultInstance();
}

::google::protobuf::internal::SCCInfo<0> scc_info_MessagePull =
    {{ATOMIC_VAR_INIT(::google::protobuf::internal::SCCInfoBase::kUninitialized), 0, InitDefaultsMessagePull}, {}};

static void InitDefaultsMessageCommand() {
  GOOGLE_PROTOBUF_VERIFY_VERSION;

  {
    void* ptr = &::com::genomics::protobuf::_MessageCommand_default_instance_;
    new (ptr) ::com::genomics::protobuf::MessageCommand();
    ::google::protobuf::internal::OnShutdownDestroyMessage(ptr);
  }
  ::com::genomics::protobuf::MessageCommand::InitAsDefaultInstance();
}

::google::protobuf::internal::SCCInfo<0> scc_info_MessageCommand =
    {{ATOMIC_VAR_INIT(::google::protobuf::internal::SCCInfoBase::kUninitialized), 0, InitDefaultsMessageCommand}, {}};

static void InitDefaultsMessageHeader() {
  GOOGLE_PROTOBUF_VERIFY_VERSION;

  {
    void* ptr = &::com::genomics::protobuf::_MessageHeader_default_instance_;
    new (ptr) ::com::genomics::protobuf::MessageHeader();
    ::google::protobuf::internal::OnShutdownDestroyMessage(ptr);
  }
  ::com::genomics::protobuf::MessageHeader::InitAsDefaultInstance();
}

::google::protobuf::internal::SCCInfo<0> scc_info_MessageHeader =
    {{ATOMIC_VAR_INIT(::google::protobuf::internal::SCCInfoBase::kUninitialized), 0, InitDefaultsMessageHeader}, {}};

static void InitDefaultsMessageBody() {
  GOOGLE_PROTOBUF_VERIFY_VERSION;

  {
    void* ptr = &::com::genomics::protobuf::_MessageBody_default_instance_;
    new (ptr) ::com::genomics::protobuf::MessageBody();
    ::google::protobuf::internal::OnShutdownDestroyMessage(ptr);
  }
  ::com::genomics::protobuf::MessageBody::InitAsDefaultInstance();
}

::google::protobuf::internal::SCCInfo<5> scc_info_MessageBody =
    {{ATOMIC_VAR_INIT(::google::protobuf::internal::SCCInfoBase::kUninitialized), 5, InitDefaultsMessageBody}, {
      &protobuf_MessageInfo_2eproto::scc_info_MessageRequest.base,
      &protobuf_MessageInfo_2eproto::scc_info_MessageResponse.base,
      &protobuf_MessageInfo_2eproto::scc_info_MessagePush.base,
      &protobuf_MessageInfo_2eproto::scc_info_MessagePull.base,
      &protobuf_MessageInfo_2eproto::scc_info_MessageCommand.base,}};

static void InitDefaultsMessageInfo() {
  GOOGLE_PROTOBUF_VERIFY_VERSION;

  {
    void* ptr = &::com::genomics::protobuf::_MessageInfo_default_instance_;
    new (ptr) ::com::genomics::protobuf::MessageInfo();
    ::google::protobuf::internal::OnShutdownDestroyMessage(ptr);
  }
  ::com::genomics::protobuf::MessageInfo::InitAsDefaultInstance();
}

::google::protobuf::internal::SCCInfo<2> scc_info_MessageInfo =
    {{ATOMIC_VAR_INIT(::google::protobuf::internal::SCCInfoBase::kUninitialized), 2, InitDefaultsMessageInfo}, {
      &protobuf_MessageInfo_2eproto::scc_info_MessageHeader.base,
      &protobuf_MessageInfo_2eproto::scc_info_MessageBody.base,}};

void InitDefaults() {
  ::google::protobuf::internal::InitSCC(&scc_info_MessageRequest.base);
  ::google::protobuf::internal::InitSCC(&scc_info_MessageResponse.base);
  ::google::protobuf::internal::InitSCC(&scc_info_MessagePush.base);
  ::google::protobuf::internal::InitSCC(&scc_info_MessagePull.base);
  ::google::protobuf::internal::InitSCC(&scc_info_MessageCommand.base);
  ::google::protobuf::internal::InitSCC(&scc_info_MessageHeader.base);
  ::google::protobuf::internal::InitSCC(&scc_info_MessageBody.base);
  ::google::protobuf::internal::InitSCC(&scc_info_MessageInfo.base);
}

::google::protobuf::Metadata file_level_metadata[8];
const ::google::protobuf::EnumDescriptor* file_level_enum_descriptors[2];

const ::google::protobuf::uint32 TableStruct::offsets[] GOOGLE_PROTOBUF_ATTRIBUTE_SECTION_VARIABLE(protodesc_cold) = {
  ~0u,  // no _has_bits_
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::com::genomics::protobuf::MessageRequest, _internal_metadata_),
  ~0u,  // no _extensions_
  ~0u,  // no _oneof_case_
  ~0u,  // no _weak_field_map_
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::com::genomics::protobuf::MessageRequest, requestid_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::com::genomics::protobuf::MessageRequest, description_),
  ~0u,  // no _has_bits_
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::com::genomics::protobuf::MessageResponse, _internal_metadata_),
  ~0u,  // no _extensions_
  ~0u,  // no _oneof_case_
  ~0u,  // no _weak_field_map_
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::com::genomics::protobuf::MessageResponse, requestid_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::com::genomics::protobuf::MessageResponse, description_),
  ~0u,  // no _has_bits_
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::com::genomics::protobuf::MessagePush, _internal_metadata_),
  ~0u,  // no _extensions_
  ~0u,  // no _oneof_case_
  ~0u,  // no _weak_field_map_
  ~0u,  // no _has_bits_
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::com::genomics::protobuf::MessagePull, _internal_metadata_),
  ~0u,  // no _extensions_
  ~0u,  // no _oneof_case_
  ~0u,  // no _weak_field_map_
  ~0u,  // no _has_bits_
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::com::genomics::protobuf::MessageCommand, _internal_metadata_),
  ~0u,  // no _extensions_
  ~0u,  // no _oneof_case_
  ~0u,  // no _weak_field_map_
  ~0u,  // no _has_bits_
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::com::genomics::protobuf::MessageHeader, _internal_metadata_),
  ~0u,  // no _extensions_
  ~0u,  // no _oneof_case_
  ~0u,  // no _weak_field_map_
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::com::genomics::protobuf::MessageHeader, version_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::com::genomics::protobuf::MessageHeader, msgid_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::com::genomics::protobuf::MessageHeader, msgtype_),
  ~0u,  // no _has_bits_
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::com::genomics::protobuf::MessageBody, _internal_metadata_),
  ~0u,  // no _extensions_
  ~0u,  // no _oneof_case_
  ~0u,  // no _weak_field_map_
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::com::genomics::protobuf::MessageBody, msgrequest_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::com::genomics::protobuf::MessageBody, msgresponse_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::com::genomics::protobuf::MessageBody, msgpush_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::com::genomics::protobuf::MessageBody, msgpull_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::com::genomics::protobuf::MessageBody, msgcommand_),
  ~0u,  // no _has_bits_
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::com::genomics::protobuf::MessageInfo, _internal_metadata_),
  ~0u,  // no _extensions_
  ~0u,  // no _oneof_case_
  ~0u,  // no _weak_field_map_
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::com::genomics::protobuf::MessageInfo, msgheader_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::com::genomics::protobuf::MessageInfo, msgbody_),
};
static const ::google::protobuf::internal::MigrationSchema schemas[] GOOGLE_PROTOBUF_ATTRIBUTE_SECTION_VARIABLE(protodesc_cold) = {
  { 0, -1, sizeof(::com::genomics::protobuf::MessageRequest)},
  { 7, -1, sizeof(::com::genomics::protobuf::MessageResponse)},
  { 14, -1, sizeof(::com::genomics::protobuf::MessagePush)},
  { 19, -1, sizeof(::com::genomics::protobuf::MessagePull)},
  { 24, -1, sizeof(::com::genomics::protobuf::MessageCommand)},
  { 29, -1, sizeof(::com::genomics::protobuf::MessageHeader)},
  { 37, -1, sizeof(::com::genomics::protobuf::MessageBody)},
  { 47, -1, sizeof(::com::genomics::protobuf::MessageInfo)},
};

static ::google::protobuf::Message const * const file_default_instances[] = {
  reinterpret_cast<const ::google::protobuf::Message*>(&::com::genomics::protobuf::_MessageRequest_default_instance_),
  reinterpret_cast<const ::google::protobuf::Message*>(&::com::genomics::protobuf::_MessageResponse_default_instance_),
  reinterpret_cast<const ::google::protobuf::Message*>(&::com::genomics::protobuf::_MessagePush_default_instance_),
  reinterpret_cast<const ::google::protobuf::Message*>(&::com::genomics::protobuf::_MessagePull_default_instance_),
  reinterpret_cast<const ::google::protobuf::Message*>(&::com::genomics::protobuf::_MessageCommand_default_instance_),
  reinterpret_cast<const ::google::protobuf::Message*>(&::com::genomics::protobuf::_MessageHeader_default_instance_),
  reinterpret_cast<const ::google::protobuf::Message*>(&::com::genomics::protobuf::_MessageBody_default_instance_),
  reinterpret_cast<const ::google::protobuf::Message*>(&::com::genomics::protobuf::_MessageInfo_default_instance_),
};

void protobuf_AssignDescriptors() {
  AddDescriptors();
  AssignDescriptors(
      "MessageInfo.proto", schemas, file_default_instances, TableStruct::offsets,
      file_level_metadata, file_level_enum_descriptors, NULL);
}

void protobuf_AssignDescriptorsOnce() {
  static ::google::protobuf::internal::once_flag once;
  ::google::protobuf::internal::call_once(once, protobuf_AssignDescriptors);
}

void protobuf_RegisterTypes(const ::std::string&) GOOGLE_PROTOBUF_ATTRIBUTE_COLD;
void protobuf_RegisterTypes(const ::std::string&) {
  protobuf_AssignDescriptorsOnce();
  ::google::protobuf::internal::RegisterAllTypes(file_level_metadata, 8);
}

void AddDescriptorsImpl() {
  InitDefaults();
  static const char descriptor[] GOOGLE_PROTOBUF_ATTRIBUTE_SECTION_VARIABLE(protodesc_cold) = {
      "\n\021MessageInfo.proto\022\025com.genomics.protob"
      "uf\"8\n\016MessageRequest\022\021\n\trequestID\030\001 \001(\r\022"
      "\023\n\013description\030\002 \001(\t\"9\n\017MessageResponse\022"
      "\021\n\trequestID\030\001 \001(\r\022\023\n\013description\030\002 \001(\t\""
      "\r\n\013MessagePush\"\r\n\013MessagePull\"\020\n\016Message"
      "Command\"`\n\rMessageHeader\022\017\n\007version\030\001 \001("
      "\r\022\r\n\005msgID\030\002 \001(\r\022/\n\007msgType\030\003 \001(\0162\036.com."
      "genomics.protobuf.MsgType\"\252\002\n\013MessageBod"
      "y\0229\n\nmsgRequest\030\001 \001(\0132%.com.genomics.pro"
      "tobuf.MessageRequest\022;\n\013msgResponse\030\002 \001("
      "\0132&.com.genomics.protobuf.MessageRespons"
      "e\0223\n\007msgPush\030\003 \001(\0132\".com.genomics.protob"
      "uf.MessagePush\0223\n\007msgPull\030\004 \001(\0132\".com.ge"
      "nomics.protobuf.MessagePull\0229\n\nmsgComman"
      "d\030\005 \001(\0132%.com.genomics.protobuf.MessageC"
      "ommand\"{\n\013MessageInfo\0227\n\tmsgHeader\030\001 \001(\013"
      "2$.com.genomics.protobuf.MessageHeader\0223"
      "\n\007msgBody\030\002 \001(\0132\".com.genomics.protobuf."
      "MessageBody*{\n\007MsgType\022\021\n\rMsgTypeUnknow\020"
      "\000\022\022\n\016MsgTypeRequest\020d\022\023\n\017MsgTypeResponse"
      "\020e\022\017\n\013MsgTypePush\020f\022\017\n\013MsgTypePull\020g\022\022\n\016"
      "MsgTypeCommand\020h*J\n\013RequestType\022\021\n\rReqTy"
      "peUnknow\020\000\022\023\n\016ReqTypePdfFile\020\310\001\022\023\n\016ReqTy"
      "pePdfPage\020\311\001B)\n\025com.genomics.protobufB\020M"
      "essageInfoProtob\006proto3"
  };
  ::google::protobuf::DescriptorPool::InternalAddGeneratedFile(
      descriptor, 983);
  ::google::protobuf::MessageFactory::InternalRegisterGeneratedFile(
    "MessageInfo.proto", &protobuf_RegisterTypes);
}

void AddDescriptors() {
  static ::google::protobuf::internal::once_flag once;
  ::google::protobuf::internal::call_once(once, AddDescriptorsImpl);
}
// Force AddDescriptors() to be called at dynamic initialization time.
struct StaticDescriptorInitializer {
  StaticDescriptorInitializer() {
    AddDescriptors();
  }
} static_descriptor_initializer;
}  // namespace protobuf_MessageInfo_2eproto
namespace com {
namespace genomics {
namespace protobuf {
const ::google::protobuf::EnumDescriptor* MsgType_descriptor() {
  protobuf_MessageInfo_2eproto::protobuf_AssignDescriptorsOnce();
  return protobuf_MessageInfo_2eproto::file_level_enum_descriptors[0];
}
bool MsgType_IsValid(int value) {
  switch (value) {
    case 0:
    case 100:
    case 101:
    case 102:
    case 103:
    case 104:
      return true;
    default:
      return false;
  }
}

const ::google::protobuf::EnumDescriptor* RequestType_descriptor() {
  protobuf_MessageInfo_2eproto::protobuf_AssignDescriptorsOnce();
  return protobuf_MessageInfo_2eproto::file_level_enum_descriptors[1];
}
bool RequestType_IsValid(int value) {
  switch (value) {
    case 0:
    case 200:
    case 201:
      return true;
    default:
      return false;
  }
}


// ===================================================================

void MessageRequest::InitAsDefaultInstance() {
}
#if !defined(_MSC_VER) || _MSC_VER >= 1900
const int MessageRequest::kRequestIDFieldNumber;
const int MessageRequest::kDescriptionFieldNumber;
#endif  // !defined(_MSC_VER) || _MSC_VER >= 1900

MessageRequest::MessageRequest()
  : ::google::protobuf::Message(), _internal_metadata_(NULL) {
  ::google::protobuf::internal::InitSCC(
      &protobuf_MessageInfo_2eproto::scc_info_MessageRequest.base);
  SharedCtor();
  // @@protoc_insertion_point(constructor:com.genomics.protobuf.MessageRequest)
}
MessageRequest::MessageRequest(const MessageRequest& from)
  : ::google::protobuf::Message(),
      _internal_metadata_(NULL) {
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  description_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  if (from.description().size() > 0) {
    description_.AssignWithDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), from.description_);
  }
  requestid_ = from.requestid_;
  // @@protoc_insertion_point(copy_constructor:com.genomics.protobuf.MessageRequest)
}

void MessageRequest::SharedCtor() {
  description_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  requestid_ = 0u;
}

MessageRequest::~MessageRequest() {
  // @@protoc_insertion_point(destructor:com.genomics.protobuf.MessageRequest)
  SharedDtor();
}

void MessageRequest::SharedDtor() {
  description_.DestroyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}

void MessageRequest::SetCachedSize(int size) const {
  _cached_size_.Set(size);
}
const ::google::protobuf::Descriptor* MessageRequest::descriptor() {
  ::protobuf_MessageInfo_2eproto::protobuf_AssignDescriptorsOnce();
  return ::protobuf_MessageInfo_2eproto::file_level_metadata[kIndexInFileMessages].descriptor;
}

const MessageRequest& MessageRequest::default_instance() {
  ::google::protobuf::internal::InitSCC(&protobuf_MessageInfo_2eproto::scc_info_MessageRequest.base);
  return *internal_default_instance();
}


void MessageRequest::Clear() {
// @@protoc_insertion_point(message_clear_start:com.genomics.protobuf.MessageRequest)
  ::google::protobuf::uint32 cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  description_.ClearToEmptyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  requestid_ = 0u;
  _internal_metadata_.Clear();
}

bool MessageRequest::MergePartialFromCodedStream(
    ::google::protobuf::io::CodedInputStream* input) {
#define DO_(EXPRESSION) if (!GOOGLE_PREDICT_TRUE(EXPRESSION)) goto failure
  ::google::protobuf::uint32 tag;
  // @@protoc_insertion_point(parse_start:com.genomics.protobuf.MessageRequest)
  for (;;) {
    ::std::pair<::google::protobuf::uint32, bool> p = input->ReadTagWithCutoffNoLastTag(127u);
    tag = p.first;
    if (!p.second) goto handle_unusual;
    switch (::google::protobuf::internal::WireFormatLite::GetTagFieldNumber(tag)) {
      // uint32 requestID = 1;
      case 1: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(8u /* 8 & 0xFF */)) {

          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::uint32, ::google::protobuf::internal::WireFormatLite::TYPE_UINT32>(
                 input, &requestid_)));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // string description = 2;
      case 2: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(18u /* 18 & 0xFF */)) {
          DO_(::google::protobuf::internal::WireFormatLite::ReadString(
                input, this->mutable_description()));
          DO_(::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
            this->description().data(), static_cast<int>(this->description().length()),
            ::google::protobuf::internal::WireFormatLite::PARSE,
            "com.genomics.protobuf.MessageRequest.description"));
        } else {
          goto handle_unusual;
        }
        break;
      }

      default: {
      handle_unusual:
        if (tag == 0) {
          goto success;
        }
        DO_(::google::protobuf::internal::WireFormat::SkipField(
              input, tag, _internal_metadata_.mutable_unknown_fields()));
        break;
      }
    }
  }
success:
  // @@protoc_insertion_point(parse_success:com.genomics.protobuf.MessageRequest)
  return true;
failure:
  // @@protoc_insertion_point(parse_failure:com.genomics.protobuf.MessageRequest)
  return false;
#undef DO_
}

void MessageRequest::SerializeWithCachedSizes(
    ::google::protobuf::io::CodedOutputStream* output) const {
  // @@protoc_insertion_point(serialize_start:com.genomics.protobuf.MessageRequest)
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  // uint32 requestID = 1;
  if (this->requestid() != 0) {
    ::google::protobuf::internal::WireFormatLite::WriteUInt32(1, this->requestid(), output);
  }

  // string description = 2;
  if (this->description().size() > 0) {
    ::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
      this->description().data(), static_cast<int>(this->description().length()),
      ::google::protobuf::internal::WireFormatLite::SERIALIZE,
      "com.genomics.protobuf.MessageRequest.description");
    ::google::protobuf::internal::WireFormatLite::WriteStringMaybeAliased(
      2, this->description(), output);
  }

  if ((_internal_metadata_.have_unknown_fields() &&  ::google::protobuf::internal::GetProto3PreserveUnknownsDefault())) {
    ::google::protobuf::internal::WireFormat::SerializeUnknownFields(
        (::google::protobuf::internal::GetProto3PreserveUnknownsDefault()   ? _internal_metadata_.unknown_fields()   : _internal_metadata_.default_instance()), output);
  }
  // @@protoc_insertion_point(serialize_end:com.genomics.protobuf.MessageRequest)
}

::google::protobuf::uint8* MessageRequest::InternalSerializeWithCachedSizesToArray(
    bool deterministic, ::google::protobuf::uint8* target) const {
  (void)deterministic; // Unused
  // @@protoc_insertion_point(serialize_to_array_start:com.genomics.protobuf.MessageRequest)
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  // uint32 requestID = 1;
  if (this->requestid() != 0) {
    target = ::google::protobuf::internal::WireFormatLite::WriteUInt32ToArray(1, this->requestid(), target);
  }

  // string description = 2;
  if (this->description().size() > 0) {
    ::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
      this->description().data(), static_cast<int>(this->description().length()),
      ::google::protobuf::internal::WireFormatLite::SERIALIZE,
      "com.genomics.protobuf.MessageRequest.description");
    target =
      ::google::protobuf::internal::WireFormatLite::WriteStringToArray(
        2, this->description(), target);
  }

  if ((_internal_metadata_.have_unknown_fields() &&  ::google::protobuf::internal::GetProto3PreserveUnknownsDefault())) {
    target = ::google::protobuf::internal::WireFormat::SerializeUnknownFieldsToArray(
        (::google::protobuf::internal::GetProto3PreserveUnknownsDefault()   ? _internal_metadata_.unknown_fields()   : _internal_metadata_.default_instance()), target);
  }
  // @@protoc_insertion_point(serialize_to_array_end:com.genomics.protobuf.MessageRequest)
  return target;
}

size_t MessageRequest::ByteSizeLong() const {
// @@protoc_insertion_point(message_byte_size_start:com.genomics.protobuf.MessageRequest)
  size_t total_size = 0;

  if ((_internal_metadata_.have_unknown_fields() &&  ::google::protobuf::internal::GetProto3PreserveUnknownsDefault())) {
    total_size +=
      ::google::protobuf::internal::WireFormat::ComputeUnknownFieldsSize(
        (::google::protobuf::internal::GetProto3PreserveUnknownsDefault()   ? _internal_metadata_.unknown_fields()   : _internal_metadata_.default_instance()));
  }
  // string description = 2;
  if (this->description().size() > 0) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::StringSize(
        this->description());
  }

  // uint32 requestID = 1;
  if (this->requestid() != 0) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::UInt32Size(
        this->requestid());
  }

  int cached_size = ::google::protobuf::internal::ToCachedSize(total_size);
  SetCachedSize(cached_size);
  return total_size;
}

void MessageRequest::MergeFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_merge_from_start:com.genomics.protobuf.MessageRequest)
  GOOGLE_DCHECK_NE(&from, this);
  const MessageRequest* source =
      ::google::protobuf::internal::DynamicCastToGenerated<const MessageRequest>(
          &from);
  if (source == NULL) {
  // @@protoc_insertion_point(generalized_merge_from_cast_fail:com.genomics.protobuf.MessageRequest)
    ::google::protobuf::internal::ReflectionOps::Merge(from, this);
  } else {
  // @@protoc_insertion_point(generalized_merge_from_cast_success:com.genomics.protobuf.MessageRequest)
    MergeFrom(*source);
  }
}

void MessageRequest::MergeFrom(const MessageRequest& from) {
// @@protoc_insertion_point(class_specific_merge_from_start:com.genomics.protobuf.MessageRequest)
  GOOGLE_DCHECK_NE(&from, this);
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  if (from.description().size() > 0) {

    description_.AssignWithDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), from.description_);
  }
  if (from.requestid() != 0) {
    set_requestid(from.requestid());
  }
}

void MessageRequest::CopyFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_copy_from_start:com.genomics.protobuf.MessageRequest)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void MessageRequest::CopyFrom(const MessageRequest& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:com.genomics.protobuf.MessageRequest)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool MessageRequest::IsInitialized() const {
  return true;
}

void MessageRequest::Swap(MessageRequest* other) {
  if (other == this) return;
  InternalSwap(other);
}
void MessageRequest::InternalSwap(MessageRequest* other) {
  using std::swap;
  description_.Swap(&other->description_, &::google::protobuf::internal::GetEmptyStringAlreadyInited(),
    GetArenaNoVirtual());
  swap(requestid_, other->requestid_);
  _internal_metadata_.Swap(&other->_internal_metadata_);
}

::google::protobuf::Metadata MessageRequest::GetMetadata() const {
  protobuf_MessageInfo_2eproto::protobuf_AssignDescriptorsOnce();
  return ::protobuf_MessageInfo_2eproto::file_level_metadata[kIndexInFileMessages];
}


// ===================================================================

void MessageResponse::InitAsDefaultInstance() {
}
#if !defined(_MSC_VER) || _MSC_VER >= 1900
const int MessageResponse::kRequestIDFieldNumber;
const int MessageResponse::kDescriptionFieldNumber;
#endif  // !defined(_MSC_VER) || _MSC_VER >= 1900

MessageResponse::MessageResponse()
  : ::google::protobuf::Message(), _internal_metadata_(NULL) {
  ::google::protobuf::internal::InitSCC(
      &protobuf_MessageInfo_2eproto::scc_info_MessageResponse.base);
  SharedCtor();
  // @@protoc_insertion_point(constructor:com.genomics.protobuf.MessageResponse)
}
MessageResponse::MessageResponse(const MessageResponse& from)
  : ::google::protobuf::Message(),
      _internal_metadata_(NULL) {
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  description_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  if (from.description().size() > 0) {
    description_.AssignWithDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), from.description_);
  }
  requestid_ = from.requestid_;
  // @@protoc_insertion_point(copy_constructor:com.genomics.protobuf.MessageResponse)
}

void MessageResponse::SharedCtor() {
  description_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  requestid_ = 0u;
}

MessageResponse::~MessageResponse() {
  // @@protoc_insertion_point(destructor:com.genomics.protobuf.MessageResponse)
  SharedDtor();
}

void MessageResponse::SharedDtor() {
  description_.DestroyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}

void MessageResponse::SetCachedSize(int size) const {
  _cached_size_.Set(size);
}
const ::google::protobuf::Descriptor* MessageResponse::descriptor() {
  ::protobuf_MessageInfo_2eproto::protobuf_AssignDescriptorsOnce();
  return ::protobuf_MessageInfo_2eproto::file_level_metadata[kIndexInFileMessages].descriptor;
}

const MessageResponse& MessageResponse::default_instance() {
  ::google::protobuf::internal::InitSCC(&protobuf_MessageInfo_2eproto::scc_info_MessageResponse.base);
  return *internal_default_instance();
}


void MessageResponse::Clear() {
// @@protoc_insertion_point(message_clear_start:com.genomics.protobuf.MessageResponse)
  ::google::protobuf::uint32 cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  description_.ClearToEmptyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  requestid_ = 0u;
  _internal_metadata_.Clear();
}

bool MessageResponse::MergePartialFromCodedStream(
    ::google::protobuf::io::CodedInputStream* input) {
#define DO_(EXPRESSION) if (!GOOGLE_PREDICT_TRUE(EXPRESSION)) goto failure
  ::google::protobuf::uint32 tag;
  // @@protoc_insertion_point(parse_start:com.genomics.protobuf.MessageResponse)
  for (;;) {
    ::std::pair<::google::protobuf::uint32, bool> p = input->ReadTagWithCutoffNoLastTag(127u);
    tag = p.first;
    if (!p.second) goto handle_unusual;
    switch (::google::protobuf::internal::WireFormatLite::GetTagFieldNumber(tag)) {
      // uint32 requestID = 1;
      case 1: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(8u /* 8 & 0xFF */)) {

          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::uint32, ::google::protobuf::internal::WireFormatLite::TYPE_UINT32>(
                 input, &requestid_)));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // string description = 2;
      case 2: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(18u /* 18 & 0xFF */)) {
          DO_(::google::protobuf::internal::WireFormatLite::ReadString(
                input, this->mutable_description()));
          DO_(::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
            this->description().data(), static_cast<int>(this->description().length()),
            ::google::protobuf::internal::WireFormatLite::PARSE,
            "com.genomics.protobuf.MessageResponse.description"));
        } else {
          goto handle_unusual;
        }
        break;
      }

      default: {
      handle_unusual:
        if (tag == 0) {
          goto success;
        }
        DO_(::google::protobuf::internal::WireFormat::SkipField(
              input, tag, _internal_metadata_.mutable_unknown_fields()));
        break;
      }
    }
  }
success:
  // @@protoc_insertion_point(parse_success:com.genomics.protobuf.MessageResponse)
  return true;
failure:
  // @@protoc_insertion_point(parse_failure:com.genomics.protobuf.MessageResponse)
  return false;
#undef DO_
}

void MessageResponse::SerializeWithCachedSizes(
    ::google::protobuf::io::CodedOutputStream* output) const {
  // @@protoc_insertion_point(serialize_start:com.genomics.protobuf.MessageResponse)
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  // uint32 requestID = 1;
  if (this->requestid() != 0) {
    ::google::protobuf::internal::WireFormatLite::WriteUInt32(1, this->requestid(), output);
  }

  // string description = 2;
  if (this->description().size() > 0) {
    ::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
      this->description().data(), static_cast<int>(this->description().length()),
      ::google::protobuf::internal::WireFormatLite::SERIALIZE,
      "com.genomics.protobuf.MessageResponse.description");
    ::google::protobuf::internal::WireFormatLite::WriteStringMaybeAliased(
      2, this->description(), output);
  }

  if ((_internal_metadata_.have_unknown_fields() &&  ::google::protobuf::internal::GetProto3PreserveUnknownsDefault())) {
    ::google::protobuf::internal::WireFormat::SerializeUnknownFields(
        (::google::protobuf::internal::GetProto3PreserveUnknownsDefault()   ? _internal_metadata_.unknown_fields()   : _internal_metadata_.default_instance()), output);
  }
  // @@protoc_insertion_point(serialize_end:com.genomics.protobuf.MessageResponse)
}

::google::protobuf::uint8* MessageResponse::InternalSerializeWithCachedSizesToArray(
    bool deterministic, ::google::protobuf::uint8* target) const {
  (void)deterministic; // Unused
  // @@protoc_insertion_point(serialize_to_array_start:com.genomics.protobuf.MessageResponse)
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  // uint32 requestID = 1;
  if (this->requestid() != 0) {
    target = ::google::protobuf::internal::WireFormatLite::WriteUInt32ToArray(1, this->requestid(), target);
  }

  // string description = 2;
  if (this->description().size() > 0) {
    ::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
      this->description().data(), static_cast<int>(this->description().length()),
      ::google::protobuf::internal::WireFormatLite::SERIALIZE,
      "com.genomics.protobuf.MessageResponse.description");
    target =
      ::google::protobuf::internal::WireFormatLite::WriteStringToArray(
        2, this->description(), target);
  }

  if ((_internal_metadata_.have_unknown_fields() &&  ::google::protobuf::internal::GetProto3PreserveUnknownsDefault())) {
    target = ::google::protobuf::internal::WireFormat::SerializeUnknownFieldsToArray(
        (::google::protobuf::internal::GetProto3PreserveUnknownsDefault()   ? _internal_metadata_.unknown_fields()   : _internal_metadata_.default_instance()), target);
  }
  // @@protoc_insertion_point(serialize_to_array_end:com.genomics.protobuf.MessageResponse)
  return target;
}

size_t MessageResponse::ByteSizeLong() const {
// @@protoc_insertion_point(message_byte_size_start:com.genomics.protobuf.MessageResponse)
  size_t total_size = 0;

  if ((_internal_metadata_.have_unknown_fields() &&  ::google::protobuf::internal::GetProto3PreserveUnknownsDefault())) {
    total_size +=
      ::google::protobuf::internal::WireFormat::ComputeUnknownFieldsSize(
        (::google::protobuf::internal::GetProto3PreserveUnknownsDefault()   ? _internal_metadata_.unknown_fields()   : _internal_metadata_.default_instance()));
  }
  // string description = 2;
  if (this->description().size() > 0) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::StringSize(
        this->description());
  }

  // uint32 requestID = 1;
  if (this->requestid() != 0) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::UInt32Size(
        this->requestid());
  }

  int cached_size = ::google::protobuf::internal::ToCachedSize(total_size);
  SetCachedSize(cached_size);
  return total_size;
}

void MessageResponse::MergeFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_merge_from_start:com.genomics.protobuf.MessageResponse)
  GOOGLE_DCHECK_NE(&from, this);
  const MessageResponse* source =
      ::google::protobuf::internal::DynamicCastToGenerated<const MessageResponse>(
          &from);
  if (source == NULL) {
  // @@protoc_insertion_point(generalized_merge_from_cast_fail:com.genomics.protobuf.MessageResponse)
    ::google::protobuf::internal::ReflectionOps::Merge(from, this);
  } else {
  // @@protoc_insertion_point(generalized_merge_from_cast_success:com.genomics.protobuf.MessageResponse)
    MergeFrom(*source);
  }
}

void MessageResponse::MergeFrom(const MessageResponse& from) {
// @@protoc_insertion_point(class_specific_merge_from_start:com.genomics.protobuf.MessageResponse)
  GOOGLE_DCHECK_NE(&from, this);
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  if (from.description().size() > 0) {

    description_.AssignWithDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), from.description_);
  }
  if (from.requestid() != 0) {
    set_requestid(from.requestid());
  }
}

void MessageResponse::CopyFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_copy_from_start:com.genomics.protobuf.MessageResponse)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void MessageResponse::CopyFrom(const MessageResponse& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:com.genomics.protobuf.MessageResponse)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool MessageResponse::IsInitialized() const {
  return true;
}

void MessageResponse::Swap(MessageResponse* other) {
  if (other == this) return;
  InternalSwap(other);
}
void MessageResponse::InternalSwap(MessageResponse* other) {
  using std::swap;
  description_.Swap(&other->description_, &::google::protobuf::internal::GetEmptyStringAlreadyInited(),
    GetArenaNoVirtual());
  swap(requestid_, other->requestid_);
  _internal_metadata_.Swap(&other->_internal_metadata_);
}

::google::protobuf::Metadata MessageResponse::GetMetadata() const {
  protobuf_MessageInfo_2eproto::protobuf_AssignDescriptorsOnce();
  return ::protobuf_MessageInfo_2eproto::file_level_metadata[kIndexInFileMessages];
}


// ===================================================================

void MessagePush::InitAsDefaultInstance() {
}
#if !defined(_MSC_VER) || _MSC_VER >= 1900
#endif  // !defined(_MSC_VER) || _MSC_VER >= 1900

MessagePush::MessagePush()
  : ::google::protobuf::Message(), _internal_metadata_(NULL) {
  ::google::protobuf::internal::InitSCC(
      &protobuf_MessageInfo_2eproto::scc_info_MessagePush.base);
  SharedCtor();
  // @@protoc_insertion_point(constructor:com.genomics.protobuf.MessagePush)
}
MessagePush::MessagePush(const MessagePush& from)
  : ::google::protobuf::Message(),
      _internal_metadata_(NULL) {
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  // @@protoc_insertion_point(copy_constructor:com.genomics.protobuf.MessagePush)
}

void MessagePush::SharedCtor() {
}

MessagePush::~MessagePush() {
  // @@protoc_insertion_point(destructor:com.genomics.protobuf.MessagePush)
  SharedDtor();
}

void MessagePush::SharedDtor() {
}

void MessagePush::SetCachedSize(int size) const {
  _cached_size_.Set(size);
}
const ::google::protobuf::Descriptor* MessagePush::descriptor() {
  ::protobuf_MessageInfo_2eproto::protobuf_AssignDescriptorsOnce();
  return ::protobuf_MessageInfo_2eproto::file_level_metadata[kIndexInFileMessages].descriptor;
}

const MessagePush& MessagePush::default_instance() {
  ::google::protobuf::internal::InitSCC(&protobuf_MessageInfo_2eproto::scc_info_MessagePush.base);
  return *internal_default_instance();
}


void MessagePush::Clear() {
// @@protoc_insertion_point(message_clear_start:com.genomics.protobuf.MessagePush)
  ::google::protobuf::uint32 cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  _internal_metadata_.Clear();
}

bool MessagePush::MergePartialFromCodedStream(
    ::google::protobuf::io::CodedInputStream* input) {
#define DO_(EXPRESSION) if (!GOOGLE_PREDICT_TRUE(EXPRESSION)) goto failure
  ::google::protobuf::uint32 tag;
  // @@protoc_insertion_point(parse_start:com.genomics.protobuf.MessagePush)
  for (;;) {
    ::std::pair<::google::protobuf::uint32, bool> p = input->ReadTagWithCutoffNoLastTag(127u);
    tag = p.first;
    if (!p.second) goto handle_unusual;
  handle_unusual:
    if (tag == 0) {
      goto success;
    }
    DO_(::google::protobuf::internal::WireFormat::SkipField(
          input, tag, _internal_metadata_.mutable_unknown_fields()));
  }
success:
  // @@protoc_insertion_point(parse_success:com.genomics.protobuf.MessagePush)
  return true;
failure:
  // @@protoc_insertion_point(parse_failure:com.genomics.protobuf.MessagePush)
  return false;
#undef DO_
}

void MessagePush::SerializeWithCachedSizes(
    ::google::protobuf::io::CodedOutputStream* output) const {
  // @@protoc_insertion_point(serialize_start:com.genomics.protobuf.MessagePush)
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  if ((_internal_metadata_.have_unknown_fields() &&  ::google::protobuf::internal::GetProto3PreserveUnknownsDefault())) {
    ::google::protobuf::internal::WireFormat::SerializeUnknownFields(
        (::google::protobuf::internal::GetProto3PreserveUnknownsDefault()   ? _internal_metadata_.unknown_fields()   : _internal_metadata_.default_instance()), output);
  }
  // @@protoc_insertion_point(serialize_end:com.genomics.protobuf.MessagePush)
}

::google::protobuf::uint8* MessagePush::InternalSerializeWithCachedSizesToArray(
    bool deterministic, ::google::protobuf::uint8* target) const {
  (void)deterministic; // Unused
  // @@protoc_insertion_point(serialize_to_array_start:com.genomics.protobuf.MessagePush)
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  if ((_internal_metadata_.have_unknown_fields() &&  ::google::protobuf::internal::GetProto3PreserveUnknownsDefault())) {
    target = ::google::protobuf::internal::WireFormat::SerializeUnknownFieldsToArray(
        (::google::protobuf::internal::GetProto3PreserveUnknownsDefault()   ? _internal_metadata_.unknown_fields()   : _internal_metadata_.default_instance()), target);
  }
  // @@protoc_insertion_point(serialize_to_array_end:com.genomics.protobuf.MessagePush)
  return target;
}

size_t MessagePush::ByteSizeLong() const {
// @@protoc_insertion_point(message_byte_size_start:com.genomics.protobuf.MessagePush)
  size_t total_size = 0;

  if ((_internal_metadata_.have_unknown_fields() &&  ::google::protobuf::internal::GetProto3PreserveUnknownsDefault())) {
    total_size +=
      ::google::protobuf::internal::WireFormat::ComputeUnknownFieldsSize(
        (::google::protobuf::internal::GetProto3PreserveUnknownsDefault()   ? _internal_metadata_.unknown_fields()   : _internal_metadata_.default_instance()));
  }
  int cached_size = ::google::protobuf::internal::ToCachedSize(total_size);
  SetCachedSize(cached_size);
  return total_size;
}

void MessagePush::MergeFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_merge_from_start:com.genomics.protobuf.MessagePush)
  GOOGLE_DCHECK_NE(&from, this);
  const MessagePush* source =
      ::google::protobuf::internal::DynamicCastToGenerated<const MessagePush>(
          &from);
  if (source == NULL) {
  // @@protoc_insertion_point(generalized_merge_from_cast_fail:com.genomics.protobuf.MessagePush)
    ::google::protobuf::internal::ReflectionOps::Merge(from, this);
  } else {
  // @@protoc_insertion_point(generalized_merge_from_cast_success:com.genomics.protobuf.MessagePush)
    MergeFrom(*source);
  }
}

void MessagePush::MergeFrom(const MessagePush& from) {
// @@protoc_insertion_point(class_specific_merge_from_start:com.genomics.protobuf.MessagePush)
  GOOGLE_DCHECK_NE(&from, this);
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

}

void MessagePush::CopyFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_copy_from_start:com.genomics.protobuf.MessagePush)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void MessagePush::CopyFrom(const MessagePush& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:com.genomics.protobuf.MessagePush)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool MessagePush::IsInitialized() const {
  return true;
}

void MessagePush::Swap(MessagePush* other) {
  if (other == this) return;
  InternalSwap(other);
}
void MessagePush::InternalSwap(MessagePush* other) {
  using std::swap;
  _internal_metadata_.Swap(&other->_internal_metadata_);
}

::google::protobuf::Metadata MessagePush::GetMetadata() const {
  protobuf_MessageInfo_2eproto::protobuf_AssignDescriptorsOnce();
  return ::protobuf_MessageInfo_2eproto::file_level_metadata[kIndexInFileMessages];
}


// ===================================================================

void MessagePull::InitAsDefaultInstance() {
}
#if !defined(_MSC_VER) || _MSC_VER >= 1900
#endif  // !defined(_MSC_VER) || _MSC_VER >= 1900

MessagePull::MessagePull()
  : ::google::protobuf::Message(), _internal_metadata_(NULL) {
  ::google::protobuf::internal::InitSCC(
      &protobuf_MessageInfo_2eproto::scc_info_MessagePull.base);
  SharedCtor();
  // @@protoc_insertion_point(constructor:com.genomics.protobuf.MessagePull)
}
MessagePull::MessagePull(const MessagePull& from)
  : ::google::protobuf::Message(),
      _internal_metadata_(NULL) {
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  // @@protoc_insertion_point(copy_constructor:com.genomics.protobuf.MessagePull)
}

void MessagePull::SharedCtor() {
}

MessagePull::~MessagePull() {
  // @@protoc_insertion_point(destructor:com.genomics.protobuf.MessagePull)
  SharedDtor();
}

void MessagePull::SharedDtor() {
}

void MessagePull::SetCachedSize(int size) const {
  _cached_size_.Set(size);
}
const ::google::protobuf::Descriptor* MessagePull::descriptor() {
  ::protobuf_MessageInfo_2eproto::protobuf_AssignDescriptorsOnce();
  return ::protobuf_MessageInfo_2eproto::file_level_metadata[kIndexInFileMessages].descriptor;
}

const MessagePull& MessagePull::default_instance() {
  ::google::protobuf::internal::InitSCC(&protobuf_MessageInfo_2eproto::scc_info_MessagePull.base);
  return *internal_default_instance();
}


void MessagePull::Clear() {
// @@protoc_insertion_point(message_clear_start:com.genomics.protobuf.MessagePull)
  ::google::protobuf::uint32 cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  _internal_metadata_.Clear();
}

bool MessagePull::MergePartialFromCodedStream(
    ::google::protobuf::io::CodedInputStream* input) {
#define DO_(EXPRESSION) if (!GOOGLE_PREDICT_TRUE(EXPRESSION)) goto failure
  ::google::protobuf::uint32 tag;
  // @@protoc_insertion_point(parse_start:com.genomics.protobuf.MessagePull)
  for (;;) {
    ::std::pair<::google::protobuf::uint32, bool> p = input->ReadTagWithCutoffNoLastTag(127u);
    tag = p.first;
    if (!p.second) goto handle_unusual;
  handle_unusual:
    if (tag == 0) {
      goto success;
    }
    DO_(::google::protobuf::internal::WireFormat::SkipField(
          input, tag, _internal_metadata_.mutable_unknown_fields()));
  }
success:
  // @@protoc_insertion_point(parse_success:com.genomics.protobuf.MessagePull)
  return true;
failure:
  // @@protoc_insertion_point(parse_failure:com.genomics.protobuf.MessagePull)
  return false;
#undef DO_
}

void MessagePull::SerializeWithCachedSizes(
    ::google::protobuf::io::CodedOutputStream* output) const {
  // @@protoc_insertion_point(serialize_start:com.genomics.protobuf.MessagePull)
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  if ((_internal_metadata_.have_unknown_fields() &&  ::google::protobuf::internal::GetProto3PreserveUnknownsDefault())) {
    ::google::protobuf::internal::WireFormat::SerializeUnknownFields(
        (::google::protobuf::internal::GetProto3PreserveUnknownsDefault()   ? _internal_metadata_.unknown_fields()   : _internal_metadata_.default_instance()), output);
  }
  // @@protoc_insertion_point(serialize_end:com.genomics.protobuf.MessagePull)
}

::google::protobuf::uint8* MessagePull::InternalSerializeWithCachedSizesToArray(
    bool deterministic, ::google::protobuf::uint8* target) const {
  (void)deterministic; // Unused
  // @@protoc_insertion_point(serialize_to_array_start:com.genomics.protobuf.MessagePull)
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  if ((_internal_metadata_.have_unknown_fields() &&  ::google::protobuf::internal::GetProto3PreserveUnknownsDefault())) {
    target = ::google::protobuf::internal::WireFormat::SerializeUnknownFieldsToArray(
        (::google::protobuf::internal::GetProto3PreserveUnknownsDefault()   ? _internal_metadata_.unknown_fields()   : _internal_metadata_.default_instance()), target);
  }
  // @@protoc_insertion_point(serialize_to_array_end:com.genomics.protobuf.MessagePull)
  return target;
}

size_t MessagePull::ByteSizeLong() const {
// @@protoc_insertion_point(message_byte_size_start:com.genomics.protobuf.MessagePull)
  size_t total_size = 0;

  if ((_internal_metadata_.have_unknown_fields() &&  ::google::protobuf::internal::GetProto3PreserveUnknownsDefault())) {
    total_size +=
      ::google::protobuf::internal::WireFormat::ComputeUnknownFieldsSize(
        (::google::protobuf::internal::GetProto3PreserveUnknownsDefault()   ? _internal_metadata_.unknown_fields()   : _internal_metadata_.default_instance()));
  }
  int cached_size = ::google::protobuf::internal::ToCachedSize(total_size);
  SetCachedSize(cached_size);
  return total_size;
}

void MessagePull::MergeFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_merge_from_start:com.genomics.protobuf.MessagePull)
  GOOGLE_DCHECK_NE(&from, this);
  const MessagePull* source =
      ::google::protobuf::internal::DynamicCastToGenerated<const MessagePull>(
          &from);
  if (source == NULL) {
  // @@protoc_insertion_point(generalized_merge_from_cast_fail:com.genomics.protobuf.MessagePull)
    ::google::protobuf::internal::ReflectionOps::Merge(from, this);
  } else {
  // @@protoc_insertion_point(generalized_merge_from_cast_success:com.genomics.protobuf.MessagePull)
    MergeFrom(*source);
  }
}

void MessagePull::MergeFrom(const MessagePull& from) {
// @@protoc_insertion_point(class_specific_merge_from_start:com.genomics.protobuf.MessagePull)
  GOOGLE_DCHECK_NE(&from, this);
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

}

void MessagePull::CopyFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_copy_from_start:com.genomics.protobuf.MessagePull)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void MessagePull::CopyFrom(const MessagePull& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:com.genomics.protobuf.MessagePull)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool MessagePull::IsInitialized() const {
  return true;
}

void MessagePull::Swap(MessagePull* other) {
  if (other == this) return;
  InternalSwap(other);
}
void MessagePull::InternalSwap(MessagePull* other) {
  using std::swap;
  _internal_metadata_.Swap(&other->_internal_metadata_);
}

::google::protobuf::Metadata MessagePull::GetMetadata() const {
  protobuf_MessageInfo_2eproto::protobuf_AssignDescriptorsOnce();
  return ::protobuf_MessageInfo_2eproto::file_level_metadata[kIndexInFileMessages];
}


// ===================================================================

void MessageCommand::InitAsDefaultInstance() {
}
#if !defined(_MSC_VER) || _MSC_VER >= 1900
#endif  // !defined(_MSC_VER) || _MSC_VER >= 1900

MessageCommand::MessageCommand()
  : ::google::protobuf::Message(), _internal_metadata_(NULL) {
  ::google::protobuf::internal::InitSCC(
      &protobuf_MessageInfo_2eproto::scc_info_MessageCommand.base);
  SharedCtor();
  // @@protoc_insertion_point(constructor:com.genomics.protobuf.MessageCommand)
}
MessageCommand::MessageCommand(const MessageCommand& from)
  : ::google::protobuf::Message(),
      _internal_metadata_(NULL) {
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  // @@protoc_insertion_point(copy_constructor:com.genomics.protobuf.MessageCommand)
}

void MessageCommand::SharedCtor() {
}

MessageCommand::~MessageCommand() {
  // @@protoc_insertion_point(destructor:com.genomics.protobuf.MessageCommand)
  SharedDtor();
}

void MessageCommand::SharedDtor() {
}

void MessageCommand::SetCachedSize(int size) const {
  _cached_size_.Set(size);
}
const ::google::protobuf::Descriptor* MessageCommand::descriptor() {
  ::protobuf_MessageInfo_2eproto::protobuf_AssignDescriptorsOnce();
  return ::protobuf_MessageInfo_2eproto::file_level_metadata[kIndexInFileMessages].descriptor;
}

const MessageCommand& MessageCommand::default_instance() {
  ::google::protobuf::internal::InitSCC(&protobuf_MessageInfo_2eproto::scc_info_MessageCommand.base);
  return *internal_default_instance();
}


void MessageCommand::Clear() {
// @@protoc_insertion_point(message_clear_start:com.genomics.protobuf.MessageCommand)
  ::google::protobuf::uint32 cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  _internal_metadata_.Clear();
}

bool MessageCommand::MergePartialFromCodedStream(
    ::google::protobuf::io::CodedInputStream* input) {
#define DO_(EXPRESSION) if (!GOOGLE_PREDICT_TRUE(EXPRESSION)) goto failure
  ::google::protobuf::uint32 tag;
  // @@protoc_insertion_point(parse_start:com.genomics.protobuf.MessageCommand)
  for (;;) {
    ::std::pair<::google::protobuf::uint32, bool> p = input->ReadTagWithCutoffNoLastTag(127u);
    tag = p.first;
    if (!p.second) goto handle_unusual;
  handle_unusual:
    if (tag == 0) {
      goto success;
    }
    DO_(::google::protobuf::internal::WireFormat::SkipField(
          input, tag, _internal_metadata_.mutable_unknown_fields()));
  }
success:
  // @@protoc_insertion_point(parse_success:com.genomics.protobuf.MessageCommand)
  return true;
failure:
  // @@protoc_insertion_point(parse_failure:com.genomics.protobuf.MessageCommand)
  return false;
#undef DO_
}

void MessageCommand::SerializeWithCachedSizes(
    ::google::protobuf::io::CodedOutputStream* output) const {
  // @@protoc_insertion_point(serialize_start:com.genomics.protobuf.MessageCommand)
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  if ((_internal_metadata_.have_unknown_fields() &&  ::google::protobuf::internal::GetProto3PreserveUnknownsDefault())) {
    ::google::protobuf::internal::WireFormat::SerializeUnknownFields(
        (::google::protobuf::internal::GetProto3PreserveUnknownsDefault()   ? _internal_metadata_.unknown_fields()   : _internal_metadata_.default_instance()), output);
  }
  // @@protoc_insertion_point(serialize_end:com.genomics.protobuf.MessageCommand)
}

::google::protobuf::uint8* MessageCommand::InternalSerializeWithCachedSizesToArray(
    bool deterministic, ::google::protobuf::uint8* target) const {
  (void)deterministic; // Unused
  // @@protoc_insertion_point(serialize_to_array_start:com.genomics.protobuf.MessageCommand)
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  if ((_internal_metadata_.have_unknown_fields() &&  ::google::protobuf::internal::GetProto3PreserveUnknownsDefault())) {
    target = ::google::protobuf::internal::WireFormat::SerializeUnknownFieldsToArray(
        (::google::protobuf::internal::GetProto3PreserveUnknownsDefault()   ? _internal_metadata_.unknown_fields()   : _internal_metadata_.default_instance()), target);
  }
  // @@protoc_insertion_point(serialize_to_array_end:com.genomics.protobuf.MessageCommand)
  return target;
}

size_t MessageCommand::ByteSizeLong() const {
// @@protoc_insertion_point(message_byte_size_start:com.genomics.protobuf.MessageCommand)
  size_t total_size = 0;

  if ((_internal_metadata_.have_unknown_fields() &&  ::google::protobuf::internal::GetProto3PreserveUnknownsDefault())) {
    total_size +=
      ::google::protobuf::internal::WireFormat::ComputeUnknownFieldsSize(
        (::google::protobuf::internal::GetProto3PreserveUnknownsDefault()   ? _internal_metadata_.unknown_fields()   : _internal_metadata_.default_instance()));
  }
  int cached_size = ::google::protobuf::internal::ToCachedSize(total_size);
  SetCachedSize(cached_size);
  return total_size;
}

void MessageCommand::MergeFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_merge_from_start:com.genomics.protobuf.MessageCommand)
  GOOGLE_DCHECK_NE(&from, this);
  const MessageCommand* source =
      ::google::protobuf::internal::DynamicCastToGenerated<const MessageCommand>(
          &from);
  if (source == NULL) {
  // @@protoc_insertion_point(generalized_merge_from_cast_fail:com.genomics.protobuf.MessageCommand)
    ::google::protobuf::internal::ReflectionOps::Merge(from, this);
  } else {
  // @@protoc_insertion_point(generalized_merge_from_cast_success:com.genomics.protobuf.MessageCommand)
    MergeFrom(*source);
  }
}

void MessageCommand::MergeFrom(const MessageCommand& from) {
// @@protoc_insertion_point(class_specific_merge_from_start:com.genomics.protobuf.MessageCommand)
  GOOGLE_DCHECK_NE(&from, this);
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

}

void MessageCommand::CopyFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_copy_from_start:com.genomics.protobuf.MessageCommand)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void MessageCommand::CopyFrom(const MessageCommand& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:com.genomics.protobuf.MessageCommand)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool MessageCommand::IsInitialized() const {
  return true;
}

void MessageCommand::Swap(MessageCommand* other) {
  if (other == this) return;
  InternalSwap(other);
}
void MessageCommand::InternalSwap(MessageCommand* other) {
  using std::swap;
  _internal_metadata_.Swap(&other->_internal_metadata_);
}

::google::protobuf::Metadata MessageCommand::GetMetadata() const {
  protobuf_MessageInfo_2eproto::protobuf_AssignDescriptorsOnce();
  return ::protobuf_MessageInfo_2eproto::file_level_metadata[kIndexInFileMessages];
}


// ===================================================================

void MessageHeader::InitAsDefaultInstance() {
}
#if !defined(_MSC_VER) || _MSC_VER >= 1900
const int MessageHeader::kVersionFieldNumber;
const int MessageHeader::kMsgIDFieldNumber;
const int MessageHeader::kMsgTypeFieldNumber;
#endif  // !defined(_MSC_VER) || _MSC_VER >= 1900

MessageHeader::MessageHeader()
  : ::google::protobuf::Message(), _internal_metadata_(NULL) {
  ::google::protobuf::internal::InitSCC(
      &protobuf_MessageInfo_2eproto::scc_info_MessageHeader.base);
  SharedCtor();
  // @@protoc_insertion_point(constructor:com.genomics.protobuf.MessageHeader)
}
MessageHeader::MessageHeader(const MessageHeader& from)
  : ::google::protobuf::Message(),
      _internal_metadata_(NULL) {
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  ::memcpy(&version_, &from.version_,
    static_cast<size_t>(reinterpret_cast<char*>(&msgtype_) -
    reinterpret_cast<char*>(&version_)) + sizeof(msgtype_));
  // @@protoc_insertion_point(copy_constructor:com.genomics.protobuf.MessageHeader)
}

void MessageHeader::SharedCtor() {
  ::memset(&version_, 0, static_cast<size_t>(
      reinterpret_cast<char*>(&msgtype_) -
      reinterpret_cast<char*>(&version_)) + sizeof(msgtype_));
}

MessageHeader::~MessageHeader() {
  // @@protoc_insertion_point(destructor:com.genomics.protobuf.MessageHeader)
  SharedDtor();
}

void MessageHeader::SharedDtor() {
}

void MessageHeader::SetCachedSize(int size) const {
  _cached_size_.Set(size);
}
const ::google::protobuf::Descriptor* MessageHeader::descriptor() {
  ::protobuf_MessageInfo_2eproto::protobuf_AssignDescriptorsOnce();
  return ::protobuf_MessageInfo_2eproto::file_level_metadata[kIndexInFileMessages].descriptor;
}

const MessageHeader& MessageHeader::default_instance() {
  ::google::protobuf::internal::InitSCC(&protobuf_MessageInfo_2eproto::scc_info_MessageHeader.base);
  return *internal_default_instance();
}


void MessageHeader::Clear() {
// @@protoc_insertion_point(message_clear_start:com.genomics.protobuf.MessageHeader)
  ::google::protobuf::uint32 cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  ::memset(&version_, 0, static_cast<size_t>(
      reinterpret_cast<char*>(&msgtype_) -
      reinterpret_cast<char*>(&version_)) + sizeof(msgtype_));
  _internal_metadata_.Clear();
}

bool MessageHeader::MergePartialFromCodedStream(
    ::google::protobuf::io::CodedInputStream* input) {
#define DO_(EXPRESSION) if (!GOOGLE_PREDICT_TRUE(EXPRESSION)) goto failure
  ::google::protobuf::uint32 tag;
  // @@protoc_insertion_point(parse_start:com.genomics.protobuf.MessageHeader)
  for (;;) {
    ::std::pair<::google::protobuf::uint32, bool> p = input->ReadTagWithCutoffNoLastTag(127u);
    tag = p.first;
    if (!p.second) goto handle_unusual;
    switch (::google::protobuf::internal::WireFormatLite::GetTagFieldNumber(tag)) {
      // uint32 version = 1;
      case 1: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(8u /* 8 & 0xFF */)) {

          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::uint32, ::google::protobuf::internal::WireFormatLite::TYPE_UINT32>(
                 input, &version_)));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // uint32 msgID = 2;
      case 2: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(16u /* 16 & 0xFF */)) {

          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::uint32, ::google::protobuf::internal::WireFormatLite::TYPE_UINT32>(
                 input, &msgid_)));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // .com.genomics.protobuf.MsgType msgType = 3;
      case 3: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(24u /* 24 & 0xFF */)) {
          int value;
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   int, ::google::protobuf::internal::WireFormatLite::TYPE_ENUM>(
                 input, &value)));
          set_msgtype(static_cast< ::com::genomics::protobuf::MsgType >(value));
        } else {
          goto handle_unusual;
        }
        break;
      }

      default: {
      handle_unusual:
        if (tag == 0) {
          goto success;
        }
        DO_(::google::protobuf::internal::WireFormat::SkipField(
              input, tag, _internal_metadata_.mutable_unknown_fields()));
        break;
      }
    }
  }
success:
  // @@protoc_insertion_point(parse_success:com.genomics.protobuf.MessageHeader)
  return true;
failure:
  // @@protoc_insertion_point(parse_failure:com.genomics.protobuf.MessageHeader)
  return false;
#undef DO_
}

void MessageHeader::SerializeWithCachedSizes(
    ::google::protobuf::io::CodedOutputStream* output) const {
  // @@protoc_insertion_point(serialize_start:com.genomics.protobuf.MessageHeader)
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  // uint32 version = 1;
  if (this->version() != 0) {
    ::google::protobuf::internal::WireFormatLite::WriteUInt32(1, this->version(), output);
  }

  // uint32 msgID = 2;
  if (this->msgid() != 0) {
    ::google::protobuf::internal::WireFormatLite::WriteUInt32(2, this->msgid(), output);
  }

  // .com.genomics.protobuf.MsgType msgType = 3;
  if (this->msgtype() != 0) {
    ::google::protobuf::internal::WireFormatLite::WriteEnum(
      3, this->msgtype(), output);
  }

  if ((_internal_metadata_.have_unknown_fields() &&  ::google::protobuf::internal::GetProto3PreserveUnknownsDefault())) {
    ::google::protobuf::internal::WireFormat::SerializeUnknownFields(
        (::google::protobuf::internal::GetProto3PreserveUnknownsDefault()   ? _internal_metadata_.unknown_fields()   : _internal_metadata_.default_instance()), output);
  }
  // @@protoc_insertion_point(serialize_end:com.genomics.protobuf.MessageHeader)
}

::google::protobuf::uint8* MessageHeader::InternalSerializeWithCachedSizesToArray(
    bool deterministic, ::google::protobuf::uint8* target) const {
  (void)deterministic; // Unused
  // @@protoc_insertion_point(serialize_to_array_start:com.genomics.protobuf.MessageHeader)
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  // uint32 version = 1;
  if (this->version() != 0) {
    target = ::google::protobuf::internal::WireFormatLite::WriteUInt32ToArray(1, this->version(), target);
  }

  // uint32 msgID = 2;
  if (this->msgid() != 0) {
    target = ::google::protobuf::internal::WireFormatLite::WriteUInt32ToArray(2, this->msgid(), target);
  }

  // .com.genomics.protobuf.MsgType msgType = 3;
  if (this->msgtype() != 0) {
    target = ::google::protobuf::internal::WireFormatLite::WriteEnumToArray(
      3, this->msgtype(), target);
  }

  if ((_internal_metadata_.have_unknown_fields() &&  ::google::protobuf::internal::GetProto3PreserveUnknownsDefault())) {
    target = ::google::protobuf::internal::WireFormat::SerializeUnknownFieldsToArray(
        (::google::protobuf::internal::GetProto3PreserveUnknownsDefault()   ? _internal_metadata_.unknown_fields()   : _internal_metadata_.default_instance()), target);
  }
  // @@protoc_insertion_point(serialize_to_array_end:com.genomics.protobuf.MessageHeader)
  return target;
}

size_t MessageHeader::ByteSizeLong() const {
// @@protoc_insertion_point(message_byte_size_start:com.genomics.protobuf.MessageHeader)
  size_t total_size = 0;

  if ((_internal_metadata_.have_unknown_fields() &&  ::google::protobuf::internal::GetProto3PreserveUnknownsDefault())) {
    total_size +=
      ::google::protobuf::internal::WireFormat::ComputeUnknownFieldsSize(
        (::google::protobuf::internal::GetProto3PreserveUnknownsDefault()   ? _internal_metadata_.unknown_fields()   : _internal_metadata_.default_instance()));
  }
  // uint32 version = 1;
  if (this->version() != 0) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::UInt32Size(
        this->version());
  }

  // uint32 msgID = 2;
  if (this->msgid() != 0) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::UInt32Size(
        this->msgid());
  }

  // .com.genomics.protobuf.MsgType msgType = 3;
  if (this->msgtype() != 0) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::EnumSize(this->msgtype());
  }

  int cached_size = ::google::protobuf::internal::ToCachedSize(total_size);
  SetCachedSize(cached_size);
  return total_size;
}

void MessageHeader::MergeFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_merge_from_start:com.genomics.protobuf.MessageHeader)
  GOOGLE_DCHECK_NE(&from, this);
  const MessageHeader* source =
      ::google::protobuf::internal::DynamicCastToGenerated<const MessageHeader>(
          &from);
  if (source == NULL) {
  // @@protoc_insertion_point(generalized_merge_from_cast_fail:com.genomics.protobuf.MessageHeader)
    ::google::protobuf::internal::ReflectionOps::Merge(from, this);
  } else {
  // @@protoc_insertion_point(generalized_merge_from_cast_success:com.genomics.protobuf.MessageHeader)
    MergeFrom(*source);
  }
}

void MessageHeader::MergeFrom(const MessageHeader& from) {
// @@protoc_insertion_point(class_specific_merge_from_start:com.genomics.protobuf.MessageHeader)
  GOOGLE_DCHECK_NE(&from, this);
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  if (from.version() != 0) {
    set_version(from.version());
  }
  if (from.msgid() != 0) {
    set_msgid(from.msgid());
  }
  if (from.msgtype() != 0) {
    set_msgtype(from.msgtype());
  }
}

void MessageHeader::CopyFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_copy_from_start:com.genomics.protobuf.MessageHeader)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void MessageHeader::CopyFrom(const MessageHeader& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:com.genomics.protobuf.MessageHeader)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool MessageHeader::IsInitialized() const {
  return true;
}

void MessageHeader::Swap(MessageHeader* other) {
  if (other == this) return;
  InternalSwap(other);
}
void MessageHeader::InternalSwap(MessageHeader* other) {
  using std::swap;
  swap(version_, other->version_);
  swap(msgid_, other->msgid_);
  swap(msgtype_, other->msgtype_);
  _internal_metadata_.Swap(&other->_internal_metadata_);
}

::google::protobuf::Metadata MessageHeader::GetMetadata() const {
  protobuf_MessageInfo_2eproto::protobuf_AssignDescriptorsOnce();
  return ::protobuf_MessageInfo_2eproto::file_level_metadata[kIndexInFileMessages];
}


// ===================================================================

void MessageBody::InitAsDefaultInstance() {
  ::com::genomics::protobuf::_MessageBody_default_instance_._instance.get_mutable()->msgrequest_ = const_cast< ::com::genomics::protobuf::MessageRequest*>(
      ::com::genomics::protobuf::MessageRequest::internal_default_instance());
  ::com::genomics::protobuf::_MessageBody_default_instance_._instance.get_mutable()->msgresponse_ = const_cast< ::com::genomics::protobuf::MessageResponse*>(
      ::com::genomics::protobuf::MessageResponse::internal_default_instance());
  ::com::genomics::protobuf::_MessageBody_default_instance_._instance.get_mutable()->msgpush_ = const_cast< ::com::genomics::protobuf::MessagePush*>(
      ::com::genomics::protobuf::MessagePush::internal_default_instance());
  ::com::genomics::protobuf::_MessageBody_default_instance_._instance.get_mutable()->msgpull_ = const_cast< ::com::genomics::protobuf::MessagePull*>(
      ::com::genomics::protobuf::MessagePull::internal_default_instance());
  ::com::genomics::protobuf::_MessageBody_default_instance_._instance.get_mutable()->msgcommand_ = const_cast< ::com::genomics::protobuf::MessageCommand*>(
      ::com::genomics::protobuf::MessageCommand::internal_default_instance());
}
#if !defined(_MSC_VER) || _MSC_VER >= 1900
const int MessageBody::kMsgRequestFieldNumber;
const int MessageBody::kMsgResponseFieldNumber;
const int MessageBody::kMsgPushFieldNumber;
const int MessageBody::kMsgPullFieldNumber;
const int MessageBody::kMsgCommandFieldNumber;
#endif  // !defined(_MSC_VER) || _MSC_VER >= 1900

MessageBody::MessageBody()
  : ::google::protobuf::Message(), _internal_metadata_(NULL) {
  ::google::protobuf::internal::InitSCC(
      &protobuf_MessageInfo_2eproto::scc_info_MessageBody.base);
  SharedCtor();
  // @@protoc_insertion_point(constructor:com.genomics.protobuf.MessageBody)
}
MessageBody::MessageBody(const MessageBody& from)
  : ::google::protobuf::Message(),
      _internal_metadata_(NULL) {
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  if (from.has_msgrequest()) {
    msgrequest_ = new ::com::genomics::protobuf::MessageRequest(*from.msgrequest_);
  } else {
    msgrequest_ = NULL;
  }
  if (from.has_msgresponse()) {
    msgresponse_ = new ::com::genomics::protobuf::MessageResponse(*from.msgresponse_);
  } else {
    msgresponse_ = NULL;
  }
  if (from.has_msgpush()) {
    msgpush_ = new ::com::genomics::protobuf::MessagePush(*from.msgpush_);
  } else {
    msgpush_ = NULL;
  }
  if (from.has_msgpull()) {
    msgpull_ = new ::com::genomics::protobuf::MessagePull(*from.msgpull_);
  } else {
    msgpull_ = NULL;
  }
  if (from.has_msgcommand()) {
    msgcommand_ = new ::com::genomics::protobuf::MessageCommand(*from.msgcommand_);
  } else {
    msgcommand_ = NULL;
  }
  // @@protoc_insertion_point(copy_constructor:com.genomics.protobuf.MessageBody)
}

void MessageBody::SharedCtor() {
  ::memset(&msgrequest_, 0, static_cast<size_t>(
      reinterpret_cast<char*>(&msgcommand_) -
      reinterpret_cast<char*>(&msgrequest_)) + sizeof(msgcommand_));
}

MessageBody::~MessageBody() {
  // @@protoc_insertion_point(destructor:com.genomics.protobuf.MessageBody)
  SharedDtor();
}

void MessageBody::SharedDtor() {
  if (this != internal_default_instance()) delete msgrequest_;
  if (this != internal_default_instance()) delete msgresponse_;
  if (this != internal_default_instance()) delete msgpush_;
  if (this != internal_default_instance()) delete msgpull_;
  if (this != internal_default_instance()) delete msgcommand_;
}

void MessageBody::SetCachedSize(int size) const {
  _cached_size_.Set(size);
}
const ::google::protobuf::Descriptor* MessageBody::descriptor() {
  ::protobuf_MessageInfo_2eproto::protobuf_AssignDescriptorsOnce();
  return ::protobuf_MessageInfo_2eproto::file_level_metadata[kIndexInFileMessages].descriptor;
}

const MessageBody& MessageBody::default_instance() {
  ::google::protobuf::internal::InitSCC(&protobuf_MessageInfo_2eproto::scc_info_MessageBody.base);
  return *internal_default_instance();
}


void MessageBody::Clear() {
// @@protoc_insertion_point(message_clear_start:com.genomics.protobuf.MessageBody)
  ::google::protobuf::uint32 cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  if (GetArenaNoVirtual() == NULL && msgrequest_ != NULL) {
    delete msgrequest_;
  }
  msgrequest_ = NULL;
  if (GetArenaNoVirtual() == NULL && msgresponse_ != NULL) {
    delete msgresponse_;
  }
  msgresponse_ = NULL;
  if (GetArenaNoVirtual() == NULL && msgpush_ != NULL) {
    delete msgpush_;
  }
  msgpush_ = NULL;
  if (GetArenaNoVirtual() == NULL && msgpull_ != NULL) {
    delete msgpull_;
  }
  msgpull_ = NULL;
  if (GetArenaNoVirtual() == NULL && msgcommand_ != NULL) {
    delete msgcommand_;
  }
  msgcommand_ = NULL;
  _internal_metadata_.Clear();
}

bool MessageBody::MergePartialFromCodedStream(
    ::google::protobuf::io::CodedInputStream* input) {
#define DO_(EXPRESSION) if (!GOOGLE_PREDICT_TRUE(EXPRESSION)) goto failure
  ::google::protobuf::uint32 tag;
  // @@protoc_insertion_point(parse_start:com.genomics.protobuf.MessageBody)
  for (;;) {
    ::std::pair<::google::protobuf::uint32, bool> p = input->ReadTagWithCutoffNoLastTag(127u);
    tag = p.first;
    if (!p.second) goto handle_unusual;
    switch (::google::protobuf::internal::WireFormatLite::GetTagFieldNumber(tag)) {
      // .com.genomics.protobuf.MessageRequest msgRequest = 1;
      case 1: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(10u /* 10 & 0xFF */)) {
          DO_(::google::protobuf::internal::WireFormatLite::ReadMessage(
               input, mutable_msgrequest()));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // .com.genomics.protobuf.MessageResponse msgResponse = 2;
      case 2: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(18u /* 18 & 0xFF */)) {
          DO_(::google::protobuf::internal::WireFormatLite::ReadMessage(
               input, mutable_msgresponse()));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // .com.genomics.protobuf.MessagePush msgPush = 3;
      case 3: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(26u /* 26 & 0xFF */)) {
          DO_(::google::protobuf::internal::WireFormatLite::ReadMessage(
               input, mutable_msgpush()));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // .com.genomics.protobuf.MessagePull msgPull = 4;
      case 4: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(34u /* 34 & 0xFF */)) {
          DO_(::google::protobuf::internal::WireFormatLite::ReadMessage(
               input, mutable_msgpull()));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // .com.genomics.protobuf.MessageCommand msgCommand = 5;
      case 5: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(42u /* 42 & 0xFF */)) {
          DO_(::google::protobuf::internal::WireFormatLite::ReadMessage(
               input, mutable_msgcommand()));
        } else {
          goto handle_unusual;
        }
        break;
      }

      default: {
      handle_unusual:
        if (tag == 0) {
          goto success;
        }
        DO_(::google::protobuf::internal::WireFormat::SkipField(
              input, tag, _internal_metadata_.mutable_unknown_fields()));
        break;
      }
    }
  }
success:
  // @@protoc_insertion_point(parse_success:com.genomics.protobuf.MessageBody)
  return true;
failure:
  // @@protoc_insertion_point(parse_failure:com.genomics.protobuf.MessageBody)
  return false;
#undef DO_
}

void MessageBody::SerializeWithCachedSizes(
    ::google::protobuf::io::CodedOutputStream* output) const {
  // @@protoc_insertion_point(serialize_start:com.genomics.protobuf.MessageBody)
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  // .com.genomics.protobuf.MessageRequest msgRequest = 1;
  if (this->has_msgrequest()) {
    ::google::protobuf::internal::WireFormatLite::WriteMessageMaybeToArray(
      1, this->_internal_msgrequest(), output);
  }

  // .com.genomics.protobuf.MessageResponse msgResponse = 2;
  if (this->has_msgresponse()) {
    ::google::protobuf::internal::WireFormatLite::WriteMessageMaybeToArray(
      2, this->_internal_msgresponse(), output);
  }

  // .com.genomics.protobuf.MessagePush msgPush = 3;
  if (this->has_msgpush()) {
    ::google::protobuf::internal::WireFormatLite::WriteMessageMaybeToArray(
      3, this->_internal_msgpush(), output);
  }

  // .com.genomics.protobuf.MessagePull msgPull = 4;
  if (this->has_msgpull()) {
    ::google::protobuf::internal::WireFormatLite::WriteMessageMaybeToArray(
      4, this->_internal_msgpull(), output);
  }

  // .com.genomics.protobuf.MessageCommand msgCommand = 5;
  if (this->has_msgcommand()) {
    ::google::protobuf::internal::WireFormatLite::WriteMessageMaybeToArray(
      5, this->_internal_msgcommand(), output);
  }

  if ((_internal_metadata_.have_unknown_fields() &&  ::google::protobuf::internal::GetProto3PreserveUnknownsDefault())) {
    ::google::protobuf::internal::WireFormat::SerializeUnknownFields(
        (::google::protobuf::internal::GetProto3PreserveUnknownsDefault()   ? _internal_metadata_.unknown_fields()   : _internal_metadata_.default_instance()), output);
  }
  // @@protoc_insertion_point(serialize_end:com.genomics.protobuf.MessageBody)
}

::google::protobuf::uint8* MessageBody::InternalSerializeWithCachedSizesToArray(
    bool deterministic, ::google::protobuf::uint8* target) const {
  (void)deterministic; // Unused
  // @@protoc_insertion_point(serialize_to_array_start:com.genomics.protobuf.MessageBody)
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  // .com.genomics.protobuf.MessageRequest msgRequest = 1;
  if (this->has_msgrequest()) {
    target = ::google::protobuf::internal::WireFormatLite::
      InternalWriteMessageToArray(
        1, this->_internal_msgrequest(), deterministic, target);
  }

  // .com.genomics.protobuf.MessageResponse msgResponse = 2;
  if (this->has_msgresponse()) {
    target = ::google::protobuf::internal::WireFormatLite::
      InternalWriteMessageToArray(
        2, this->_internal_msgresponse(), deterministic, target);
  }

  // .com.genomics.protobuf.MessagePush msgPush = 3;
  if (this->has_msgpush()) {
    target = ::google::protobuf::internal::WireFormatLite::
      InternalWriteMessageToArray(
        3, this->_internal_msgpush(), deterministic, target);
  }

  // .com.genomics.protobuf.MessagePull msgPull = 4;
  if (this->has_msgpull()) {
    target = ::google::protobuf::internal::WireFormatLite::
      InternalWriteMessageToArray(
        4, this->_internal_msgpull(), deterministic, target);
  }

  // .com.genomics.protobuf.MessageCommand msgCommand = 5;
  if (this->has_msgcommand()) {
    target = ::google::protobuf::internal::WireFormatLite::
      InternalWriteMessageToArray(
        5, this->_internal_msgcommand(), deterministic, target);
  }

  if ((_internal_metadata_.have_unknown_fields() &&  ::google::protobuf::internal::GetProto3PreserveUnknownsDefault())) {
    target = ::google::protobuf::internal::WireFormat::SerializeUnknownFieldsToArray(
        (::google::protobuf::internal::GetProto3PreserveUnknownsDefault()   ? _internal_metadata_.unknown_fields()   : _internal_metadata_.default_instance()), target);
  }
  // @@protoc_insertion_point(serialize_to_array_end:com.genomics.protobuf.MessageBody)
  return target;
}

size_t MessageBody::ByteSizeLong() const {
// @@protoc_insertion_point(message_byte_size_start:com.genomics.protobuf.MessageBody)
  size_t total_size = 0;

  if ((_internal_metadata_.have_unknown_fields() &&  ::google::protobuf::internal::GetProto3PreserveUnknownsDefault())) {
    total_size +=
      ::google::protobuf::internal::WireFormat::ComputeUnknownFieldsSize(
        (::google::protobuf::internal::GetProto3PreserveUnknownsDefault()   ? _internal_metadata_.unknown_fields()   : _internal_metadata_.default_instance()));
  }
  // .com.genomics.protobuf.MessageRequest msgRequest = 1;
  if (this->has_msgrequest()) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::MessageSize(
        *msgrequest_);
  }

  // .com.genomics.protobuf.MessageResponse msgResponse = 2;
  if (this->has_msgresponse()) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::MessageSize(
        *msgresponse_);
  }

  // .com.genomics.protobuf.MessagePush msgPush = 3;
  if (this->has_msgpush()) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::MessageSize(
        *msgpush_);
  }

  // .com.genomics.protobuf.MessagePull msgPull = 4;
  if (this->has_msgpull()) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::MessageSize(
        *msgpull_);
  }

  // .com.genomics.protobuf.MessageCommand msgCommand = 5;
  if (this->has_msgcommand()) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::MessageSize(
        *msgcommand_);
  }

  int cached_size = ::google::protobuf::internal::ToCachedSize(total_size);
  SetCachedSize(cached_size);
  return total_size;
}

void MessageBody::MergeFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_merge_from_start:com.genomics.protobuf.MessageBody)
  GOOGLE_DCHECK_NE(&from, this);
  const MessageBody* source =
      ::google::protobuf::internal::DynamicCastToGenerated<const MessageBody>(
          &from);
  if (source == NULL) {
  // @@protoc_insertion_point(generalized_merge_from_cast_fail:com.genomics.protobuf.MessageBody)
    ::google::protobuf::internal::ReflectionOps::Merge(from, this);
  } else {
  // @@protoc_insertion_point(generalized_merge_from_cast_success:com.genomics.protobuf.MessageBody)
    MergeFrom(*source);
  }
}

void MessageBody::MergeFrom(const MessageBody& from) {
// @@protoc_insertion_point(class_specific_merge_from_start:com.genomics.protobuf.MessageBody)
  GOOGLE_DCHECK_NE(&from, this);
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  if (from.has_msgrequest()) {
    mutable_msgrequest()->::com::genomics::protobuf::MessageRequest::MergeFrom(from.msgrequest());
  }
  if (from.has_msgresponse()) {
    mutable_msgresponse()->::com::genomics::protobuf::MessageResponse::MergeFrom(from.msgresponse());
  }
  if (from.has_msgpush()) {
    mutable_msgpush()->::com::genomics::protobuf::MessagePush::MergeFrom(from.msgpush());
  }
  if (from.has_msgpull()) {
    mutable_msgpull()->::com::genomics::protobuf::MessagePull::MergeFrom(from.msgpull());
  }
  if (from.has_msgcommand()) {
    mutable_msgcommand()->::com::genomics::protobuf::MessageCommand::MergeFrom(from.msgcommand());
  }
}

void MessageBody::CopyFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_copy_from_start:com.genomics.protobuf.MessageBody)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void MessageBody::CopyFrom(const MessageBody& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:com.genomics.protobuf.MessageBody)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool MessageBody::IsInitialized() const {
  return true;
}

void MessageBody::Swap(MessageBody* other) {
  if (other == this) return;
  InternalSwap(other);
}
void MessageBody::InternalSwap(MessageBody* other) {
  using std::swap;
  swap(msgrequest_, other->msgrequest_);
  swap(msgresponse_, other->msgresponse_);
  swap(msgpush_, other->msgpush_);
  swap(msgpull_, other->msgpull_);
  swap(msgcommand_, other->msgcommand_);
  _internal_metadata_.Swap(&other->_internal_metadata_);
}

::google::protobuf::Metadata MessageBody::GetMetadata() const {
  protobuf_MessageInfo_2eproto::protobuf_AssignDescriptorsOnce();
  return ::protobuf_MessageInfo_2eproto::file_level_metadata[kIndexInFileMessages];
}


// ===================================================================

void MessageInfo::InitAsDefaultInstance() {
  ::com::genomics::protobuf::_MessageInfo_default_instance_._instance.get_mutable()->msgheader_ = const_cast< ::com::genomics::protobuf::MessageHeader*>(
      ::com::genomics::protobuf::MessageHeader::internal_default_instance());
  ::com::genomics::protobuf::_MessageInfo_default_instance_._instance.get_mutable()->msgbody_ = const_cast< ::com::genomics::protobuf::MessageBody*>(
      ::com::genomics::protobuf::MessageBody::internal_default_instance());
}
#if !defined(_MSC_VER) || _MSC_VER >= 1900
const int MessageInfo::kMsgHeaderFieldNumber;
const int MessageInfo::kMsgBodyFieldNumber;
#endif  // !defined(_MSC_VER) || _MSC_VER >= 1900

MessageInfo::MessageInfo()
  : ::google::protobuf::Message(), _internal_metadata_(NULL) {
  ::google::protobuf::internal::InitSCC(
      &protobuf_MessageInfo_2eproto::scc_info_MessageInfo.base);
  SharedCtor();
  // @@protoc_insertion_point(constructor:com.genomics.protobuf.MessageInfo)
}
MessageInfo::MessageInfo(const MessageInfo& from)
  : ::google::protobuf::Message(),
      _internal_metadata_(NULL) {
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  if (from.has_msgheader()) {
    msgheader_ = new ::com::genomics::protobuf::MessageHeader(*from.msgheader_);
  } else {
    msgheader_ = NULL;
  }
  if (from.has_msgbody()) {
    msgbody_ = new ::com::genomics::protobuf::MessageBody(*from.msgbody_);
  } else {
    msgbody_ = NULL;
  }
  // @@protoc_insertion_point(copy_constructor:com.genomics.protobuf.MessageInfo)
}

void MessageInfo::SharedCtor() {
  ::memset(&msgheader_, 0, static_cast<size_t>(
      reinterpret_cast<char*>(&msgbody_) -
      reinterpret_cast<char*>(&msgheader_)) + sizeof(msgbody_));
}

MessageInfo::~MessageInfo() {
  // @@protoc_insertion_point(destructor:com.genomics.protobuf.MessageInfo)
  SharedDtor();
}

void MessageInfo::SharedDtor() {
  if (this != internal_default_instance()) delete msgheader_;
  if (this != internal_default_instance()) delete msgbody_;
}

void MessageInfo::SetCachedSize(int size) const {
  _cached_size_.Set(size);
}
const ::google::protobuf::Descriptor* MessageInfo::descriptor() {
  ::protobuf_MessageInfo_2eproto::protobuf_AssignDescriptorsOnce();
  return ::protobuf_MessageInfo_2eproto::file_level_metadata[kIndexInFileMessages].descriptor;
}

const MessageInfo& MessageInfo::default_instance() {
  ::google::protobuf::internal::InitSCC(&protobuf_MessageInfo_2eproto::scc_info_MessageInfo.base);
  return *internal_default_instance();
}


void MessageInfo::Clear() {
// @@protoc_insertion_point(message_clear_start:com.genomics.protobuf.MessageInfo)
  ::google::protobuf::uint32 cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  if (GetArenaNoVirtual() == NULL && msgheader_ != NULL) {
    delete msgheader_;
  }
  msgheader_ = NULL;
  if (GetArenaNoVirtual() == NULL && msgbody_ != NULL) {
    delete msgbody_;
  }
  msgbody_ = NULL;
  _internal_metadata_.Clear();
}

bool MessageInfo::MergePartialFromCodedStream(
    ::google::protobuf::io::CodedInputStream* input) {
#define DO_(EXPRESSION) if (!GOOGLE_PREDICT_TRUE(EXPRESSION)) goto failure
  ::google::protobuf::uint32 tag;
  // @@protoc_insertion_point(parse_start:com.genomics.protobuf.MessageInfo)
  for (;;) {
    ::std::pair<::google::protobuf::uint32, bool> p = input->ReadTagWithCutoffNoLastTag(127u);
    tag = p.first;
    if (!p.second) goto handle_unusual;
    switch (::google::protobuf::internal::WireFormatLite::GetTagFieldNumber(tag)) {
      // .com.genomics.protobuf.MessageHeader msgHeader = 1;
      case 1: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(10u /* 10 & 0xFF */)) {
          DO_(::google::protobuf::internal::WireFormatLite::ReadMessage(
               input, mutable_msgheader()));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // .com.genomics.protobuf.MessageBody msgBody = 2;
      case 2: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(18u /* 18 & 0xFF */)) {
          DO_(::google::protobuf::internal::WireFormatLite::ReadMessage(
               input, mutable_msgbody()));
        } else {
          goto handle_unusual;
        }
        break;
      }

      default: {
      handle_unusual:
        if (tag == 0) {
          goto success;
        }
        DO_(::google::protobuf::internal::WireFormat::SkipField(
              input, tag, _internal_metadata_.mutable_unknown_fields()));
        break;
      }
    }
  }
success:
  // @@protoc_insertion_point(parse_success:com.genomics.protobuf.MessageInfo)
  return true;
failure:
  // @@protoc_insertion_point(parse_failure:com.genomics.protobuf.MessageInfo)
  return false;
#undef DO_
}

void MessageInfo::SerializeWithCachedSizes(
    ::google::protobuf::io::CodedOutputStream* output) const {
  // @@protoc_insertion_point(serialize_start:com.genomics.protobuf.MessageInfo)
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  // .com.genomics.protobuf.MessageHeader msgHeader = 1;
  if (this->has_msgheader()) {
    ::google::protobuf::internal::WireFormatLite::WriteMessageMaybeToArray(
      1, this->_internal_msgheader(), output);
  }

  // .com.genomics.protobuf.MessageBody msgBody = 2;
  if (this->has_msgbody()) {
    ::google::protobuf::internal::WireFormatLite::WriteMessageMaybeToArray(
      2, this->_internal_msgbody(), output);
  }

  if ((_internal_metadata_.have_unknown_fields() &&  ::google::protobuf::internal::GetProto3PreserveUnknownsDefault())) {
    ::google::protobuf::internal::WireFormat::SerializeUnknownFields(
        (::google::protobuf::internal::GetProto3PreserveUnknownsDefault()   ? _internal_metadata_.unknown_fields()   : _internal_metadata_.default_instance()), output);
  }
  // @@protoc_insertion_point(serialize_end:com.genomics.protobuf.MessageInfo)
}

::google::protobuf::uint8* MessageInfo::InternalSerializeWithCachedSizesToArray(
    bool deterministic, ::google::protobuf::uint8* target) const {
  (void)deterministic; // Unused
  // @@protoc_insertion_point(serialize_to_array_start:com.genomics.protobuf.MessageInfo)
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  // .com.genomics.protobuf.MessageHeader msgHeader = 1;
  if (this->has_msgheader()) {
    target = ::google::protobuf::internal::WireFormatLite::
      InternalWriteMessageToArray(
        1, this->_internal_msgheader(), deterministic, target);
  }

  // .com.genomics.protobuf.MessageBody msgBody = 2;
  if (this->has_msgbody()) {
    target = ::google::protobuf::internal::WireFormatLite::
      InternalWriteMessageToArray(
        2, this->_internal_msgbody(), deterministic, target);
  }

  if ((_internal_metadata_.have_unknown_fields() &&  ::google::protobuf::internal::GetProto3PreserveUnknownsDefault())) {
    target = ::google::protobuf::internal::WireFormat::SerializeUnknownFieldsToArray(
        (::google::protobuf::internal::GetProto3PreserveUnknownsDefault()   ? _internal_metadata_.unknown_fields()   : _internal_metadata_.default_instance()), target);
  }
  // @@protoc_insertion_point(serialize_to_array_end:com.genomics.protobuf.MessageInfo)
  return target;
}

size_t MessageInfo::ByteSizeLong() const {
// @@protoc_insertion_point(message_byte_size_start:com.genomics.protobuf.MessageInfo)
  size_t total_size = 0;

  if ((_internal_metadata_.have_unknown_fields() &&  ::google::protobuf::internal::GetProto3PreserveUnknownsDefault())) {
    total_size +=
      ::google::protobuf::internal::WireFormat::ComputeUnknownFieldsSize(
        (::google::protobuf::internal::GetProto3PreserveUnknownsDefault()   ? _internal_metadata_.unknown_fields()   : _internal_metadata_.default_instance()));
  }
  // .com.genomics.protobuf.MessageHeader msgHeader = 1;
  if (this->has_msgheader()) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::MessageSize(
        *msgheader_);
  }

  // .com.genomics.protobuf.MessageBody msgBody = 2;
  if (this->has_msgbody()) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::MessageSize(
        *msgbody_);
  }

  int cached_size = ::google::protobuf::internal::ToCachedSize(total_size);
  SetCachedSize(cached_size);
  return total_size;
}

void MessageInfo::MergeFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_merge_from_start:com.genomics.protobuf.MessageInfo)
  GOOGLE_DCHECK_NE(&from, this);
  const MessageInfo* source =
      ::google::protobuf::internal::DynamicCastToGenerated<const MessageInfo>(
          &from);
  if (source == NULL) {
  // @@protoc_insertion_point(generalized_merge_from_cast_fail:com.genomics.protobuf.MessageInfo)
    ::google::protobuf::internal::ReflectionOps::Merge(from, this);
  } else {
  // @@protoc_insertion_point(generalized_merge_from_cast_success:com.genomics.protobuf.MessageInfo)
    MergeFrom(*source);
  }
}

void MessageInfo::MergeFrom(const MessageInfo& from) {
// @@protoc_insertion_point(class_specific_merge_from_start:com.genomics.protobuf.MessageInfo)
  GOOGLE_DCHECK_NE(&from, this);
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  if (from.has_msgheader()) {
    mutable_msgheader()->::com::genomics::protobuf::MessageHeader::MergeFrom(from.msgheader());
  }
  if (from.has_msgbody()) {
    mutable_msgbody()->::com::genomics::protobuf::MessageBody::MergeFrom(from.msgbody());
  }
}

void MessageInfo::CopyFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_copy_from_start:com.genomics.protobuf.MessageInfo)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void MessageInfo::CopyFrom(const MessageInfo& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:com.genomics.protobuf.MessageInfo)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool MessageInfo::IsInitialized() const {
  return true;
}

void MessageInfo::Swap(MessageInfo* other) {
  if (other == this) return;
  InternalSwap(other);
}
void MessageInfo::InternalSwap(MessageInfo* other) {
  using std::swap;
  swap(msgheader_, other->msgheader_);
  swap(msgbody_, other->msgbody_);
  _internal_metadata_.Swap(&other->_internal_metadata_);
}

::google::protobuf::Metadata MessageInfo::GetMetadata() const {
  protobuf_MessageInfo_2eproto::protobuf_AssignDescriptorsOnce();
  return ::protobuf_MessageInfo_2eproto::file_level_metadata[kIndexInFileMessages];
}


// @@protoc_insertion_point(namespace_scope)
}  // namespace protobuf
}  // namespace genomics
}  // namespace com
namespace google {
namespace protobuf {
template<> GOOGLE_PROTOBUF_ATTRIBUTE_NOINLINE ::com::genomics::protobuf::MessageRequest* Arena::CreateMaybeMessage< ::com::genomics::protobuf::MessageRequest >(Arena* arena) {
  return Arena::CreateInternal< ::com::genomics::protobuf::MessageRequest >(arena);
}
template<> GOOGLE_PROTOBUF_ATTRIBUTE_NOINLINE ::com::genomics::protobuf::MessageResponse* Arena::CreateMaybeMessage< ::com::genomics::protobuf::MessageResponse >(Arena* arena) {
  return Arena::CreateInternal< ::com::genomics::protobuf::MessageResponse >(arena);
}
template<> GOOGLE_PROTOBUF_ATTRIBUTE_NOINLINE ::com::genomics::protobuf::MessagePush* Arena::CreateMaybeMessage< ::com::genomics::protobuf::MessagePush >(Arena* arena) {
  return Arena::CreateInternal< ::com::genomics::protobuf::MessagePush >(arena);
}
template<> GOOGLE_PROTOBUF_ATTRIBUTE_NOINLINE ::com::genomics::protobuf::MessagePull* Arena::CreateMaybeMessage< ::com::genomics::protobuf::MessagePull >(Arena* arena) {
  return Arena::CreateInternal< ::com::genomics::protobuf::MessagePull >(arena);
}
template<> GOOGLE_PROTOBUF_ATTRIBUTE_NOINLINE ::com::genomics::protobuf::MessageCommand* Arena::CreateMaybeMessage< ::com::genomics::protobuf::MessageCommand >(Arena* arena) {
  return Arena::CreateInternal< ::com::genomics::protobuf::MessageCommand >(arena);
}
template<> GOOGLE_PROTOBUF_ATTRIBUTE_NOINLINE ::com::genomics::protobuf::MessageHeader* Arena::CreateMaybeMessage< ::com::genomics::protobuf::MessageHeader >(Arena* arena) {
  return Arena::CreateInternal< ::com::genomics::protobuf::MessageHeader >(arena);
}
template<> GOOGLE_PROTOBUF_ATTRIBUTE_NOINLINE ::com::genomics::protobuf::MessageBody* Arena::CreateMaybeMessage< ::com::genomics::protobuf::MessageBody >(Arena* arena) {
  return Arena::CreateInternal< ::com::genomics::protobuf::MessageBody >(arena);
}
template<> GOOGLE_PROTOBUF_ATTRIBUTE_NOINLINE ::com::genomics::protobuf::MessageInfo* Arena::CreateMaybeMessage< ::com::genomics::protobuf::MessageInfo >(Arena* arena) {
  return Arena::CreateInternal< ::com::genomics::protobuf::MessageInfo >(arena);
}
}  // namespace protobuf
}  // namespace google

// @@protoc_insertion_point(global_scope)
